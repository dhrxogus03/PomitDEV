<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.3ds.com/xsd/XPDMXML" xmlns:info="http://www.3ds.com/xsd/XPDMXML/info" targetNamespace="http://www.3ds.com/xsd/XPDMXML" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.2">
  <xsd:annotation>
    <xsd:documentation>
      <info:change version="2.0">
      </info:change>
      <info:change version="2.1">
        -Adding new types Bridge, Road, Railway, Tunnel, Subgrade
        -Adding new parameters associated to new types
      </info:change>
      <info:change version="2.2">
        -Adding new types Mechanical Fasteners and Stockpile
        -Adding new Qto parameters
      </info:change>
    </xsd:documentation>
  </xsd:annotation>
  <!--    -->
  <xsd:include schemaLocation="XPDMXMLCore.xsd"/>
  <xsd:include schemaLocation="XPDMXMLProduct.xsd"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductAECBase">
    <xsd:annotation>
      <xsd:documentation>Base AEC Product</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "Product3DType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element abstract = "true" name = "ProductAECBase" type = "ProductAECBase"/>
  <!--    -->
  <xsd:group name = "ProductAECGroup">
    <xsd:choice>
      <xsd:element maxOccurs = "unbounded" minOccurs = "0" ref = "ProductAECBase"/>
    </xsd:choice>
  </xsd:group>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductElementBase">
    <xsd:annotation>
      <xsd:documentation>AecElement definitions are the generalization of any business object that makes up an AEC product. Those elements can be logically contained by an AEC Spatial Structure Element that constitutes a certain level within a project structure hierarchy (e.g. Building, BuildingStorey). AEC Elements are physically existing objects remaining either permanently in the AEC product, or only temporarily, as formwork does. AEC Elements can be either assembled on site or pre-manufactured and built in on site. AecWall and AecWindow are two standard AEC Elements. An AEC Element can also be defined as an element assembly that is a group of semantically and topologically related elements that form a higher level part of the AEC product.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductElementAssemblyType">
    <xsd:annotation>
      <xsd:documentation>It represents complex element assemblies aggregated from several elements, such as discrete elements, building elements, or other elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "ElementAssemblyAttributes" type = "IfcElementAssembly"/>
          <xsd:element minOccurs = "0" name = "ElementAssemblyCommon" type = "IfcPset_ElementAssemblyCommon"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "ElementAssembly" substitutionGroup = "ProductAECBase" type = "ProductElementAssemblyType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductArchitecturalElementBase">
    <xsd:annotation>
      <xsd:documentation>Parent for all Architectural elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductChimneyType">
    <xsd:annotation>
      <xsd:documentation>
    Chimneys are typically vertical, or as near as vertical, parts of the construction of a building and part of the building fabric. Often constructed by pre-cast or in-situ concrete, today seldom by bricks.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "ChimneyAttributes" type = "IfcChimney"/>
          <xsd:element minOccurs = "0" name = "ChimneyCommon" type = "IfcPset_ChimneyCommon"/>
          <xsd:element minOccurs = "0" name = "ChimneyBaseQuantities" type = "IfcQto_ChimneyBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Chimney" substitutionGroup = "ProductAECBase" type = "ProductChimneyType"/>
  <!--    -->
  <!--    -->
  <xsd:group name = "ProductElementBase1Group">
    <xsd:choice>
      <xsd:element minOccurs = "0" name = "Condition" type = "IfcPset_Condition"/>
      <xsd:element minOccurs = "0" name = "EnvironmentalImpactIndicators" type = "IfcPset_EnvironmentalImpactIndicators"/>
      <xsd:element minOccurs = "0" name = "EnvironmentalImpactValues" type = "IfcPset_EnvironmentalImpactValues"/>
      <xsd:element minOccurs = "0" name = "ManufacturerOccurrence" type = "IfcPset_ManufacturerOccurrence"/>
      <xsd:element minOccurs = "0" name = "ManufacturerTypeInformation" type = "IfcPset_ManufacturerTypeInformation"/>
      <xsd:element minOccurs = "0" name = "PackingInstructions" type = "IfcPset_PackingInstructions"/>
      <xsd:element minOccurs = "0" name = "ServiceLife" type = "IfcPset_ServiceLife"/>
      <xsd:element minOccurs = "0" name = "Warranty" type = "IfcPset_Warranty"/>
    </xsd:choice>
  </xsd:group>
  <xsd:group name = "ProductElementBaseGroup">
    <xsd:choice>
      <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
      <xsd:element minOccurs = "0" name = "ConcreteElementGeneral" type = "IfcPset_ConcreteElementGeneral"/>
      <xsd:element minOccurs = "0" name = "PrecastConcreteElementFabrication" type = "IfcPset_PrecastConcreteElementFabrication"/>
      <xsd:element minOccurs = "0" name = "PrecastConcreteElementGeneral" type = "IfcPset_PrecastConcreteElementGeneral"/>
    </xsd:choice>
  </xsd:group>
  <!--    -->
  <xsd:complexType name = "ProductCoveringType">
    <xsd:annotation>
      <xsd:documentation>A covering is an element which covers some part of another element and is fully dependent on that other element.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "CoveringAttributes" type = "IfcCovering"/>
          <xsd:element minOccurs = "0" name = "CoveringCommon" type = "IfcPset_CoveringCommon"/>
          <xsd:element minOccurs = "0" name = "CoveringCeiling" type = "IfcPset_CoveringCeiling"/>
          <xsd:element minOccurs = "0" name = "CoveringFlooring" type = "IfcPset_CoveringFlooring"/>
          <xsd:element minOccurs = "0" name = "CoveringBaseQuantities" type = "IfcQto_CoveringBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Covering" substitutionGroup = "ProductAECBase" type = "ProductCoveringType"/>
  <!--    -->
  <xsd:complexType name = "ProductCurtainWallType">
    <xsd:annotation>
      <xsd:documentation>A curtain wall is an exterior wall of a building which is an assembly of components, hung from the edge of the floor/roof structure rather than bearing on a floor.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "CurtainWallAttributes" type = "IfcCurtainWall"/>
          <xsd:element minOccurs = "0" name = "CurtainWallCommon" type = "IfcPset_CurtainWallCommon"/>
          <xsd:element minOccurs = "0" name = "CurtainWallQuantities" type = "IfcQto_CurtainWallQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "CurtainWall" substitutionGroup = "ProductAECBase" type = "ProductCurtainWallType"/>
  <!--    -->
  <xsd:complexType name = "ProductDoorType">
    <xsd:annotation>
      <xsd:documentation>
    The door is a building element that is predominately used to provide controlled access for people and goods. It includes constructions with hinged, pivoted, sliding, and additionally revolving and folding operations. A door consists of a lining and one or several panels.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "DoorAttributes" type = "IfcDoor"/>
          <xsd:element minOccurs = "0" name = "DoorStandardCase" type = "IfcDoorStandardCase"/>
          <xsd:element minOccurs = "0" name = "DoorCommon" type = "IfcPset_DoorCommon"/>
          <xsd:element minOccurs = "0" name = "DoorWindowGlazingType" type = "IfcPset_DoorWindowGlazingType"/>
          <xsd:element minOccurs = "0" name = "DoorWindowShadingType" type = "IfcPset_DoorWindowShadingType"/>
          <xsd:element minOccurs = "0" name = "DoorBaseQuantities" type = "IfcQto_DoorBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Door" substitutionGroup = "ProductAECBase" type = "ProductDoorType"/>
  <!--    -->
  <xsd:complexType name = "ProductOtherArchitecturalElementType">
    <xsd:annotation>
      <xsd:documentation>
    Architectural elements which does not belong to any other predefined type.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BuildingElementProxy" type = "IfcBuildingElementProxy"/>
          <xsd:element minOccurs = "0" name = "BuildingElementProxyCommon" type = "IfcPset_BuildingElementProxyCommon"/>
          <xsd:element minOccurs = "0" name = "BuildingElementProxyProvisionForVoid" type = "IfcPset_BuildingElementProxyProvisionForVoid"/>
          <xsd:element minOccurs = "0" name = "BuildingElementProxyQuantities" type = "IfcQto_BuildingElementProxyQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "OtherArchitecturalElement" substitutionGroup = "ProductAECBase" type = "ProductOtherArchitecturalElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductRailingType">
    <xsd:annotation>
      <xsd:documentation>The railing is a frame assembly adjacent to human circulation spaces and at some space boundaries where it is used in lieu of walls or to compliment walls. Designed to aid humans, either as an optional physical support, or to prevent injury by falling.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "RailingAttributes" type = "IfcRailing"/>
          <xsd:element minOccurs = "0" name = "RailingCommon" type = "IfcPset_RailingCommon"/>
          <xsd:element minOccurs = "0" name = "RailingBaseQuantities" type = "IfcQto_RailingBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Railing" substitutionGroup = "ProductAECBase" type = "ProductRailingType"/>
  <!--    -->
  <xsd:complexType name = "ProductRampType">
    <xsd:annotation>
      <xsd:documentation>A ramp is a vertical passageway which provides a human circulation link between one floor level and another floor level at a different elevation. It may include a landing as an intermediate floor slab. A ramp normally does not include steps.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "RampAttributes" type = "IfcRamp"/>
          <xsd:element minOccurs = "0" name = "RampCommon" type = "IfcPset_RampCommon"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Ramp" substitutionGroup = "ProductAECBase" type = "ProductRampType"/>
  <!--    -->
  <xsd:complexType name = "ProductRampFlightType">
    <xsd:annotation>
      <xsd:documentation>A ramp comprises a single inclined segment, or several inclined segments that are connected by a horizontal segment, refered to as a landing. A ramp flight is the single inclined segment and part of the ramp construction. In case of single flight ramps, the ramp flight and the ramp are identical.
An IfcRampFlight connects the floor slab of zero to two different storeys (or partial storeys or landings) within a building</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "RampFlightAttributes" type = "IfcRampFlight"/>
          <xsd:element minOccurs = "0" name = "RampFlightCommon" type = "IfcPset_RampFlightCommon"/>
          <xsd:element minOccurs = "0" name = "RampFlightBaseQuantities" type = "IfcQto_RampFlightBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RampFlight" substitutionGroup = "ProductAECBase" type = "ProductRampFlightType"/>
  <!--    -->
  <xsd:complexType name = "ProductRoofType">
    <xsd:annotation>
      <xsd:documentation>A roof is the covering of the top part of a building, it protects the building against the effects of wheather.
The IfcRoof is a description of the total roof. It acts as a container entity, that aggregates all components of the roof, it represents. The aggregation is handled via the IfcRelAggregates relationship, relating an IfcRoof with the related roof elements, like slabs (represented by IfcSlab), rafters and purlins (represented by IfcBeam), or other included roofs, such as dormers (represented by IfcRoof).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "RoofAttributes" type = "IfcRoof"/>
          <xsd:element minOccurs = "0" name = "RoofCommon" type = "IfcPset_RoofCommon"/>
          <xsd:element minOccurs = "0" name = "RoofBaseQuantities" type = "IfcQto_RoofBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Roof" substitutionGroup = "ProductAECBase" type = "ProductRoofType"/>
  <!--    -->
  <xsd:complexType name = "ProductShadingDeviceType">
    <xsd:annotation>
      <xsd:documentation>Shading devices are purpose built devices to protect from the sunlight, from natural light, or screening them from view. Shading devices can form part of the facade or can be mounted inside the building, they can be fixed or operable.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "ShadingDeviceAttributes" type = "IfcShadingDevice"/>
          <xsd:element minOccurs = "0" name = "ShadingDeviceCommon" type = "IfcPset_ShadingDeviceCommon"/>
          <xsd:element minOccurs = "0" name = "ShadingDevicePHistory" type = "IfcPset_ShadingDevicePHistory"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "ShadingDevice" substitutionGroup = "ProductAECBase" type = "ProductShadingDeviceType"/>
  <!--    -->
  <xsd:complexType name = "ProductStairType">
    <xsd:annotation>
      <xsd:documentation>A stair is a vertical passageway allowing occupants to walk (step) from one floor level to another floor level at a different elevation. It may include a landing as an intermediate floor slab.
The IfcStair shall either be represented:
 1.as a stair assembly entity that aggregates all components (stair flight, landing, etc. with own representations), or
 2. as a single stair entity without decomposition including all representation directly at the stair entity.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "StairAttributes" type = "IfcStair"/>
          <xsd:element minOccurs = "0" name = "StairCommon" type = "IfcPset_StairCommon"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Stair" substitutionGroup = "ProductAECBase" type = "ProductStairType"/>
  <!--    -->
  <xsd:complexType name = "ProductStairFlightType">
    <xsd:annotation>
      <xsd:documentation>A stair flight is an assembly of building components in a single "run" of stair steps (not interrupted by a landing). The stair steps and any stringers are included in the stair flight. A winder is also regarded a part of a stair flight. An IfcStairFlight is normally aggregated by an IfcStair through the IfcRelAggregates relationship, the stair flight is then included in the set of IfcRelAggregates.RelatedObjects. An IfcStairFlight normally connects the floor slab of zero to two different storeys (or partial storeys, or landings) within a building.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "StairFlightAttributes" type = "IfcStairFlight"/>
          <xsd:element minOccurs = "0" name = "StairFlightCommon" type = "IfcPset_StairFlightCommon"/>
          <xsd:element minOccurs = "0" name = "StairFlightBaseQuantities" type = "IfcQto_StairFlightBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "StairFlight" substitutionGroup = "ProductAECBase" type = "ProductStairFlightType"/>
  <!--    -->
  <xsd:complexType name = "ProductWindowType">
    <xsd:annotation>
      <xsd:documentation>The window is a building element that is predominately used to provide natural light and fresh air. It includes vertical opening but also horizontal opening such as skylights or light domes. It includes constructions with swinging, pivoting, sliding, or revolving panels and fixed panels. A window consists of a lining and one or several panels. The IfcWindow defines a particular occurrence of a window inserted in the spatial context of a project.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "WindowAttributes" type = "IfcWindow"/>
          <xsd:element minOccurs = "0" name = "WindowStandardCase" type = "IfcWindowStandardCase"/>
          <xsd:element minOccurs = "0" name = "WindowCommon" type = "IfcPset_WindowCommon"/>
          <xsd:element minOccurs = "0" name = "DoorWindowGlazingType" type = "IfcPset_DoorWindowGlazingType"/>
          <xsd:element minOccurs = "0" name = "DoorWindowShadingType" type = "IfcPset_DoorWindowShadingType"/>
          <xsd:element minOccurs = "0" name = "WindowBaseQuantities" type = "IfcQto_WindowBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Window" substitutionGroup = "ProductAECBase" type = "ProductWindowType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductCommonSpatialStructureElementBase">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductFoundationType">
    <xsd:annotation>
      <xsd:documentation>A foundation is the part of an infrastructure spreading and transmitting the load to the soil.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductCommonSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SpatialStructureElement" type = "IfcSpatialStructureElement"/>
          <xsd:element minOccurs = "0" name = "DS_FoundationBaseQuantities" type = "IfcQto_DS_FoundationBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Foundation" substitutionGroup = "ProductAECBase" type = "ProductFoundationType"/>
  <!--    -->
  <xsd:complexType name = "ProductOtherSpatialStructureElementType">
    <xsd:annotation>
      <xsd:documentation>This entity is a proxy definition that provides the same functionality as subtypes of AecCommonSpatialStructureElement, but without having a predefined meaning of the special type of spatial element it represents. 
It can be specialized by a customer to provide meaningful types benefiting from AecCommonSpatialStructureElement functionalities. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductCommonSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SpatialStructureElement" type = "IfcSpatialStructureElement"/>
          <xsd:element minOccurs = "0" name = "DS_OtherSpatialStructureElementBaseQuantities" type = "IfcQto_DS_OtherSpatialStructureElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "OtherSpatialStructureElement" substitutionGroup = "ProductAECBase" type = "ProductOtherSpatialStructureElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductSiteType">
    <xsd:annotation>
      <xsd:documentation>
    A site is the highest structuring level of an AEC project. It may contains areas of land, buildings, or other civil engineering infrastructures.
Since a project may span over several connected or disconnected sites, a site can be decomposed in parts, where each part defines a site section.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductCommonSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SiteAttributes" type = "IfcSite"/>
          <xsd:element minOccurs = "0" name = "LandRegistration" type = "IfcPset_LandRegistration"/>
          <xsd:element minOccurs = "0" name = "SiteCommon" type = "IfcPset_SiteCommon"/>
          <xsd:element minOccurs = "0" name = "PropertyAgreement" type = "IfcPset_PropertyAgreement"/>
          <xsd:element minOccurs = "0" name = "AirSideSystemInformation" type = "IfcPset_AirSideSystemInformation"/>
          <xsd:element minOccurs = "0" name = "SpaceFireSafetyRequirements" type = "IfcPset_SpaceFireSafetyRequirements"/>
          <xsd:element minOccurs = "0" name = "SpaceLightingRequirements" type = "IfcPset_SpaceLightingRequirements"/>
          <xsd:element minOccurs = "0" name = "SpaceOccupancyRequirements" type = "IfcPset_SpaceOccupancyRequirements"/>
          <xsd:element minOccurs = "0" name = "SpaceThermalRequirements" type = "IfcPset_SpaceThermalRequirements"/>
          <xsd:element minOccurs = "0" name = "ThermalLoadAggregate" type = "IfcPset_ThermalLoadAggregate"/>
          <xsd:element minOccurs = "0" name = "ThermalLoadDesignCriteria" type = "IfcPset_ThermalLoadDesignCriteria"/>
          <xsd:element minOccurs = "0" name = "SiteBaseQuantities" type = "IfcQto_SiteBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Site" substitutionGroup = "ProductAECBase" type = "ProductSiteType"/>
  <!--    -->
  <xsd:complexType name = "ProductTerrainType">
    <xsd:annotation>
      <xsd:documentation>A terrain defines an area of land from a topographic point of view.
Since topographic surveys may cover several connected or disconnected areas, a terrain can be decomposed in parts, where each part defines a terrain zone.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductCommonSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "DS_TerrainBaseQuantities" type = "IfcQto_DS_TerrainBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Terrain" substitutionGroup = "ProductAECBase" type = "ProductTerrainType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductElementComponentBase">
    <xsd:annotation>
      <xsd:documentation>An element component is a representation for minor items included in, added to or connecting to or between elements, which usually are not of interest from the overall building structure viewpoint.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductDiscreteAccessoryType">
    <xsd:annotation>
      <xsd:documentation>A discrete accessory is a representation of different kinds of accessories included in or added to elements. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductElementComponentBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "DiscreteAccessoryAttributes" type = "IfcDiscreteAccessory"/>
          <xsd:element minOccurs = "0" name = "DiscreteAccessoryColumnShoe" type = "IfcPset_DiscreteAccessoryColumnShoe"/>
          <xsd:element minOccurs = "0" name = "DiscreteAccessoryCornerFixingPlate" type = "IfcPset_DiscreteAccessoryCornerFixingPlate"/>
          <xsd:element minOccurs = "0" name = "DiscreteAccessoryDiagonalTrussConnector" type = "IfcPset_DiscreteAccessoryDiagonalTrussConnector"/>
          <xsd:element minOccurs = "0" name = "DiscreteAccessoryEdgeFixingPlate" type = "IfcPset_DiscreteAccessoryEdgeFixingPlate"/>
          <xsd:element minOccurs = "0" name = "DiscreteAccessoryFixingSocket" type = "IfcPset_DiscreteAccessoryFixingSocket"/>
          <xsd:element minOccurs = "0" name = "DiscreteAccessoryLadderTrussConnector" type = "IfcPset_DiscreteAccessoryLadderTrussConnector"/>
          <xsd:element minOccurs = "0" name = "DiscreteAccessoryStandardFixingPlate" type = "IfcPset_DiscreteAccessoryStandardFixingPlate"/>
          <xsd:element minOccurs = "0" name = "DiscreteAccessoryWireLoop" type = "IfcPset_DiscreteAccessoryWireLoop"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "DiscreteAccessory" substitutionGroup = "ProductAECBase" type = "ProductDiscreteAccessoryType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductMechanicalFastenerBase">
    <xsd:annotation>
      <xsd:documentation>A mechanical fasteners connecting building elements mechanically. A single instance of this class may represent one or many of actual mechanical fasteners, for example an array of bolts or a row of nails.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductMechanicalFastenerAnchorType">
    <xsd:complexContent>
      <xsd:extension base = "ProductMechanicalFastenerBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "MechanicalFastener" type = "IfcMechanicalFastener"/>
          <xsd:element minOccurs = "0" name = "MechanicalFastenerCommon" type = "IfcPset_MechanicalFastenerCommon"/>
          <xsd:element minOccurs = "0" name = "DS_MechanicalFastenerAnchorCommon" type = "IfcPset_DS_MechanicalFastenerAnchorCommon"/>
          <xsd:element minOccurs = "0" name = "DS_MechanicalFastenerAnchorBaseQuantities" type = "IfcQto_DS_MechanicalFastenerAnchorBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "MechanicalFastenerAnchor" substitutionGroup = "ProductAECBase" type = "ProductMechanicalFastenerAnchorType"/>
  <!--    -->
  <xsd:complexType name = "ProductMechanicalFastenerCouplerType">
    <xsd:complexContent>
      <xsd:extension base = "ProductMechanicalFastenerBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "MechanicalFastener" type = "IfcMechanicalFastener"/>
          <xsd:element minOccurs = "0" name = "MechanicalFastenerCommon" type = "IfcPset_MechanicalFastenerCommon"/>
          <xsd:element minOccurs = "0" name = "DS_MechanicalFastenerCouplerCommon" type = "IfcPset_DS_MechanicalFastenerCouplerCommon"/>
          <xsd:element minOccurs = "0" name = "DS_MechanicalFastenerCouplerBaseQuantities" type = "IfcQto_DS_MechanicalFastenerCouplerBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "MechanicalFastenerCoupler" substitutionGroup = "ProductAECBase" type = "ProductMechanicalFastenerCouplerType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductReinforcingElementBase">
    <xsd:annotation>
      <xsd:documentation>A reinforcing element represents bars, wires, strands, meshes, tendons, and other components embedded in concrete in such a manner that the reinforcement and the concrete act together in resisting forces.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductReinforcingBarType">
    <xsd:annotation>
      <xsd:documentation>A reinforcing bar is usually made of steel with manufactured deformations in the surface, and used in concrete and masonry construction to provide additional strength.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductReinforcingElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "ReinforcingBarAttributes" type = "IfcReinforcingBar"/>
          <xsd:element minOccurs = "0" name = "ReinforcingElementBaseQuantities" type = "IfcQto_ReinforcingElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "ReinforcingBar" substitutionGroup = "ProductAECBase" type = "ProductReinforcingBarType"/>
  <!--    -->
  <xsd:complexType name = "ProductReinforcingMeshType">
    <xsd:annotation>
      <xsd:documentation>A reinforcing mesh is a series of longitudinal and transverse wires or bars of various gauges, arranged at right angles to each other and welded at all points of intersection; usually used for concrete slab reinforcement. It is also known as welded wire fabric. In scope are plane meshes as well as bent meshes.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductReinforcingElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "ReinforcingMeshAttributes" type = "IfcReinforcingMesh"/>
          <xsd:element minOccurs = "0" name = "ReinforcingElementBaseQuantities" type = "IfcQto_ReinforcingElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "ReinforcingMesh" substitutionGroup = "ProductAECBase" type = "ProductReinforcingMeshType"/>
  <!--    -->
  <xsd:complexType name = "ProductTendonType">
    <xsd:annotation>
      <xsd:documentation>A tendon is a steel element such as a wire, cable, bar, rod, or strand used to impart prestress to concrete when the element is tensioned.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductReinforcingElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "TendonAttributes" type = "IfcTendon"/>
          <xsd:element minOccurs = "0" name = "ReinforcingElementBaseQuantities" type = "IfcQto_ReinforcingElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Tendon" substitutionGroup = "ProductAECBase" type = "ProductTendonType"/>
  <!--    -->
  <xsd:complexType name = "ProductTendonAnchorType">
    <xsd:annotation>
      <xsd:documentation>A tendon anchor is the end connection for tendons in prestressed or post tensioned concrete.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductReinforcingElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "TendonAnchorAttributes" type = "IfcTendonAnchor"/>
          <xsd:element minOccurs = "0" name = "ReinforcingElementBaseQuantities" type = "IfcQto_ReinforcingElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TendonAnchor" substitutionGroup = "ProductAECBase" type = "ProductTendonAnchorType"/>
  <!--    -->
  <xsd:complexType name = "ProductFurnishingElementType">
    <xsd:annotation>
      <xsd:documentation>A furnishing element is a generalization of all furniture related objects.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "FurnishingElementAttributes" type = "IfcFurnishingElement"/>
          <xsd:element minOccurs = "0" name = "Furniture" type = "IfcFurniture"/>
          <xsd:element minOccurs = "0" name = "SystemFurnitureElement" type = "IfcSystemFurnitureElement"/>
          <xsd:element minOccurs = "0" name = "FurnitureTypeChair" type = "IfcPset_FurnitureTypeChair"/>
          <xsd:element minOccurs = "0" name = "FurnitureTypeCommon" type = "IfcPset_FurnitureTypeCommon"/>
          <xsd:element minOccurs = "0" name = "FurnitureTypeDesk" type = "IfcPset_FurnitureTypeDesk"/>
          <xsd:element minOccurs = "0" name = "FurnitureTypeFileCabinet" type = "IfcPset_FurnitureTypeFileCabinet"/>
          <xsd:element minOccurs = "0" name = "FurnitureTypeTable" type = "IfcPset_FurnitureTypeTable"/>
          <xsd:element minOccurs = "0" name = "SystemFurnitureElementTypeCommon" type = "IfcPset_SystemFurnitureElementTypeCommon"/>
          <xsd:element minOccurs = "0" name = "SystemFurnitureElementTypePanel" type = "IfcPset_SystemFurnitureElementTypePanel"/>
          <xsd:element minOccurs = "0" name = "SystemFurnitureElementTypeWorkSurface" type = "IfcPset_SystemFurnitureElementTypeWorkSurface"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "FurnishingElement" substitutionGroup = "ProductAECBase" type = "ProductFurnishingElementType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductBooleanElementBase">
    <xsd:annotation>
      <xsd:documentation>Generalization of all existence dependent elements which modify the shape and appearance of the associated master element.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductOpeningElementType">
    <xsd:annotation>
      <xsd:documentation>The opening element stands for opening, recess or chase, all reflecting voids. It represents a void within any element that has physical manifestation. Openings can be inserted into walls, slabs, beams, columns, or other elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductBooleanElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "OpeningElementAttributes" type = "IfcOpeningElement"/>
          <xsd:element minOccurs = "0" name = "OpeningStandardCase" type = "IfcOpeningStandardCase"/>
          <xsd:element minOccurs = "0" name = "OpeningElementCommon" type = "IfcPset_OpeningElementCommon"/>
          <xsd:element minOccurs = "0" name = "OpeningElementBaseQuantities" type = "IfcQto_OpeningElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "OpeningElement" substitutionGroup = "ProductAECBase" type = "ProductOpeningElementType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductStructuralElementBase">
    <xsd:annotation>
      <xsd:documentation>Generalization of all structural entities that can be found in a building or in any civil engineering infrastructure.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductBeamType">
    <xsd:annotation>
      <xsd:documentation>An beam is a horizontal, or nearly horizontal, structural member that is capable of withstanding load primarily by resisting bending. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BeamAttributes" type = "IfcBeam"/>
          <xsd:element minOccurs = "0" name = "BeamStandardCase" type = "IfcBeamStandardCase"/>
          <xsd:element minOccurs = "0" name = "BeamCommon" type = "IfcPset_BeamCommon"/>
          <xsd:element minOccurs = "0" name = "ReinforcementBarPitchOfBeam" type = "IfcPset_ReinforcementBarPitchOfBeam"/>
          <xsd:element minOccurs = "0" name = "BeamBaseQuantities" type = "IfcQto_BeamBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Beam" substitutionGroup = "ProductAECBase" type = "ProductBeamType"/>
  <!--    -->
  <xsd:complexType name = "ProductCableType">
    <xsd:annotation>
      <xsd:documentation>
    A cable is the combination of several steel wires in stack.
A cable has the advantage of having a high stress section while maintaining a certain flexibility.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BuildingElementProxyQuantities" type = "IfcQto_BuildingElementProxyQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Cable" substitutionGroup = "ProductAECBase" type = "ProductCableType"/>
  <!--    -->
  <xsd:complexType name = "ProductColumnType">
    <xsd:annotation>
      <xsd:documentation>A column is a vertical, or nearly vertical, structural member that transmits, through compression, the weight of the structure above to other structural elements below.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "ColumnAttributes" type = "IfcColumn"/>
          <xsd:element minOccurs = "0" name = "ColumnStandardCase" type = "IfcColumnStandardCase"/>
          <xsd:element minOccurs = "0" name = "ColumnCommon" type = "IfcPset_ColumnCommon"/>
          <xsd:element minOccurs = "0" name = "ReinforcementBarPitchOfColumn" type = "IfcPset_ReinforcementBarPitchOfColumn"/>
          <xsd:element minOccurs = "0" name = "ColumnBaseQuantities" type = "IfcQto_ColumnBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Column" substitutionGroup = "ProductAECBase" type = "ProductColumnType"/>
  <!--    -->
  <xsd:complexType name = "ProductFootingType">
    <xsd:annotation>
      <xsd:documentation>A footing is upper part of a foundation such as a caisson, a footing beam, a pad footing or a strip footing.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "FootingAttributes" type = "IfcFooting"/>
          <xsd:element minOccurs = "0" name = "FootingCommon" type = "IfcPset_FootingCommon"/>
          <xsd:element minOccurs = "0" name = "ReinforcementBarCountOfIndependentFooting" type = "IfcPset_ReinforcementBarCountOfIndependentFooting"/>
          <xsd:element minOccurs = "0" name = "ReinforcementBarPitchOfContinuousFooting" type = "IfcPset_ReinforcementBarPitchOfContinuousFooting"/>
          <xsd:element minOccurs = "0" name = "FootingBaseQuantities" type = "IfcQto_FootingBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Footing" substitutionGroup = "ProductAECBase" type = "ProductFootingType"/>
  <!--    -->
  <xsd:complexType name = "ProductMemberType">
    <xsd:annotation>
      <xsd:documentation>A member is a structural member designed to carry loads between or beyond points of support. The orientation of the member (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to AecBeam and AecColumn). It shall be used if it cannot be expressed more specifically as either an AecBeam or an AecColumn.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "MemberAttributes" type = "IfcMember"/>
          <xsd:element minOccurs = "0" name = "MemberStandardCase" type = "IfcMemberStandardCase"/>
          <xsd:element minOccurs = "0" name = "MemberCommon" type = "IfcPset_MemberCommon"/>
          <xsd:element minOccurs = "0" name = "MemberBaseQuantities" type = "IfcQto_MemberBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Member" substitutionGroup = "ProductAECBase" type = "ProductMemberType"/>
  <!--    -->
  <xsd:complexType name = "ProductOtherStructuralElementType">
    <xsd:annotation>
      <xsd:documentation>This entity is a proxy definition that provides the same functionality as subtypes of AecStructuralElement, but without having a predefined meaning of the special type of element it represents. 
It can be specialized by a customer to provide meaningful types benefiting from AecStructuralElement functionalities.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BuildingElementProxy" type = "IfcBuildingElementProxy"/>
          <xsd:element minOccurs = "0" name = "BuildingElementProxyCommon" type = "IfcPset_BuildingElementProxyCommon"/>
          <xsd:element minOccurs = "0" name = "BuildingElementProxyProvisionForVoid" type = "IfcPset_BuildingElementProxyProvisionForVoid"/>
          <xsd:element minOccurs = "0" name = "BuildingElementProxyQuantities" type = "IfcQto_BuildingElementProxyQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "OtherStructuralElement" substitutionGroup = "ProductAECBase" type = "ProductOtherStructuralElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductPileType">
    <xsd:annotation>
      <xsd:documentation>A pile is a slender timber, concrete, or steel structural element, driven, jetted, or otherwise embedded on end in the ground for the purpose of supporting a load. A pile is also characterized as deep foundation, where the loads are transferred to deeper subsurface layers.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "PileAttributes" type = "IfcPile"/>
          <xsd:element minOccurs = "0" name = "PileCommon" type = "IfcPset_PileCommon"/>
          <xsd:element minOccurs = "0" name = "PileBaseQuantities" type = "IfcQto_PileBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Pile" substitutionGroup = "ProductAECBase" type = "ProductPileType"/>
  <!--    -->
  <xsd:complexType name = "ProductPlateType">
    <xsd:annotation>
      <xsd:documentation>A plate is a planar and often flat part with constant thickness. A plate may carry loads between or beyond points of support, or provide stiffening. The location of the plate (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to AecWall and AecSlab).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "PlateAttributes" type = "IfcPlate"/>
          <xsd:element minOccurs = "0" name = "PlateStandardCase" type = "IfcPlateStandardCase"/>
          <xsd:element minOccurs = "0" name = "PlateCommon" type = "IfcPset_PlateCommon"/>
          <xsd:element minOccurs = "0" name = "PlateBaseQuantities" type = "IfcQto_PlateBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Plate" substitutionGroup = "ProductAECBase" type = "ProductPlateType"/>
  <!--    -->
  <xsd:complexType name = "ProductSlabType">
    <xsd:annotation>
      <xsd:documentation>A slab is a component of the construction that normally encloses a space vertically. The slab may provide the lower support (floor) or upper construction (roof slab) in any space in a building.
A slab may be composite (e.g. decking) and therefore decomposed in beams, members, plates or other structural elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "SlabAttributes" type = "IfcSlab"/>
          <xsd:element minOccurs = "0" name = "SlabStandardCase" type = "IfcSlabStandardCase"/>
          <xsd:element minOccurs = "0" name = "SlabElementedCase" type = "IfcSlabElementedCase"/>
          <xsd:element minOccurs = "0" name = "PrecastSlab" type = "IfcPset_PrecastSlab"/>
          <xsd:element minOccurs = "0" name = "ReinforcementBarPitchOfSlab" type = "IfcPset_ReinforcementBarPitchOfSlab"/>
          <xsd:element minOccurs = "0" name = "SlabCommon" type = "IfcPset_SlabCommon"/>
          <xsd:element minOccurs = "0" name = "SlabBaseQuantities" type = "IfcQto_SlabBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Slab" substitutionGroup = "ProductAECBase" type = "ProductSlabType"/>
  <!--    -->
  <xsd:complexType name = "ProductStiffenerType">
    <xsd:annotation>
      <xsd:documentation>A stiffener is an angle bar or a stringer fastened to a plate to strengthen it and make it rigid.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BuildingElementProxyQuantities" type = "IfcQto_BuildingElementProxyQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Stiffener" substitutionGroup = "ProductAECBase" type = "ProductStiffenerType"/>
  <!--    -->
  <xsd:complexType name = "ProductWallType">
    <xsd:annotation>
      <xsd:documentation>A wall represents a vertical construction that bounds or subdivides spaces. Wall are usually vertical, or nearly vertical, planar elements, often designed to bear structural loads. A wall is however not required to be load bearing.
A wall may be composite and therefore decomposed in beams (e.g. lintel), members, plates or other structural or architectural elements (e.g. insulation).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "WallAttributes" type = "IfcWall"/>
          <xsd:element minOccurs = "0" name = "WallStandardCase" type = "IfcWallStandardCase"/>
          <xsd:element minOccurs = "0" name = "WallElementedCase" type = "IfcWallElementedCase"/>
          <xsd:element minOccurs = "0" name = "ReinforcementBarPitchOfWall" type = "IfcPset_ReinforcementBarPitchOfWall"/>
          <xsd:element minOccurs = "0" name = "WallCommon" type = "IfcPset_WallCommon"/>
          <xsd:element minOccurs = "0" name = "WallBaseQuantities" type = "IfcQto_WallBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Wall" substitutionGroup = "ProductAECBase" type = "ProductWallType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductBuildingSpatialStructureElementBase">
    <xsd:annotation>
      <xsd:documentation>Parent of Spatial Structure elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductBuildingType">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductBuildingSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BuildingAttributes" type = "IfcBuilding"/>
          <xsd:element minOccurs = "0" name = "BuildingCommon" type = "IfcPset_BuildingCommon"/>
          <xsd:element minOccurs = "0" name = "BuildingUse" type = "IfcPset_BuildingUse"/>
          <xsd:element minOccurs = "0" name = "BuildingUseAdjacent" type = "IfcPset_BuildingUseAdjacent"/>
          <xsd:element minOccurs = "0" name = "OutsideDesignCriteria" type = "IfcPset_OutsideDesignCriteria"/>
          <xsd:element minOccurs = "0" name = "PropertyAgreement" type = "IfcPset_PropertyAgreement"/>
          <xsd:element minOccurs = "0" name = "AirSideSystemInformation" type = "IfcPset_AirSideSystemInformation"/>
          <xsd:element minOccurs = "0" name = "ThermalLoadAggregate" type = "IfcPset_ThermalLoadAggregate"/>
          <xsd:element minOccurs = "0" name = "ThermalLoadDesignCriteria" type = "IfcPset_ThermalLoadDesignCriteria"/>
          <xsd:element minOccurs = "0" name = "BuildingBaseQuantities" type = "IfcQto_BuildingBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Building" substitutionGroup = "ProductAECBase" type = "ProductBuildingType"/>
  <!--    -->
  <xsd:complexType name = "ProductBuildingShellAndCoreType">
    <xsd:annotation>
      <xsd:documentation>Represents the building envelope along with the section of the building where the restrooms, ventilation shafts, electrical distribution, elevator shafts and stairwells are located.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductBuildingSpatialStructureElementBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BuildingShellAndCore" substitutionGroup = "ProductAECBase" type = "ProductBuildingShellAndCoreType"/>
  <!--    -->
  <xsd:complexType name = "ProductBuildingSpaceType">
    <xsd:annotation>
      <xsd:documentation>
    
      A space is associated to a building storey (or in case of exterior spaces to a site). A space may span over several connected spaces. Therefore a space group provides for a collection of spaces included in a storey. A space can also be decomposed in parts, where each part defines a partial space.
      The IfcSpace is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical).
    </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductBuildingSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "Space" type = "IfcSpace"/>
          <xsd:element minOccurs = "0" name = "SpaceCommon" type = "IfcPset_SpaceCommon"/>
          <xsd:element minOccurs = "0" name = "SpaceParking" type = "IfcPset_SpaceParking"/>
          <xsd:element minOccurs = "0" name = "SpaceThermalDesign" type = "IfcPset_SpaceThermalDesign"/>
          <xsd:element minOccurs = "0" name = "SpaceThermalLoad" type = "IfcPset_SpaceThermalLoad"/>
          <xsd:element minOccurs = "0" name = "SpaceThermalLoadPHistory" type = "IfcPset_SpaceThermalLoadPHistory"/>
          <xsd:element minOccurs = "0" name = "SpaceThermalPHistory" type = "IfcPset_SpaceThermalPHistory"/>
          <xsd:element minOccurs = "0" name = "PropertyAgreement" type = "IfcPset_PropertyAgreement"/>
          <xsd:element minOccurs = "0" name = "AirSideSystemInformation" type = "IfcPset_AirSideSystemInformation"/>
          <xsd:element minOccurs = "0" name = "SpaceFireSafetyRequirements" type = "IfcPset_SpaceFireSafetyRequirements"/>
          <xsd:element minOccurs = "0" name = "SpaceLightingRequirements" type = "IfcPset_SpaceLightingRequirements"/>
          <xsd:element minOccurs = "0" name = "SpaceOccupancyRequirements" type = "IfcPset_SpaceOccupancyRequirements"/>
          <xsd:element minOccurs = "0" name = "SpaceThermalRequirements" type = "IfcPset_SpaceThermalRequirements"/>
          <xsd:element minOccurs = "0" name = "ThermalLoadAggregate" type = "IfcPset_ThermalLoadAggregate"/>
          <xsd:element minOccurs = "0" name = "ThermalLoadDesignCriteria" type = "IfcPset_ThermalLoadDesignCriteria"/>
          <xsd:element minOccurs = "0" name = "SpaceCoveringRequirements" type = "IfcPset_SpaceCoveringRequirements"/>
          <xsd:element minOccurs = "0" name = "SpaceBaseQuantities" type = "IfcQto_SpaceBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BuildingSpace" substitutionGroup = "ProductAECBase" type = "ProductBuildingSpaceType"/>
  <!--    -->
  <xsd:complexType name = "ProductBuildingStoreyType">
    <xsd:annotation>
      <xsd:documentation>A storey is (if specified) associated to a building. A storey may span over several connected storeys. Therefore storey complex provides for a collection of storeys included in a building. A storey can also be decomposed in (horizontical) parts, where each part defines a partial storey.
The IfcBuildingStorey is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductBuildingSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BuildingStoreyAttributes" type = "IfcBuildingStorey"/>
          <xsd:element minOccurs = "0" name = "BuildingStoreyCommon" type = "IfcPset_BuildingStoreyCommon"/>
          <xsd:element minOccurs = "0" name = "PropertyAgreement" type = "IfcPset_PropertyAgreement"/>
          <xsd:element minOccurs = "0" name = "AirSideSystemInformation" type = "IfcPset_AirSideSystemInformation"/>
          <xsd:element minOccurs = "0" name = "ThermalLoadAggregate" type = "IfcPset_ThermalLoadAggregate"/>
          <xsd:element minOccurs = "0" name = "ThermalLoadDesignCriteria" type = "IfcPset_ThermalLoadDesignCriteria"/>
          <xsd:element minOccurs = "0" name = "BuildingStoreyBaseQuantities" type = "IfcQto_BuildingStoreyBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BuildingStorey" substitutionGroup = "ProductAECBase" type = "ProductBuildingStoreyType"/>
  <!--    -->
  <xsd:complexType name = "ProductBuildingStructureType">
    <xsd:annotation>
      <xsd:documentation>The structural members of a building that support the building loads and on which the loads of crane or monorail equipment, and the material to be moved, will be imposed.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductBuildingSpatialStructureElementBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BuildingStructure" substitutionGroup = "ProductAECBase" type = "ProductBuildingStructureType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductBridgeArchitecturalElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductBridgeOtherArchitecturalElementType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeArchitecturalElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeOtherElementBaseQuantities" type = "IfcQto_DS_BridgeOtherElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeOtherArchitecturalElement" substitutionGroup = "ProductAECBase" type = "ProductBridgeOtherArchitecturalElementType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductBridgePartBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductBridgeAbutmentType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeAbutmentBaseQuantities" type = "IfcQto_DS_BridgeAbutmentBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeAbutment" substitutionGroup = "ProductAECBase" type = "ProductBridgeAbutmentType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeAnchorBlockType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeAnchorBlockBaseQuantities" type = "IfcQto_DS_BridgeAnchorBlockBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeAnchorBlock" substitutionGroup = "ProductAECBase" type = "ProductBridgeAnchorBlockType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeArchType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeArchBaseQuantities" type = "IfcQto_DS_BridgeArchBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeArch" substitutionGroup = "ProductAECBase" type = "ProductBridgeArchType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeDeckType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeDeckBaseQuantities" type = "IfcQto_DS_BridgeDeckBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeDeck" substitutionGroup = "ProductAECBase" type = "ProductBridgeDeckType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeHangerBeltType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeHangerBeltBaseQuantities" type = "IfcQto_DS_BridgeHangerBeltBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeHangerBelt" substitutionGroup = "ProductAECBase" type = "ProductBridgeHangerBeltType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeOtherSpatialStructureElementType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeOtherSpatialStructureElementBaseQuantities" type = "IfcQto_DS_BridgeOtherSpatialStructureElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeOtherSpatialStructureElement" substitutionGroup = "ProductAECBase" type = "ProductBridgeOtherSpatialStructureElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgePierType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgePierBaseQuantities" type = "IfcQto_DS_BridgePierBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgePier" substitutionGroup = "ProductAECBase" type = "ProductBridgePierType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeSpanType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeSpanBaseQuantities" type = "IfcQto_DS_BridgeSpanBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeSpan" substitutionGroup = "ProductAECBase" type = "ProductBridgeSpanType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeStayBeltType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeStayBeltBaseQuantities" type = "IfcQto_DS_BridgeStayBeltBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeStayBelt" substitutionGroup = "ProductAECBase" type = "ProductBridgeStayBeltType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeSuspensionSystemType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeSuspensionSystemBaseQuantities" type = "IfcQto_DS_BridgeSuspensionSystemBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeSuspensionSystem" substitutionGroup = "ProductAECBase" type = "ProductBridgeSuspensionSystemType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeTowerType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgePart" type = "IfcBridgePart"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeTowerBaseQuantities" type = "IfcQto_DS_BridgeTowerBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeTower" substitutionGroup = "ProductAECBase" type = "ProductBridgeTowerType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductBridgeSpatialStructureElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductBridgeType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "BridgeAttributes" type = "IfcBridge"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Bridge" substitutionGroup = "ProductAECBase" type = "ProductBridgeType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductBridgeCableBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductBridgeHangerCableType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeCableBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeHangerCableBaseQuantities" type = "IfcQto_DS_BridgeHangerCableBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeHangerCable" substitutionGroup = "ProductAECBase" type = "ProductBridgeHangerCableType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeStayCableType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeCableBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeStayCableBaseQuantities" type = "IfcQto_DS_BridgeStayCableBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeStayCable" substitutionGroup = "ProductAECBase" type = "ProductBridgeStayCableType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeSuspensionCableType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeCableBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeSuspensionCableBaseQuantities" type = "IfcQto_DS_BridgeSuspensionCableBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeSuspensionCable" substitutionGroup = "ProductAECBase" type = "ProductBridgeSuspensionCableType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductBridgeStructuralElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductBridgeArchSegmentType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeArchSegmentBaseQuantities" type = "IfcQto_DS_BridgeArchSegmentBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeArchSegment" substitutionGroup = "ProductAECBase" type = "ProductBridgeArchSegmentType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeCrossheadType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeCrossheadBaseQuantities" type = "IfcQto_DS_BridgeCrossheadBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeCrosshead" substitutionGroup = "ProductAECBase" type = "ProductBridgeCrossheadType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeDeckSegmentType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeDeckSegmentBaseQuantities" type = "IfcQto_DS_BridgeDeckSegmentBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeDeckSegment" substitutionGroup = "ProductAECBase" type = "ProductBridgeDeckSegmentType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeOtherStructuralElementType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeOtherElementBaseQuantities" type = "IfcQto_DS_BridgeOtherElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeOtherStructuralElement" substitutionGroup = "ProductAECBase" type = "ProductBridgeOtherStructuralElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgePierSegmentType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgePierSegmentBaseQuantities" type = "IfcQto_DS_BridgePierSegmentBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgePierSegment" substitutionGroup = "ProductAECBase" type = "ProductBridgePierSegmentType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeTowerSegmentType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeTowerSegmentBaseQuantities" type = "IfcQto_DS_BridgeTowerSegmentBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeTowerSegment" substitutionGroup = "ProductAECBase" type = "ProductBridgeTowerSegmentType"/>
  <!--    -->
  <xsd:complexType name = "ProductBridgeWayType">
    <xsd:complexContent>
      <xsd:extension base = "ProductBridgeStructuralElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBase1Group"/>
          <xsd:element minOccurs = "0" name = "BridgeElement" type = "IfcBridgeElement"/>
          <xsd:element minOccurs = "0" name = "DS_BridgeWayBaseQuantities" type = "IfcQto_DS_BridgeWayBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "BridgeWay" substitutionGroup = "ProductAECBase" type = "ProductBridgeWayType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductDamPartBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductDamOtherSpatialStructureElementType">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductDamPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "DamPart" type = "IfcDamPart"/>
          <xsd:element minOccurs = "0" name = "DS_DamOtherSpatialStructureElementBaseQuantities" type = "IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "DamOtherSpatialStructureElement" substitutionGroup = "ProductAECBase" type = "ProductDamOtherSpatialStructureElementType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductDamSpatialStructureElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductDamType">
    <xsd:annotation>
      <xsd:documentation>Any kind of dams (Barrage, embankment).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductDamSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "DamAttributes" type = "IfcDam"/>
          <xsd:element minOccurs = "0" name = "DS_DamBaseQuantities" type = "IfcQto_DS_DamBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Dam" substitutionGroup = "ProductAECBase" type = "ProductDamType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductDamElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductDamOtherElementType">
    <xsd:complexContent>
      <xsd:extension base = "ProductDamElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "DamElement" type = "IfcDamElement"/>
          <xsd:element minOccurs = "0" name = "DS_DamOtherElementBaseQuantities" type = "IfcQto_DS_DamOtherElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "DamOtherElement" substitutionGroup = "ProductAECBase" type = "ProductDamOtherElementType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductRoadPartBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductRoadInterchangeType">
    <xsd:annotation>
      <xsd:documentation>Any kind of interchange (elevated interchange, simple junction with traffic lights, roundabout).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductRoadPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RoadPart" type = "IfcRoadPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RoadInterchange" substitutionGroup = "ProductAECBase" type = "ProductRoadInterchangeType"/>
  <!--    -->
  <xsd:complexType name = "ProductRoadOtherSpatialStructureElementType">
    <xsd:annotation>
      <xsd:documentation>Generic type used to decompose a Road.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductRoadPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RoadPart" type = "IfcRoadPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RoadOtherSpatialStructureElement" substitutionGroup = "ProductAECBase" type = "ProductRoadOtherSpatialStructureElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductRoadRampType">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductRoadPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RoadPart" type = "IfcRoadPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RoadRamp" substitutionGroup = "ProductAECBase" type = "ProductRoadRampType"/>
  <!--    -->
  <xsd:complexType name = "ProductRoadStretchType">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductRoadPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RoadPart" type = "IfcRoadPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RoadStretch" substitutionGroup = "ProductAECBase" type = "ProductRoadStretchType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductRoadSpatialStructureElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductRoadType">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductRoadSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RoadAttributes" type = "IfcRoad"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Road" substitutionGroup = "ProductAECBase" type = "ProductRoadType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductRoadElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductRoadOtherElementType">
    <xsd:annotation>
      <xsd:documentation>Generic type used to design a Road.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductRoadElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RoadElement" type = "IfcRoadElement"/>
          <xsd:element minOccurs = "0" name = "DS_RoadOtherElementBaseQuantities" type = "IfcQto_DS_RoadOtherElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RoadOtherElement" substitutionGroup = "ProductAECBase" type = "ProductRoadOtherElementType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductTunnelPartBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductTunnelBayType">
    <xsd:annotation>
      <xsd:documentation>Any kind of tunnel bay (safety bay, crossing).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "TunnelPart" type = "IfcTunnelPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TunnelBay" substitutionGroup = "ProductAECBase" type = "ProductTunnelBayType"/>
  <!--    -->
  <xsd:complexType name = "ProductTunnelInterchangeType">
    <xsd:annotation>
      <xsd:documentation>Any kind of tunnel interchange.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "TunnelPart" type = "IfcTunnelPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TunnelInterchange" substitutionGroup = "ProductAECBase" type = "ProductTunnelInterchangeType"/>
  <!--    -->
  <xsd:complexType name = "ProductTunnelOtherSpatialStructureElementType">
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "TunnelPart" type = "IfcTunnelPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TunnelOtherSpatialStructureElement" substitutionGroup = "ProductAECBase" type = "ProductTunnelOtherSpatialStructureElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductTunnelStretchType">
    <xsd:annotation>
      <xsd:documentation>A stretch of tunnel is a part of a tunnel with homogeneous properties.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "TunnelPart" type = "IfcTunnelPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TunnelStretch" substitutionGroup = "ProductAECBase" type = "ProductTunnelStretchType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductTunnelSpaceBase">
    <xsd:annotation>
      <xsd:documentation>Space representing the entirety of the tunnel.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductTunnelFullTunnelSpaceType">
    <xsd:annotation>
      <xsd:documentation>Space representing the entirety of the tunnel.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelSpaceBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "TunnelSpace" type = "IfcTunnelSpace"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TunnelFullTunnelSpace" substitutionGroup = "ProductAECBase" type = "ProductTunnelFullTunnelSpaceType"/>
  <!--    -->
  <xsd:complexType name = "ProductTunnelOtherSpaceType">
    <xsd:annotation>
      <xsd:documentation>Generic space decomposing a tunnel.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelSpaceBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "TunnelSpace" type = "IfcTunnelSpace"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TunnelOtherSpace" substitutionGroup = "ProductAECBase" type = "ProductTunnelOtherSpaceType"/>
  <!--    -->
  <xsd:complexType name = "ProductTunnelRingType">
    <xsd:annotation>
      <xsd:documentation>Space decomposing a Tunnel. It represents a segment along the tunnel axis.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelSpaceBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "TunnelSpace" type = "IfcTunnelSpace"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TunnelRing" substitutionGroup = "ProductAECBase" type = "ProductTunnelRingType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductTunnelSpatialStructureElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductTunnelType">
    <xsd:annotation>
      <xsd:documentation>Any kind of tunnels (Road, Railway, Mining).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "TunnelAttributes" type = "IfcTunnel"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Tunnel" substitutionGroup = "ProductAECBase" type = "ProductTunnelType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductTunnelElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductTunnelOtherElementType">
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "TunnelElement" type = "IfcTunnelElement"/>
          <xsd:element minOccurs = "0" name = "DS_TunnelOtherElementBaseQuantities" type = "IfcQto_DS_TunnelOtherElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TunnelOtherElement" substitutionGroup = "ProductAECBase" type = "ProductTunnelOtherElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductTunnelRingSegmentType">
    <xsd:annotation>
      <xsd:documentation>Ring segment used to design a Tunnel.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductTunnelElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "TunnelElement" type = "IfcTunnelElement"/>
          <xsd:element minOccurs = "0" name = "DS_TunnelRingSegmentBaseQuantities" type = "IfcQto_DS_TunnelRingSegmentBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "TunnelRingSegment" substitutionGroup = "ProductAECBase" type = "ProductTunnelRingSegmentType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductRailwayPartBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductRailwayOtherSpatialStructureElementType">
    <xsd:complexContent>
      <xsd:extension base = "ProductRailwayPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RailwayPart" type = "IfcRailwayPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RailwayOtherSpatialStructureElement" substitutionGroup = "ProductAECBase" type = "ProductRailwayOtherSpatialStructureElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductRailwayStretchType">
    <xsd:annotation>
      <xsd:documentation>A stretch of Railway is a part of a Railway with homogeneous properties.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductRailwayPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RailwayPart" type = "IfcRailwayPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RailwayStretch" substitutionGroup = "ProductAECBase" type = "ProductRailwayStretchType"/>
  <!--    -->
  <xsd:complexType name = "ProductRailwaySwitchType">
    <xsd:annotation>
      <xsd:documentation>Installation enabling railway trains to be guided from one track to another.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductRailwayPartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RailwayPart" type = "IfcRailwayPart"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RailwaySwitch" substitutionGroup = "ProductAECBase" type = "ProductRailwaySwitchType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductRailwaySpatialStructureElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductRailwayType">
    <xsd:complexContent>
      <xsd:extension base = "ProductRailwaySpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "RailwayAttributes" type = "IfcRailway"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Railway" substitutionGroup = "ProductAECBase" type = "ProductRailwayType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductRailwayElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductRailwayOtherElementType">
    <xsd:complexContent>
      <xsd:extension base = "ProductRailwayElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "RailwayElement" type = "IfcRailwayElement"/>
          <xsd:element minOccurs = "0" name = "DS_RailwayOtherElementBaseQuantities" type = "IfcQto_DS_RailwayOtherElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RailwayOtherElement" substitutionGroup = "ProductAECBase" type = "ProductRailwayOtherElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductRailwayTrackPanelType">
    <xsd:complexContent>
      <xsd:extension base = "ProductRailwayElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "RailwayElement" type = "IfcRailwayElement"/>
          <xsd:element minOccurs = "0" name = "DS_RailwayTrackPanelBaseQuantities" type = "IfcQto_DS_RailwayTrackPanelBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RailwayTrackPanel" substitutionGroup = "ProductAECBase" type = "ProductRailwayTrackPanelType"/>
  <!--    -->
  <xsd:complexType name = "ProductRailwayTrackRailType">
    <xsd:complexContent>
      <xsd:extension base = "ProductRailwayElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "RailwayElement" type = "IfcRailwayElement"/>
          <xsd:element minOccurs = "0" name = "DS_RailwayTrackRailBaseQuantities" type = "IfcQto_DS_RailwayTrackRailBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RailwayTrackRail" substitutionGroup = "ProductAECBase" type = "ProductRailwayTrackRailType"/>
  <!--    -->
  <xsd:complexType name = "ProductRailwayTrackSleeperType">
    <xsd:complexContent>
      <xsd:extension base = "ProductRailwayElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "RailwayElement" type = "IfcRailwayElement"/>
          <xsd:element minOccurs = "0" name = "DS_RailwayTrackSleeperBaseQuantities" type = "IfcQto_DS_RailwayTrackSleeperBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RailwayTrackSleeper" substitutionGroup = "ProductAECBase" type = "ProductRailwayTrackSleeperType"/>
  <!--    -->
  <xsd:complexType name = "ProductRailwayTrackTurnoutType">
    <xsd:complexContent>
      <xsd:extension base = "ProductRailwayElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:group minOccurs = "0" ref = "ProductElementBaseGroup"/>
          <xsd:element minOccurs = "0" name = "RailwayElement" type = "IfcRailwayElement"/>
          <xsd:element minOccurs = "0" name = "DS_RailwayTrackTurnoutBaseQuantities" type = "IfcQto_DS_RailwayTrackTurnoutBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "RailwayTrackTurnout" substitutionGroup = "ProductAECBase" type = "ProductRailwayTrackTurnoutType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductSubgradePartBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductSubgradeOtherSpatialStructureElementType">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductSubgradePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SubgradePart" type = "IfcSubgradePart"/>
          <xsd:element minOccurs = "0" name = "DS_SubgradeOtherSpatialStructureElementBaseQuantities" type = "IfcQto_DS_SubgradeOtherSpatialStructureElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "SubgradeOtherSpatialStructureElement" substitutionGroup = "ProductAECBase" type = "ProductSubgradeOtherSpatialStructureElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductSubgradeRetainingStructureType">
    <xsd:annotation>
      <xsd:documentation>Structure retaining a soil.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductSubgradePartBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SubgradeRetainingStructureAttributes" type = "IfcSubgradeRetainingStructure"/>
          <xsd:element minOccurs = "0" name = "DS_SubgradeRetainingStructureBaseQuantities" type = "IfcQto_DS_SubgradeRetainingStructureBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "SubgradeRetainingStructure" substitutionGroup = "ProductAECBase" type = "ProductSubgradeRetainingStructureType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductSubgradeSpatialStructureElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductSubgradeType">
    <xsd:complexContent>
      <xsd:extension base = "ProductSubgradeSpatialStructureElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SubgradeAttributes" type = "IfcSubgrade"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "Subgrade" substitutionGroup = "ProductAECBase" type = "ProductSubgradeType"/>
  <!--    -->
  <xsd:complexType abstract = "true" name = "ProductSubgradeElementBase">
    <xsd:complexContent>
      <xsd:extension base = "ProductAECBase"/>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "ProductSubgradeExcavationWorksType">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductSubgradeElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SubgradeElement" type = "IfcSubgradeElement"/>
          <xsd:element minOccurs = "0" name = "DS_SubgradeExcavationWorksBaseQuantities" type = "IfcQto_DS_SubgradeExcavationWorksBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "SubgradeExcavationWorks" substitutionGroup = "ProductAECBase" type = "ProductSubgradeExcavationWorksType"/>
  <!--    -->
  <xsd:complexType name = "ProductSubgradeFillingWorksType">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductSubgradeElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SubgradeElement" type = "IfcSubgradeElement"/>
          <xsd:element minOccurs = "0" name = "DS_SubgradeFillingWorksBaseQuantities" type = "IfcQto_DS_SubgradeFillingWorksBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "SubgradeFillingWorks" substitutionGroup = "ProductAECBase" type = "ProductSubgradeFillingWorksType"/>
  <!--    -->
  <xsd:complexType name = "ProductSubgradeOtherElementType">
    <xsd:annotation>
      <xsd:documentation></xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base = "ProductSubgradeElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SubgradeElement" type = "IfcSubgradeElement"/>
          <xsd:element minOccurs = "0" name = "DS_SubgradeOtherElementBaseQuantities" type = "IfcQto_DS_SubgradeOtherElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "SubgradeOtherElement" substitutionGroup = "ProductAECBase" type = "ProductSubgradeOtherElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductSubgradeRetainingElementType">
    <xsd:complexContent>
      <xsd:extension base = "ProductSubgradeElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SubgradeRetainingElementAttributes" type = "IfcSubgradeRetainingElement"/>
          <xsd:element minOccurs = "0" name = "DS_SubgradeRetainingElementBaseQuantities" type = "IfcQto_DS_SubgradeRetainingElementBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "SubgradeRetainingElement" substitutionGroup = "ProductAECBase" type = "ProductSubgradeRetainingElementType"/>
  <!--    -->
  <xsd:complexType name = "ProductSubgradeStockpileType">
    <xsd:complexContent>
      <xsd:extension base = "ProductSubgradeElementBase">
        <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
          <xsd:element minOccurs = "0" name = "SubgradeElement" type = "IfcSubgradeElement"/>
          <xsd:element minOccurs = "0" name = "DS_SubgradeStockpileBaseQuantities" type = "IfcQto_DS_SubgradeStockpileBaseQuantities"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--    -->
  <xsd:element name = "SubgradeStockpile" substitutionGroup = "ProductAECBase" type = "ProductSubgradeStockpileType"/>
  <!--    -->
  <xsd:complexType name = "IfcElementAssembly">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecElementAssembly.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "AssemblyPlace" type = "IfcAssemblyPlaceEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcElementAssemblyTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcAssemblyPlaceEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "SITE"/>
      <xsd:enumeration value = "FACTORY"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:simpleType name = "IfcElementAssemblyTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "ACCESSORY_ASSEMBLY"/>
      <xsd:enumeration value = "ARCH"/>
      <xsd:enumeration value = "BEAM_GRID"/>
      <xsd:enumeration value = "BRACED_FRAME"/>
      <xsd:enumeration value = "GIRDER"/>
      <xsd:enumeration value = "REINFORCEMENT_UNIT"/>
      <xsd:enumeration value = "RIGID_FRAME"/>
      <xsd:enumeration value = "SLAB_FIELD"/>
      <xsd:enumeration value = "TRUSS"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:group name = "IfcIdentificationGroup">
    <xsd:choice>
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Tag" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:group>
  <!--    -->
  <xsd:complexType name = "IfcPset_ElementAssemblyCommon">
    <xsd:annotation>
      <xsd:documentation>Common properties for all element assemblies.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcStatusEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "NEW"/>
      <xsd:enumeration value = "EXISTING"/>
      <xsd:enumeration value = "DEMOLISH"/>
      <xsd:enumeration value = "TEMPORARY"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcChimney">
    <xsd:annotation>
      <xsd:documentation>Chimneys are typically vertical, or as near as vertical, parts of the construction of a building and part of the building fabric. Often constructed by pre-cast or insitu concrete, today seldom by bricks.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcChimneyTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcChimneyTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcCovering">
    <xsd:annotation>
      <xsd:documentation>A covering is an element which covers some part of another element and is fully dependent on that other element.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcCoveringTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcCoveringTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "CEILING"/>
      <xsd:enumeration value = "FLOORING"/>
      <xsd:enumeration value = "CLADDING"/>
      <xsd:enumeration value = "ROOFING"/>
      <xsd:enumeration value = "MOLDING"/>
      <xsd:enumeration value = "SKIRTINGBOARD"/>
      <xsd:enumeration value = "INSULATION"/>
      <xsd:enumeration value = "MEMBRANE"/>
      <xsd:enumeration value = "SLEEVING"/>
      <xsd:enumeration value = "WRAPPING"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcCurtainWall">
    <xsd:annotation>
      <xsd:documentation>A curtain wall is an exterior wall of a building which is an assembly of components, hung from the edge of the floor/roof structure rather than bearing on a floor.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcCurtainWallTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcCurtainWallTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcDoor">
    <xsd:annotation>
      <xsd:documentation>The door is a building element that is predominately used to provide controlled access for people and goods. It includes constructions with hinged, pivoted, sliding, and additionally revolving and folding operations. A door consists of a lining and one or several panels.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "OverallHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "OverallWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcDoorTypeEnum"/>
      <xsd:element minOccurs = "0" name = "OperationType" type = "IfcDoorTypeOperationEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcDoorTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "DOOR"/>
      <xsd:enumeration value = "GATE"/>
      <xsd:enumeration value = "TRAPDOOR"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:simpleType name = "IfcDoorTypeOperationEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "SINGLE_SWING_LEFT"/>
      <xsd:enumeration value = "SINGLE_SWING_RIGHT"/>
      <xsd:enumeration value = "DOUBLE_DOOR_SINGLE_SWING"/>
      <xsd:enumeration value = "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT"/>
      <xsd:enumeration value = "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT"/>
      <xsd:enumeration value = "DOUBLE_SWING_LEFT"/>
      <xsd:enumeration value = "DOUBLE_SWING_RIGHT"/>
      <xsd:enumeration value = "DOUBLE_DOOR_DOUBLE_SWING"/>
      <xsd:enumeration value = "SLIDING_TO_LEFT"/>
      <xsd:enumeration value = "SLIDING_TO_RIGHT"/>
      <xsd:enumeration value = "DOUBLE_DOOR_SLIDING"/>
      <xsd:enumeration value = "FOLDING_TO_LEFT"/>
      <xsd:enumeration value = "FOLDING_TO_RIGHT"/>
      <xsd:enumeration value = "DOUBLE_DOOR_FOLDING"/>
      <xsd:enumeration value = "REVOLVING"/>
      <xsd:enumeration value = "ROLLINGUP"/>
      <xsd:enumeration value = "SWING_FIXED_LEFT"/>
      <xsd:enumeration value = "SWING_FIXED_RIGHT"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcDoorStandardCase">
    <xsd:annotation>
      <xsd:documentation>The standard door, IfcDoorStandardCase, defines a door with certain constraints for the provision of operation types, opening directions, frame and lining parameters, and with certain constraints for the geometric representation. The IfcDoorStandardCase handles all cases of doors, that 
a.) are inserted into an opening, represented by IfcOpeningElement, using the IfcRelFillsElement relationship; 
b.) have a local placement relative to this opening, and with the y-axis of the placement pointing into the opening direction; 
c.) have a profile geometry, represented by IfcShapeRepresentation.RepresentationIdentifier="Profile" as a closed curve to which the door parameters apply; 
d.) have a reference to an IfcDoorType to define the opening direction and the operation type (swinging, sliding, folding, etc.) of the door. The attribute OperationType shall be provided and not being UNDEFINED, and the attribute ParameterTakesPrecedence shall be "TRUE"; 
e.) have an IfcDoorLiningProperties and IfcDoorPanelProperties instances included in the set of HasPropertySets at IfcDoorType.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "OverallHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "OverallWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcDoorTypeEnum"/>
      <xsd:element minOccurs = "0" name = "OperationType" type = "IfcDoorTypeOperationEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcRailing">
    <xsd:annotation>
      <xsd:documentation>The railing is a frame assembly adjacent to human circulation spaces and at some space boundaries where it is used in lieu of walls or to compliment walls. Designed to aid humans, either as an optional physical support, or to prevent injury by falling.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcRailingTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcRailingTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "HANDRAIL"/>
      <xsd:enumeration value = "GUARDRAIL"/>
      <xsd:enumeration value = "BALUSTRADE"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcRamp">
    <xsd:annotation>
      <xsd:documentation>A ramp is a vertical passageway which provides a human circulation link between one floor level and another floor level at a different elevation. It may include a landing as an intermediate floor slab. A ramp normally does not include steps. The IfcRamp shall either be represented 
a.) as a ramp assembly that aggregates all components (ramp flight, landing, etc.) with own representations, or 
b.) as a single ramp without decomposition including all representations directly at the ramp entity.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcRampTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcRampTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "STRAIGHT_RUN_RAMP"/>
      <xsd:enumeration value = "TWO_STRAIGHT_RUN_RAMP"/>
      <xsd:enumeration value = "QUARTER_TURN_RAMP"/>
      <xsd:enumeration value = "TWO_QUARTER_TURN_RAMP"/>
      <xsd:enumeration value = "HALF_TURN_RAMP"/>
      <xsd:enumeration value = "SPIRAL_RAMP"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcRampFlight">
    <xsd:annotation>
      <xsd:documentation>A ramp comprises a single inclined segment, or several inclined segments that are connected by a horizontal segment, referred to as a landing. A ramp flight is the single inclined segment and part of the ramp construction. In case of single flight ramps, the ramp flight and the ramp are identical.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcRampFlightTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcRampFlightTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "STRAIGHT"/>
      <xsd:enumeration value = "SPIRAL"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcRoof">
    <xsd:annotation>
      <xsd:documentation>A roof is the covering of the top part of a building, it protects the building against the effects of wheather. The IfcRoof is a description of the total roof. It acts as a container entity, that aggregates all components of the roof, it represents.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcRoofTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcRoofTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "FLAT_ROOF"/>
      <xsd:enumeration value = "SHED_ROOF"/>
      <xsd:enumeration value = "GABLE_ROOF"/>
      <xsd:enumeration value = "HIP_ROOF"/>
      <xsd:enumeration value = "HIPPED_GABLE_ROOF"/>
      <xsd:enumeration value = "GAMBREL_ROOF"/>
      <xsd:enumeration value = "MANSARD_ROOF"/>
      <xsd:enumeration value = "BARREL_ROOF"/>
      <xsd:enumeration value = "RAINBOW_ROOF"/>
      <xsd:enumeration value = "BUTTERFLY_ROOF"/>
      <xsd:enumeration value = "PAVILION_ROOF"/>
      <xsd:enumeration value = "DOME_ROOF"/>
      <xsd:enumeration value = "FREEFORM"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcShadingDevice">
    <xsd:annotation>
      <xsd:documentation>Shading devices are purpose built devices to protect from the sunlight, from natural light, or screening them from view. Shading devices can form part of the facade or can be mounted inside the building, they can be fixed or operable.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcShadingDeviceTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcShadingDeviceTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "JALOUSIE"/>
      <xsd:enumeration value = "SHUTTER"/>
      <xsd:enumeration value = "AWNING"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcStair">
    <xsd:annotation>
      <xsd:documentation>A stair is a vertical passageway allowing occupants to walk (step) from one floor level to another floor level at a different elevation. It may include a landing as an intermediate floor slab.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcStairTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcStairTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "STRAIGHT_RUN_STAIR"/>
      <xsd:enumeration value = "TWO_STRAIGHT_RUN_STAIR"/>
      <xsd:enumeration value = "QUARTER_WINDING_STAIR"/>
      <xsd:enumeration value = "QUARTER_TURN_STAIR"/>
      <xsd:enumeration value = "HALF_WINDING_STAIR"/>
      <xsd:enumeration value = "HALF_TURN_STAIR"/>
      <xsd:enumeration value = "TWO_QUARTER_WINDING_STAIR"/>
      <xsd:enumeration value = "TWO_QUARTER_TURN_STAIR"/>
      <xsd:enumeration value = "THREE_QUARTER_WINDING_STAIR"/>
      <xsd:enumeration value = "THREE_QUARTER_TURN_STAIR"/>
      <xsd:enumeration value = "SPIRAL_STAIR"/>
      <xsd:enumeration value = "DOUBLE_RETURN_STAIR"/>
      <xsd:enumeration value = "CURVED_RUN_STAIR"/>
      <xsd:enumeration value = "TWO_CURVED_RUN_STAIR"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcStairFlight">
    <xsd:annotation>
      <xsd:documentation>A stair flight is an assembly of building components in a single "run" of stair steps (not interrupted by a landing). The stair steps and any stringers are included in the stair flight. A winder is also regarded a part of a stair flight.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "NumberOfRiser" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "NumberOfTreads" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "RiserHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TreadLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcStairFlightTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcStairFlightTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "STRAIGHT"/>
      <xsd:enumeration value = "WINDER"/>
      <xsd:enumeration value = "SPIRAL"/>
      <xsd:enumeration value = "CURVED"/>
      <xsd:enumeration value = "FREEFORM"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcWindow">
    <xsd:annotation>
      <xsd:documentation>The window is a building element that is predominately used to provide natural light and fresh air. It includes vertical opening but also horizontal opening such as skylights or light domes. It includes constructions with swinging, pivoting, sliding, or revolving panels and fixed panels. A window consists of a lining and one or several panels.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "OverallHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "OverallWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcWindowTypeEnum"/>
      <xsd:element minOccurs = "0" name = "PartitioningType" type = "IfcWindowTypePartitioningEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcWindowTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "WINDOW"/>
      <xsd:enumeration value = "SKYLIGHT"/>
      <xsd:enumeration value = "LIGHTDOME"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:simpleType name = "IfcWindowTypePartitioningEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "SINGLE_PANEL"/>
      <xsd:enumeration value = "DOUBLE_PANEL_VERTICAL"/>
      <xsd:enumeration value = "DOUBLE_PANEL_HORIZONTAL"/>
      <xsd:enumeration value = "TRIPLE_PANEL_VERTICAL"/>
      <xsd:enumeration value = "TRIPLE_PANEL_BOTTOM"/>
      <xsd:enumeration value = "TRIPLE_PANEL_TOP"/>
      <xsd:enumeration value = "TRIPLE_PANEL_LEFT"/>
      <xsd:enumeration value = "TRIPLE_PANEL_RIGHT"/>
      <xsd:enumeration value = "TRIPLE_PANEL_HORIZONTAL"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcWindowStandardCase">
    <xsd:annotation>
      <xsd:documentation>The standard window, IfcWindowStandardCase, defines a window with certain constraints for the provision of operation types, opening directions, frame and lining parameters, construction types and with certain constraints for the geometric representation. The IfcWindowStandardCase handles all cases of windows, that 
a.) are inserted into an opening, represented by IfcOpeningElement, using the IfcRelFillsElement relationship 
b.) have a local placement relative to this opening, and with the y-axis of the placement pointing into the opening direction 
c.) have a profile geometry, represented by IfcShapeRepresentation.RepresentationIdentifier="Profile" as a closed curve to which the window parameter apply. The profile represents a rectangle within the xz plane of the local placement 
d.) have a reference to an IfcWindowType to define the opening direction and the operation type (swinging, sliding, folding, etc.) of the window. The attribute OperationType shall be provided and not being UNDEFINED, and the attribute ParameterTakesPrecedence shall be "TRUE". 
e.) have a single IfcWindowLiningProperties and a set of IfcWindowPanelProperties instances included in the set of HasPropertySets at IfcWindowType</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "OverallHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "OverallWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcWindowTypeEnum"/>
      <xsd:element minOccurs = "0" name = "PartitioningType" type = "IfcWindowTypePartitioningEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ChimneyCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrence and type objects of chimneys.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "NumberOfDrafts" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_CoveringCeiling">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrence and type objects of covering with the predefined type set to CEILING.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Permeability" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "TileLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TileWidth" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_CoveringCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrence and type objects of covering</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "AcousticRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FlammabilityRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FragilityRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SurfaceSpreadOfFlame" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Combustible" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "Finish" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_CoveringFlooring">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrence and type objects of covering with the predefined type set to FLOORING.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "HasNonSkidSurface" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "HasAntiStaticSurface" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_CurtainWallCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcCurtainWall.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "AcousticRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Combustible" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SurfaceSpreadOfFlame" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DoorCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcDoor.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "AcousticRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SecurityRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "DurabilityRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "HygrothermalRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "WaterTightnessRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "MechanicalLoadRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "WindLoadRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "Infiltration" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "GlazingAreaFraction" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "HandicapAccessible" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireExit" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "HasDrive" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SelfClosing" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SmokeStop" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DoorWindowGlazingType">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of the glazing component of occurrences of Door and Window, used for thermal and lighting calculations.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "GlassLayers" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "GlassThickness1" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GlassThickness2" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GlassThickness3" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "FillGas" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GlassColor" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "IsTempered" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "IsLaminated" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "IsCoated" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "IsWired" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "VisibleLightReflectance" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "VisibleLightTransmittance" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "SolarAbsorption" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "SolarReflectance" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "SolarTransmittance" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "SolarHeatGainTransmittance" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "ShadingCoefficient" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittanceSummer" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittanceWinter" type = "ThermalTransmittanceType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DoorWindowShadingType">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of the shading component of occurrences of Door and Window, used for static (simplified) shading calculations.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ShadingCoefficient" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "ExternalShadingCoefficient" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "InternalShadingCoefficient" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "InsetShadingCoefficient" type = "RatioType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_RailingCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcRailing.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Diameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_RampCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcRamp.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "RequiredHeadroom" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "RequiredSlope" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireExit" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "HandicapAccessible" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "HasNonSkidSurface" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_RampFlightCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcRampFlight.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "Headroom" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ClearWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Slope" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "CounterSlope" type = "AngleType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_RoofCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcRoof. Note: Properties for ProjectedArea and TotalArea added in IFC 2x3</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "AcousticRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ShadingDeviceCommon">
    <xsd:annotation>
      <xsd:documentation>Shading device properties associated with an element that represents a shading device</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "ShadingDeviceType" type = "IfcShadingDeviceTypeEnum1"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "MechanicalOperated" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "SolarTransmittance" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "VisibleLightTransmittance" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "SolarReflectance" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "VisibleLightReflectance" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "Roughness" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SurfaceColor" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcShadingDeviceTypeEnum1">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "FIXED"/>
      <xsd:enumeration value = "MOVABLE"/>
      <xsd:enumeration value = "OVERHANG"/>
      <xsd:enumeration value = "SIDEFIN"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ShadingDevicePHistory">
    <xsd:annotation>
      <xsd:documentation>Shading device performance history attributes.
</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "TiltAngle" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Azimuth" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_StairCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcStair.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "NumberOfRiser" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "NumberOfTreads" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "RiserHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TreadLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NosingLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WalkingLineOffset" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TreadLengthAtOffset" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TreadLengthAtInnerSide" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WaistThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "RequiredHeadroom" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireExit" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "HandicapAccessible" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "HasNonSkidSurface" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_StairFlightCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcStairFlight.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "NumberOfRiser" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "NumberOfTreads" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "RiserHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TreadLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NosingLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WalkingLineOffset" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TreadLengthAtOffset" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TreadLengthAtInnerSide" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Headroom" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WaistThickness" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_WindowCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of Window.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "AcousticRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SecurityRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "Infiltration" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "GlazingAreaFraction" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "HasSillExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "HasSillInternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "HasDrive" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SmokeStop" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireExit" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "WaterTightnessRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "MechanicalLoadRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "WindLoadRating" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_ChimneyBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of chimneys.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_CoveringBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of coverings applied to spaces.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetArea" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_CurtainWallQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of curtain walls.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSideArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSideArea" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DoorBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of doors.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Perimeter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Area" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_RailingBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of railings.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_RampFlightBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of ramp flights.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_RoofBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of roof.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "ProjectedArea" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_StairFlightBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of stair flights.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_WindowBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of windows.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Perimeter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Area" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcSite">
    <xsd:annotation>
      <xsd:documentation>
    IFC base interface for AecSite object.
Following attributes are not supported yet, since they could be part of a modeler dedicated to Coordinate Systems:
- RefLatitude
- RefLongitude
- RefElevation</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "LandTitleNumber" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "InternalLocation" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "AddressLines" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "PostalBox" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Town" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Region" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "PostalCode" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Country" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcElementCompositionEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "COMPLEX"/>
      <xsd:enumeration value = "ELEMENT"/>
      <xsd:enumeration value = "PARTIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcSpatialStructureElement">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcCompositionTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcCompositionTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "COMPLEX"/>
      <xsd:enumeration value = "ELEMENT"/>
      <xsd:enumeration value = "PARTIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_AirSideSystemInformation">
    <xsd:annotation>
      <xsd:documentation>Attributes that apply to an air side HVAC system. HISTORY: New property set in IFC Release 1.0.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Name" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Description" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "AirSideSystemType" type = "IfcAirSideSystemTypeEnum"/>
      <xsd:element minOccurs = "0" name = "AirSideSystemDistributionType" type = "IfcAirSideSystemDistributionTypeEnum"/>
      <xsd:element minOccurs = "0" name = "TotalAirflow" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "EnergyGainTotal" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "AirflowSensible" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "EnergyGainSensible" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "EnergyLoss" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "LightingDiversity" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "InfiltrationDiversitySummer" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "InfiltrationDiversityWinter" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "ApplianceDiversity" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "LoadSafetyFactor" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "HeatingTemperatureDelta" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "CoolingTemperatureDelta" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "Ventilation" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "FanPower" type = "PowerType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcAirSideSystemTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "CONSTANTVOLUME"/>
      <xsd:enumeration value = "CONSTANTVOLUMESINGLEZONE"/>
      <xsd:enumeration value = "CONSTANTVOLUMEMULTIPLEZONEREHEAT"/>
      <xsd:enumeration value = "CONSTANTVOLUMEBYPASS"/>
      <xsd:enumeration value = "VARIABLEAIRVOLUME"/>
      <xsd:enumeration value = "VARIABLEAIRVOLUMEREHEAT"/>
      <xsd:enumeration value = "VARIABLEAIRVOLUMEINDUCTION"/>
      <xsd:enumeration value = "VARIABLEAIRVOLUMEFANPOWERED"/>
      <xsd:enumeration value = "VARIABLEAIRVOLUMEDUALCONDUIT"/>
      <xsd:enumeration value = "VARIABLEAIRVOLUMEVARIABLEDIFFUSERS"/>
      <xsd:enumeration value = "VARIABLEAIRVOLUMEVARIABLETEMPERATURE"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:simpleType name = "IfcAirSideSystemDistributionTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "SINGLEDUCT"/>
      <xsd:enumeration value = "DUALDUCT"/>
      <xsd:enumeration value = "MULTIZONE"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ConcreteElementGeneral">
    <xsd:annotation>
      <xsd:documentation>General properties common to different types of concrete elements, including reinforced concrete elements. The property set can be used by a number of subtypes of AecElement, indicated that such element is designed or constructed using a concrete construction method.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ConstructionMethod" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "StructuralClass" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "StrengthClass" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ExposureClass" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ReinforcementVolumeRatio" type = "DensityType"/>
      <xsd:element minOccurs = "0" name = "ReinforcementAreaRatio" type = "SurfacicMassType"/>
      <xsd:element minOccurs = "0" name = "DimensionalAccuracyClass" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ConstructionToleranceClass" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ConcreteCover" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ConcreteCoverAtMainBars" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ConcreteCoverAtLinks" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ReinforcementStrengthClass" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_Condition">
    <xsd:annotation>
      <xsd:documentation>Determines the state or condition of an element at a particular point in time.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "AssessmentDate" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "AssessmentCondition" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "AssessmentDescription" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_EnvironmentalImpactIndicators">
    <xsd:annotation>
      <xsd:documentation>Environmental impact indicators are related to a given "functional unit" (ISO 14040 concept). An example of functional unit is a "Double glazing window with PVC frame" and the unit to consider is "one square meter of opening elements filled by this product". Indicators values are valid for the whole life cycle or only a specific phase (see LifeCyclePhase property). Values of all the indicators are expressed per year according to the expected service life. The first five properties capture the characteristics of the functional unit. The following properties are related to environmental indicators. There is a consensus agreement international for the five one. Last ones are not yet fully and formally agreed at the international level.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FunctionalUnitReference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Unit" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LifeCyclePhase" type = "IfcLifeCyclePhaseEnum"/>
      <xsd:element minOccurs = "0" name = "ExpectedServiceLife" type = "TimeType"/>
      <xsd:element minOccurs = "0" name = "TotalPrimaryEnergyConsumptionPerUnit" type = "EnergyType"/>
      <xsd:element minOccurs = "0" name = "WaterConsumptionPerUnit" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "HazardousWastePerUnit" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NonHazardousWastePerUnit" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "ClimateChangePerUnit" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "AtmosphericAcidificationPerUnit" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "RenewableEnergyConsumptionPerUnit" type = "EnergyType"/>
      <xsd:element minOccurs = "0" name = "NonRenewableEnergyConsumptionPerUnit" type = "EnergyType"/>
      <xsd:element minOccurs = "0" name = "ResourceDepletionPerUnit" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "InertWastePerUnit" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "RadioactiveWastePerUnit" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "StratosphericOzoneLayerDestructionPerUnit" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "PhotochemicalOzoneFormationPerUnit" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "EutrophicationPerUnit" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcLifeCyclePhaseEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "Acquisition"/>
      <xsd:enumeration value = "Cradletosite"/>
      <xsd:enumeration value = "Deconstruction"/>
      <xsd:enumeration value = "Disposal"/>
      <xsd:enumeration value = "Disposaltransport"/>
      <xsd:enumeration value = "Growth"/>
      <xsd:enumeration value = "Installation"/>
      <xsd:enumeration value = "Maintenance"/>
      <xsd:enumeration value = "Manufacture"/>
      <xsd:enumeration value = "Occupancy"/>
      <xsd:enumeration value = "Operation"/>
      <xsd:enumeration value = "Procurement"/>
      <xsd:enumeration value = "Production"/>
      <xsd:enumeration value = "Productiontransport"/>
      <xsd:enumeration value = "Recovery"/>
      <xsd:enumeration value = "Refurbishment"/>
      <xsd:enumeration value = "Repair"/>
      <xsd:enumeration value = "Replacement"/>
      <xsd:enumeration value = "Transport"/>
      <xsd:enumeration value = "Usage"/>
      <xsd:enumeration value = "Waste"/>
      <xsd:enumeration value = "Wholelifecycle"/>
      <xsd:enumeration value = "UserDefined"/>
      <xsd:enumeration value = "NotDefined"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_EnvironmentalImpactValues">
    <xsd:annotation>
      <xsd:documentation>
    The following properties capture environmental impact values of an element. They correspond to the indicators defined into Pset_EnvironmentalImpactIndicators.
    Environmental impact values are obtained multiplying indicator value per unit by the relevant quantity of the element.
  </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "TotalPrimaryEnergyConsumption" type = "EnergyType"/>
      <xsd:element minOccurs = "0" name = "WaterConsumption" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "HazardousWaste" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NonHazardousWaste" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "ClimateChange" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "AtmosphericAcidification" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "RenewableEnergyConsumption" type = "EnergyType"/>
      <xsd:element minOccurs = "0" name = "NonRenewableEnergyConsumption" type = "EnergyType"/>
      <xsd:element minOccurs = "0" name = "ResourceDepletion" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "InertWaste" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "RadioactiveWaste" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "StratosphericOzoneLayerDestruction" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "PhotochemicalOzoneFormation" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "Eutrophication" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "LeadInTime" type = "TimeType"/>
      <xsd:element minOccurs = "0" name = "Duration" type = "TimeType"/>
      <xsd:element minOccurs = "0" name = "LeadOutTime" type = "TimeType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_LandRegistration">
    <xsd:annotation>
      <xsd:documentation>Specifies the identity of land within a statutory registration system. NOTE: The property LandTitleID is to be used in preference to deprecated attribute LandTitleNumber in IfcSite.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "LandID" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "IsPermanentID" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "LandTitleID" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ManufacturerOccurrence">
    <xsd:annotation>
      <xsd:documentation>Defines properties of individual instances of manufactured products that may be given by the manufacturer.
HISTORY: IFC 2x4: AssemblyPlace property added. This property does not need to be asserted if Pset_ManufacturerTypeInformation is allocated to the type and the AssemblyPlace property is asserted there.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "AcquisitionDate" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "BarCode" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SerialNumber" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BatchReference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "AssemblyPlace" type = "IfcAssemblyPlaceEnum1"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcAssemblyPlaceEnum1">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "FACTORY"/>
      <xsd:enumeration value = "OFFSITE"/>
      <xsd:enumeration value = "SITE"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ManufacturerTypeInformation">
    <xsd:annotation>
      <xsd:documentation>Defines characteristics of types (ranges) of manufactured products that may be given by the manufacturer. Note that the term 'manufactured' may also be used to refer to products that are supplied and identified by the supplier or that are assembled off site by a third party provider. 
HISTORY: This property set replaces the entity IfcManufacturerInformation from previous IFC releases. IFC 2x4: AssemblyPlace property added.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "GlobalTradeItemNumber" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ArticleNumber" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ModelReference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ModelLabel" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Manufacturer" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ProductionYear" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "AssemblyPlace" type = "IfcAssemblyPlaceEnum1"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_PackingInstructions">
    <xsd:annotation>
      <xsd:documentation>Packing instructions are specific instructions relating to the packing that is required for an artifact in the event of a move (or transport). </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "PackingCareType" type = "IfcPackingCareTypeEnum"/>
      <xsd:element minOccurs = "0" name = "WrappingMaterial" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ContainerMaterial" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SpecialInstructions" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcPackingCareTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "FRAGILE"/>
      <xsd:enumeration value = "HANDLEWITHCARE"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_PrecastConcreteElementFabrication">
    <xsd:annotation>
      <xsd:documentation>Production and manufacturing related properties common to different types of precast concrete elements. The Pset can be used by a number of subtypes of AecStructuralElement and AecArchitecturalElements. Some of the properties apply only for specific types of precast concrete elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "TypeDesignator" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ProductionLotId" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SerialNumber" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "PieceMark" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "AsBuiltLocationNumber" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ActualProductionDate" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ActualErectionDate" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_PrecastConcreteElementGeneral">
    <xsd:annotation>
      <xsd:documentation>
    Production and manufacturing related properties common to different types of precast concrete elements. The Pset can be used by a number of subtypes of AecStructuralElement and AecArchitecturalElement. Some of the properties apply only for specific types of precast concrete elements.
Attribute SupportDuringTransportDocReference is not supported.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "TypeDesignator" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CornerChamfer" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ManufacturingToleranceClass" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FormStrippingStrength" type = "PressureType"/>
      <xsd:element minOccurs = "0" name = "LiftingStrength" type = "PressureType"/>
      <xsd:element minOccurs = "0" name = "ReleaseStrength" type = "PressureType"/>
      <xsd:element minOccurs = "0" name = "MinimumAllowableSupportLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InitialTension" type = "PressureType"/>
      <xsd:element minOccurs = "0" name = "TendonRelaxation" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "TransportationStrength" type = "PressureType"/>
      <xsd:element minOccurs = "0" name = "SupportDuringTransportDescription" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "HollowCorePlugging" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CamberAtMidspan" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "BatterAtStart" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "BatterAtEnd" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "Twisting" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "Shortening" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "PieceMark" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "DesignLocationNumber" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_PropertyAgreement">
    <xsd:annotation>
      <xsd:documentation>A property agreement is an agreement that enables the occupation of a property for a period of time. The objective is to capture the information within an agreement that is relevant to a facilities manager. Design and construction information associated with the property is not considered.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "AgreementType" type = "IfcAgreementTypeEnum"/>
      <xsd:element minOccurs = "0" name = "Identifier" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Version" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "VersionDate" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "PropertyName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CommencementDate" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "TerminationDate" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "Duration" type = "TimeType"/>
      <xsd:element minOccurs = "0" name = "Options" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ConditionCommencement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Restrictions" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ConditionTermination" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcAgreementTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "ASSIGNMENT"/>
      <xsd:enumeration value = "LEASE"/>
      <xsd:enumeration value = "TENANT"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ServiceLife">
    <xsd:annotation>
      <xsd:documentation>Captures the period of time that an artifact will last along with various factors that impact the expected service life.  HISTORY: Introduced in IFC2X4 as replacement for IfcServiceLife and IfcServiceLifeFactor.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ServiceLifeType" type = "IfcServiceLifeTypeEnum"/>
      <xsd:element minOccurs = "0" name = "ServiceLifeDuration" type = "TimeType"/>
      <xsd:element minOccurs = "0" name = "QualityOfComponents" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "DesignLevel" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "WorkExecutionLevel" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "IndoorEnvironment" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "OutdoorEnvironment" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "InUseConditions" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "MaintenanceLevel" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "MeanTimeBetweenFailure" type = "TimeType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcServiceLifeTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "ACTUALSERVICELIFE"/>
      <xsd:enumeration value = "EXPECTEDSERVICELIFE"/>
      <xsd:enumeration value = "OPTIMISTICREFERENCESERVICELIFE"/>
      <xsd:enumeration value = "PESSIMISTICREFERENCESERVICELIFE"/>
      <xsd:enumeration value = "REFERENCESERVICELIFE"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SiteCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcSite. Please note that several site attributes are handled directly at the IfcSite instance, the site number (or short name) by IfcSite.Name, the site name (or long name) by IfcSite.LongName, and the description (or comments) by IfcSite.Description. The land title number is also given as an explicit attribute IfcSite.LandTitleNumber. Actual site quantities, like site perimeter, site area and site volume are provided by IfcElementQuantity, and site classification according to national building code by IfcClassificationReference. The global positioning of the site in terms of Northing and Easting and height above sea level datum is given by IfcSite.RefLongitude, IfcSite.RefLatitude, IfcSite.RefElevation and the postal address by IfcSite.SiteAddress.
Following attributes are not supported yet, since they could be part of a modeler dedicated to Coordinate Systems:
- RefLatitude
- RefLongitude
- RefElevation</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BuildableArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "SiteCoverageRatio" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "FloorAreaRatio" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "BuildingHeightLimit" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TotalArea" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceFireSafetyRequirements">
    <xsd:annotation>
      <xsd:documentation>Properties related to fire protection of spaces that apply to the occurrences of IfcSpace or IfcZone.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "FireRiskFactor" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FlammableStorage" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireExit" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SprinklerProtection" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SprinklerProtectionAutomatic" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "AirPressurization" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceLightingRequirements">
    <xsd:annotation>
      <xsd:documentation>Properties related to the lighting requirements that apply to the occurrences of IfcSpace or IfcZone. This includes the required artificial lighting, illuminance, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ArtificialLighting" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "Illuminance" type = "IlluminanceType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceOccupancyRequirements">
    <xsd:annotation>
      <xsd:documentation>Properties concerning work activities occurring or expected to occur within one or a set of similar spatial structure elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "OccupancyType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "OccupancyNumber" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "OccupancyNumberPeak" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "OccupancyTimePerDay" type = "TimeType"/>
      <xsd:element minOccurs = "0" name = "AreaPerOccupant" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "MinimumHeadroom" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "IsOutlookDesirable" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceThermalRequirements">
    <xsd:annotation>
      <xsd:documentation>Properties related to the comfort requirements for thermal and other  thermal related performance properties of spaces that apply to the occurrences of IfcSpace, IfcSpatialZone or IfcZone. It can also be used to capture requirements for IfcSpaceType's. This includes the required design temperature, humidity, ventilation, and air conditioning.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "SpaceTemperature" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "SpaceTemperatureMax" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "SpaceTemperatureMin" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "SpaceTemperatureSummerMax" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "SpaceTemperatureSummerMin" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "SpaceTemperatureWinterMax" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "SpaceTemperatureWinterMin" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "SpaceHumidity" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "SpaceHumidityMax" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "SpaceHumidityMin" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "SpaceHumiditySummer" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "SpaceHumidityWinter" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "DiscontinuedHeating" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "NaturalVentilation" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "NaturalVentilationRate" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "MechanicalVentilationRate" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "AirConditioning" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "AirConditioningCentral" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ThermalLoadAggregate">
    <xsd:annotation>
      <xsd:documentation>The aggregated thermal loads experienced by one or many spaces, zones, or buildings. This aggregate thermal load information is typically addressed by a system or plant. HISTORY: New property set in IFC Release 1.0 (Pset_AggregateLoadInformation); renamed Pset_ThermalLoadAggregate in IFC2x2.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "TotalCoolingLoad" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "TotalHeatingLoad" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "LightingDiversity" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "InfiltrationDiversitySummer" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "InfiltrationDiversityWinter" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "ApplianceDiversity" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "LoadSafetyFactor" type = "RatioType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ThermalLoadDesignCriteria">
    <xsd:annotation>
      <xsd:documentation>Building thermal load design data that are used for calculating thermal loads in a space or building. HISTORY: New property set in IFC Release 1.0 (Pset_LoadDesignCriteria); renamed Pset_ThermalLoadDesignCriteria in IFC2x2.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "OccupancyDiversity" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "OutsideAirPerPerson" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "ReceptacleLoadIntensity" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "AppliancePercentLoadToRadiant" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "LightingLoadIntensity" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "LightingPercentLoadToReturnAir" type = "RatioType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_Warranty">
    <xsd:annotation>
      <xsd:documentation>
    An assurance given by the seller or provider of an artefact that the artefact is without defects and will operate as described for a defined period of time without failure and that if a defect does arise during that time, that it will be corrected by the seller or provider.
  </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "WarrantyIdentifier" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "WarrantyStartDate" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "WarrantyEndDate" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "IsExtendedWarranty" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "WarrantyPeriod" type = "TimeType"/>
      <xsd:element minOccurs = "0" name = "PointOfContact" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "WarrantyContent" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Exclusions" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_FoundationBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_OtherSpatialStructureElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_TerrainBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Area" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_SiteBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of site.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossPerimeter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossArea" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcDiscreteAccessory">
    <xsd:annotation>
      <xsd:documentation>A discrete accessory is a representation of different kinds of accessories included in or added to elements. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcDiscreteAccessoryTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcDiscreteAccessoryTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "ANCHORPLATE"/>
      <xsd:enumeration value = "BRACKET"/>
      <xsd:enumeration value = "SHOE"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcMechanicalFastener">
    <xsd:annotation>
      <xsd:documentation>IFC object interface for AecTendonAnchor object. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "NominalDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NominalLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcPredefinedTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcPredefinedTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "ANCHORBOLT"/>
      <xsd:enumeration value = "BOLT"/>
      <xsd:enumeration value = "DOWEL"/>
      <xsd:enumeration value = "NAIL"/>
      <xsd:enumeration value = "NAILPLATE"/>
      <xsd:enumeration value = "RIVET"/>
      <xsd:enumeration value = "SCREW"/>
      <xsd:enumeration value = "SHEARCONNECTOR"/>
      <xsd:enumeration value = "STAPLE"/>
      <xsd:enumeration value = "STUDSHEARCONNECTOR"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcReinforcingBar">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecReinforcingBar object. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "SteelGrade" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcReinforcingBarTypeEnum"/>
      <xsd:element minOccurs = "0" name = "NominalDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "BarLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "BarSurface" type = "IfcReinforcingBarSurfaceEnum"/>
      <xsd:element minOccurs = "0" name = "BendingShapeCode" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BendingParameters" type = "AttributeValueDoubleType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcReinforcingBarTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "ANCHORING"/>
      <xsd:enumeration value = "EDGE"/>
      <xsd:enumeration value = "LIGATURE"/>
      <xsd:enumeration value = "MAIN"/>
      <xsd:enumeration value = "PUNCHING"/>
      <xsd:enumeration value = "RING"/>
      <xsd:enumeration value = "SHEAR"/>
      <xsd:enumeration value = "STUD"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:simpleType name = "IfcReinforcingBarSurfaceEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "PLAIN"/>
      <xsd:enumeration value = "TEXTURED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcReinforcingMesh">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecReinforcingMesh object. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "SteelGrade" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcReinforcingMeshTypeEnum"/>
      <xsd:element minOccurs = "0" name = "MeshLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "MeshWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LongitudinalBarNominalDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TransverseBarNominalDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LongitudinalBarCrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "TransverseBarCrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "LongitudinalBarSpacing" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "TransverseBarSpacing" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcReinforcingMeshTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcTendon">
    <xsd:annotation>
      <xsd:documentation>IFC object interface for AecTendon object. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "SteelGrade" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcTendonTypeEnum"/>
      <xsd:element minOccurs = "0" name = "TensionForce" type = "ForceType"/>
      <xsd:element minOccurs = "0" name = "PreStress" type = "PressureType"/>
      <xsd:element minOccurs = "0" name = "FrictionCoefficient" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "AnchorageSlip" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "MinCurvatureRadius" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NominalDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcTendonTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "BAR"/>
      <xsd:enumeration value = "COATED"/>
      <xsd:enumeration value = "STRAND"/>
      <xsd:enumeration value = "WIRE"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcTendonAnchor">
    <xsd:annotation>
      <xsd:documentation>IFC object interface for AecTendonAnchor object. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "SteelGrade" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcTendonAnchorTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcTendonAnchorTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "COUPLER"/>
      <xsd:enumeration value = "FIXED_END"/>
      <xsd:enumeration value = "TENSIONING_END"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DiscreteAccessoryColumnShoe">
    <xsd:annotation>
      <xsd:documentation>Definition from IAI: Shape properties common to column shoes.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ColumnShoeBasePlateThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ColumnShoeBasePlateWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ColumnShoeBasePlateDepth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ColumnShoeCasingHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ColumnShoeCasingWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ColumnShoeCasingDepth" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DiscreteAccessoryCornerFixingPlate">
    <xsd:annotation>
      <xsd:documentation>Definition from IAI: Properties specific to corner fixing plates.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "CornerFixingPlateLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CornerFixingPlateThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CornerFixingPlateFlangeWidthInPlaneZ" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CornerFixingPlateFlangeWidthInPlaneX" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DiscreteAccessoryDiagonalTrussConnector">
    <xsd:annotation>
      <xsd:documentation>Definition from IAI: Shape properties specific to connecting accessories in truss form with diagonal cross-bars.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "DiagonalTrussHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "DiagonalTrussLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "DiagonalTrussCrossBarSpacing" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "DiagonalTrussBaseBarDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "DiagonalTrussSecondaryBarDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "DiagonalTrussCrossBarDiameter" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DiscreteAccessoryEdgeFixingPlate">
    <xsd:annotation>
      <xsd:documentation>Properties specific to edge fixing plates.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "EdgeFixingPlateLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "EdgeFixingPlateThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "EdgeFixingPlateFlangeWidthInPlaneZ" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "EdgeFixingPlateFlangeWidthInPlaneX" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DiscreteAccessoryFixingSocket">
    <xsd:annotation>
      <xsd:documentation>Properties common to fixing sockets.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "FixingSocketTypeReference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FixingSocketHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "FixingSocketThreadDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "FixingSocketThreadLength" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DiscreteAccessoryLadderTrussConnector">
    <xsd:annotation>
      <xsd:documentation>Definition from IAI: Shape properties specific to connecting accessories in truss form with straight cross-bars in ladder shape.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "LadderTrussHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LadderTrussLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LadderTrussCrossBarSpacing" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LadderTrussBaseBarDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LadderTrussSecondaryBarDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LadderTrussCrossBarDiameter" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DiscreteAccessoryStandardFixingPlate">
    <xsd:annotation>
      <xsd:documentation>Definition from IAI: Properties specific to standard fixing plates.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "StandardFixingPlateWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "StandardFixingPlateDepth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "StandardFixingPlateThickness" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DiscreteAccessoryWireLoop">
    <xsd:annotation>
      <xsd:documentation>Definition from IAI: Shape properties common to wire loop joint connectors.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "WireLoopBasePlateThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WireLoopBasePlateWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WireLoopBasePlateLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WireDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WireEmbeddingLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WireLoopLength" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DS_MechanicalFastenerAnchorCommon">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "InternalDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InternalSmallDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InternalLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InternalDistance" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "BaseDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "HeadLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "SteelGrade" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_DS_MechanicalFastenerCouplerCommon">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Threaded" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThreadedShape" type = "IfcThreadedShapeEnum"/>
      <xsd:element minOccurs = "0" name = "InternalDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InternalSecondDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InternalSmallDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InternalSecondSmallDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InternalLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InternalSecondLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "InternalDistance" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NumberOfBolts" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "BoltsDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "BoltsSpacing" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "BoltsHeadHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "SteelGrade" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcThreadedShapeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "STANDARD"/>
      <xsd:enumeration value = "CONIC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_MechanicalFastenerCommon">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "NominalDiameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NominalLength" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_MechanicalFastenerAnchorBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Count" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "Weight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_MechanicalFastenerCouplerBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Count" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "Weight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_ReinforcingElementBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of reinforcing elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Count" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Weight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcFurnishingElement">
    <xsd:annotation>
      <xsd:documentation>A furnishing element is a generalization of all furniture related objects. Furnishing objects are characterized as being</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcFurniture">
    <xsd:annotation>
      <xsd:documentation>
    Furniture defines complete furnishings such as a table, desk, chair, or cabinet, which may or may not be permanently attached to a building structure.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcFurnitureTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcFurnitureTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "CHAIR"/>
      <xsd:enumeration value = "TABLE"/>
      <xsd:enumeration value = "DESK"/>
      <xsd:enumeration value = "BED"/>
      <xsd:enumeration value = "FILECABINET"/>
      <xsd:enumeration value = "SHELF"/>
      <xsd:enumeration value = "SOFA"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcSystemFurnitureElement">
    <xsd:annotation>
      <xsd:documentation>A system furniture element defines components of modular furniture which are not directly placed in a building structure but aggregated inside furniture.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcSystemFurnitureElementTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcSystemFurnitureElementTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "PANEL"/>
      <xsd:enumeration value = "WORKSURFACE"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_FurnitureTypeChair">
    <xsd:annotation>
      <xsd:documentation>A set of specific properties for furniture type chair.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "SeatingHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "HighestSeatingHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LowestSeatingHeight" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_FurnitureTypeCommon">
    <xsd:annotation>
      <xsd:documentation>Common properties for all types of furniture such as chair, desk, table, and file cabinet. HISTORY: IFC 2x4: "IsBuiltIn" property added</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "Description" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Style" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "NominalHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NominalLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NominalDepth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "MainColor" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "IsBuiltIn" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_FurnitureTypeDesk">
    <xsd:annotation>
      <xsd:documentation>A set of specific properties for furniture type desk.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "WorksurfaceArea" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_FurnitureTypeFileCabinet">
    <xsd:annotation>
      <xsd:documentation>A set of specific properties for furniture type file cabinet.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "WithLock" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_FurnitureTypeTable">
    <xsd:annotation>
      <xsd:documentation>HISTORY: First issued in IFC Release R1.5. Renamed from Pset_Table</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "WorksurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NumberOfChairs" type = "AttributeValueIntegerType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SystemFurnitureElementTypeCommon">
    <xsd:annotation>
      <xsd:documentation>Common properties for all systems furniture (I.e. modular furniture) element types (e.g. vertical panels, work surfaces, and storage).</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "IsUsed" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "GroupCode" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "NominalWidth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NominalHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Finishing" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SystemFurnitureElementTypePanel">
    <xsd:annotation>
      <xsd:documentation>A set of specific properties for vertical panels that assembly workstations.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "HasOpening" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FurniturePanelType" type = "IfcFurniturePanelTypeEnum"/>
      <xsd:element minOccurs = "0" name = "NominalThickness" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcFurniturePanelTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "ACOUSTICAL"/>
      <xsd:enumeration value = "GLAZED"/>
      <xsd:enumeration value = "HORZ_SEG"/>
      <xsd:enumeration value = "MONOLITHIC"/>
      <xsd:enumeration value = "OPEN"/>
      <xsd:enumeration value = "ENDS"/>
      <xsd:enumeration value = "DOOR"/>
      <xsd:enumeration value = "SCREEN"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SystemFurnitureElementTypeWorkSurface">
    <xsd:annotation>
      <xsd:documentation>A set of specific properties for work surfaces used in workstations.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "UsePurpose" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SupportType" type = "IfcSupportTypeEnum"/>
      <xsd:element minOccurs = "0" name = "HangingHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NominalThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ShapeDescription" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcSupportTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "FREESTANDING"/>
      <xsd:enumeration value = "SUPPORTED"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcBeam">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecBeam object, particularly for beams with changing profile sizes along the extrusion, or beams defined by non-linear extrusion, or beams having only 'Brep', or 'SurfaceModel' geometry.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcBeamTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcBeamTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "BEAM"/>
      <xsd:enumeration value = "JOIST"/>
      <xsd:enumeration value = "HOLLOWCORE"/>
      <xsd:enumeration value = "LINTEL"/>
      <xsd:enumeration value = "SPANDREL"/>
      <xsd:enumeration value = "T_BEAM"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcBeamStandardCase">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecBeam object, that have a profile defined that is swept along a directrix. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcBeamTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcBuildingElementProxy">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecOtherStructuralElement objects. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcBuildingElementProxyTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcBuildingElementProxyTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "COMPLEX"/>
      <xsd:enumeration value = "ELEMENT"/>
      <xsd:enumeration value = "PARTIAL"/>
      <xsd:enumeration value = "PROVISIONFORVOID"/>
      <xsd:enumeration value = "PROVISIONFORSPACE"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcColumn">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecColumn object, particularly for columns with changing profile sizes along the extrusion, or columns defined by non-linear extrusion, or columns having only 'Brep', or 'SurfaceModel' geometry.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcColumnTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcColumnTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "COLUMN"/>
      <xsd:enumeration value = "PILASTER"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcColumnStandardCase">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecColumn object, that have a profile defined that is swept along a directrix. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcColumnTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcFooting">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecFooting objects. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcFootingTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcFootingTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "CAISSON_FOUNDATION"/>
      <xsd:enumeration value = "FOOTING_BEAM"/>
      <xsd:enumeration value = "PAD_FOOTING"/>
      <xsd:enumeration value = "PILE_CAP"/>
      <xsd:enumeration value = "STRIP_FOOTING"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcMember">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecMember object, particularly for members with changing profile sizes along the extrusion, or members defined by non-linear extrusion, or members having only 'Brep', or 'SurfaceModel' geometry. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcMemberTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcMemberTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "BRACE"/>
      <xsd:enumeration value = "CHORD"/>
      <xsd:enumeration value = "COLLAR"/>
      <xsd:enumeration value = "MEMBER"/>
      <xsd:enumeration value = "MULLION"/>
      <xsd:enumeration value = "PLATE"/>
      <xsd:enumeration value = "POST"/>
      <xsd:enumeration value = "PURLIN"/>
      <xsd:enumeration value = "RAFTER"/>
      <xsd:enumeration value = "STRINGER"/>
      <xsd:enumeration value = "STRUT"/>
      <xsd:enumeration value = "STUD"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcMemberStandardCase">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecMember object, that have a profile defined that is swept along a directrix.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcMemberTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcOpeningElement">
    <xsd:annotation>
      <xsd:documentation>The opening element stands for opening, recess or chase, all reflecting voids. It represents a void within any element that has physical manifestation. Openings can be inserted into walls, slabs, beams, columns, or other elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcOpeningElementTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcOpeningElementTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "OPENING"/>
      <xsd:enumeration value = "RECESS"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcOpeningStandardCase">
    <xsd:annotation>
      <xsd:documentation>The standard opening defines an opening with certain constraints for the dimension parameters, position within the voided element, and with certain constraints for the geometric representation. The IfcOpeningStandardCase handles all cases of openings, that:</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcOpeningElementTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPile">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecPile object.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcPileTypeEnum"/>
      <xsd:element minOccurs = "0" name = "ConstructionType" type = "IfcPileConstructionEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcPileTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "BORED"/>
      <xsd:enumeration value = "DRIVEN"/>
      <xsd:enumeration value = "JETGROUTING"/>
      <xsd:enumeration value = "COHESION"/>
      <xsd:enumeration value = "FRICTION"/>
      <xsd:enumeration value = "SUPPORT"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:simpleType name = "IfcPileConstructionEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "CAST_IN_PLACE"/>
      <xsd:enumeration value = "COMPOSITE"/>
      <xsd:enumeration value = "PRECAST_CONCRETE"/>
      <xsd:enumeration value = "PREFAB_STEEL"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPlate">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecPlate object, particularly for plates with changing thickness, or plates with non planar surfaces, and plates having only 'SurfaceModel' or 'Brep' geometry.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcPlateTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcPlateTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "CURTAIN_PANEL"/>
      <xsd:enumeration value = "SHEET"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPlateStandardCase">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecPlate object, that are prismatic. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcPlateTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcSlab">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecPlate object, particularly for slabs with changing thickness, or slabs with non planar surfaces, and slabs having only 'SweptSolid' or 'Brep' geometry. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcSlabTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcSlabTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "FLOOR"/>
      <xsd:enumeration value = "ROOF"/>
      <xsd:enumeration value = "LANDING"/>
      <xsd:enumeration value = "BASESLAB"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcSlabElementedCase">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecSlab objects, that are composite.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcSlabTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcSlabStandardCase">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecSlab objects, that are prismatic.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcSlabTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcWall">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecWall object, particularly for walls with changing thickness along the wall path (e.g. polygonal walls), or walls with a non-rectangular cross sections (e.g. L-shaped retaining walls), and walls having an extrusion axis that is unequal to the global Z axis of the project (i.e. non-vertical walls), or walls having only 'Brep', or 'SurfaceModel' geometry. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcWallTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcWallTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "MOVABLE"/>
      <xsd:enumeration value = "PARAPET"/>
      <xsd:enumeration value = "PARTITIONING"/>
      <xsd:enumeration value = "PLUMBINGWALL"/>
      <xsd:enumeration value = "SHEAR"/>
      <xsd:enumeration value = "SOLIDWALL"/>
      <xsd:enumeration value = "STANDARD"/>
      <xsd:enumeration value = "POLYGONAL"/>
      <xsd:enumeration value = "ELEMENTEDWALL"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcWallElementedCase">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecWall objects, that are composite. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcWallTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcWallStandardCase">
    <xsd:annotation>
      <xsd:documentation>IFC base interface for AecWall objects, that have a non-changing thickness along the wall path. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcWallTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_BeamCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrence and type objects of beam.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "Span" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Slope" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "Roll" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_BuildingElementProxyCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all instances of IfcBuildingElementProxy.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_BuildingElementProxyProvisionForVoid">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of a provision for void as a special type of an instance of IfcBuildingElementProxy. A provision for void is a spatial provision that might be resolved into a void in a building element. The properties carry requested values.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Shape" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Diameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "System" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ColumnCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrence and type objects of column.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "Slope" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "Roll" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_FootingCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcFooting.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_MemberCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcMember.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "Span" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Slope" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "Roll" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_OpeningElementCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all instances of IfcOpeningElement.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "Purpose" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireExit" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ProtectedOpening" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_PileCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcPile.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_PlateCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcPlate.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "AcousticRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_PrecastSlab">
    <xsd:annotation>
      <xsd:documentation>Definition from IAI: Layout and component information defining how prestressed slab components are laid out in a precast slab assembly. The values are global defaults for the slab as a whole, but can be overridden by local placements of the individual com</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "TypeDesignator" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ToppingType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "EdgeDistanceToFirstAxis" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "DistanceBetweenComponentAxes" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "AngleToFirstAxis" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "AngleBetweenComponentAxes" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "NominalThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NominalToppingThickness" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ReinforcementBarCountOfIndependentFooting">
    <xsd:annotation>
      <xsd:documentation>Reinforcement Concrete parameter [ST-2]: The amount number information of reinforcement  bar with the independent footing. The X and Y direction are based on the local coordinate system of building storey. The X and Y direction of the reinforcement bar are parallel to the X and Y axis of the IfcBuildingStorey's local coordinate system, respectively.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Description" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "XDirectionLowerBarCount" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "YDirectionLowerBarCount" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "XDirectionUpperBarCount" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "YDirectionUpperBarCount" type = "AttributeValueIntegerType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ReinforcementBarPitchOfBeam">
    <xsd:annotation>
      <xsd:documentation>The pitch length information of reinforcement  bar with the beam.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Description" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "StirrupBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "SpacingBarPitch" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ReinforcementBarPitchOfColumn">
    <xsd:annotation>
      <xsd:documentation>Definition from IAI: The pitch length information of reinforcement  bar with the column. The X and Y direction are based on the local coordinate system of building storey. The X and Y direction of the reinforcement bar are parallel to the X and Y axis of the IfcBuildingStorey's local coordinate system, respectively.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Description" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ReinforcementBarType" type = "IfcReinforcementBarTypeEnum"/>
      <xsd:element minOccurs = "0" name = "HoopBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "XDirectionTieHoopBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "XDirectionTieHoopCount" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "YDirectionTieHoopBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "YDirectionTieHoopCount" type = "AttributeValueIntegerType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcReinforcementBarTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "RING"/>
      <xsd:enumeration value = "SPIRAL"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ReinforcementBarPitchOfContinuousFooting">
    <xsd:annotation>
      <xsd:documentation>Reinforcement Concrete parameter [ST-2]: The pitch length information of reinforcement  bar with the continuous footing.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Description" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CrossingUpperBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossingLowerBarPitch" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ReinforcementBarPitchOfSlab">
    <xsd:annotation>
      <xsd:documentation>The pitch length information of reinforcement  bar with the slab.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Description" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongOutsideTopBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LongInsideCenterTopBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LongInsideEndTopBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ShortOutsideTopBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ShortInsideCenterTopBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ShortInsideEndTopBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LongOutsideLowerBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LongInsideCenterLowerBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "LongInsideEndLowerBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ShortOutsideLowerBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ShortInsideCenterLowerBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ShortInsideEndLowerBarPitch" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_ReinforcementBarPitchOfWall">
    <xsd:annotation>
      <xsd:documentation>The pitch length information of reinforcement  bar with the wall.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Description" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BarAllocationType" type = "IfcBarAllocationTypeEnum"/>
      <xsd:element minOccurs = "0" name = "VerticalBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "HorizontalBarPitch" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "SpacingBarPitch" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcBarAllocationTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "SINGLE"/>
      <xsd:enumeration value = "DOUBLE"/>
      <xsd:enumeration value = "ALTERNATE"/>
      <xsd:enumeration value = "OTHER"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SlabCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcSlab. Note: Properties for PitchAngle added in IFC 2x3</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "AcousticRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Combustible" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SurfaceSpreadOfFlame" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "Compartmentation" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "PitchAngle" type = "AngleType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_WallCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcWall and IfcWallStandardCase.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Status" type = "IfcStatusEnum"/>
      <xsd:element minOccurs = "0" name = "AcousticRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireRating" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Combustible" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SurfaceSpreadOfFlame" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ThermalTransmittance" type = "ThermalTransmittanceType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ExtendToStructure" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "LoadBearing" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "Compartmentation" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_BeamBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of beams.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_BuildingElementProxyQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of building elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_ColumnBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of columns.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_FootingBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of footings.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_MemberBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of members.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_OpeningElementBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of opening elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Area" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "Volume" type = "VolumeType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_PileBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of piles.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_PlateBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of plates.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Perimeter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_SlabBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of slabs.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Perimeter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_WallBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of walls.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossFootprintArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetFootprintArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSideArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSideArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcBuilding">
    <xsd:annotation>
      <xsd:documentation>
    A building represents a structure that provides shelter for its occupants or contents and stands in one place. The building is also used to provide a basic element within the spatial structure hierarchy for the components of a building project (together with site, storey, and space). 
The IfcBuilding is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical).</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "ElevationOfRefHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ElevationOfTerrain" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "BuildingAddress_InternalLocation" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BuildingAddress_AddressLines" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BuildingAddress_PostalBox" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BuildingAddress_Town" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BuildingAddress_Region" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BuildingAddress_PostalCode" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BuildingAddress_Country" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcBuildingStorey">
    <xsd:annotation>
      <xsd:documentation>A storey is (if specified) associated to a building. A storey may span over several connected storeys. Therefore storey complex provides for a collection of storeys included in a building. A storey can also be decomposed in (horizontical) parts, where each part defines a partial storey.
The IfcBuildingStorey is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical).</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "Elevation" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcSpace">
    <xsd:annotation>
      <xsd:documentation>A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building.
A space is associated to a building storey (or in case of exterior spaces to a site). A space may span over several connected spaces. Therefore a space group provides for a collection of spaces included in a storey. A space can also be decomposed in parts, where each part defines a partial space.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcSpaceTypeEnum"/>
      <xsd:element minOccurs = "0" name = "ElevationWithFlooring" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcSpaceTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "SPACE"/>
      <xsd:enumeration value = "PARKING"/>
      <xsd:enumeration value = "GFA"/>
      <xsd:enumeration value = "INTERNAL"/>
      <xsd:enumeration value = "EXTERNAL"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_BuildingCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all instances of IfcBuilding. Please note that several building attributes are handled directly at the IfcBuilding instance, the building number (or short name) by IfcBuilding.Name, the building name (or long name) by IfcBuilding.LongName, and the description (or comments) by IfcBuilding.Description. Actual building quantities, like building perimeter, building area and building volume are provided by IfcElementQuantity, and the building classification according to national building code by IfcClassificationReference. </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BuildingID" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "IsPermanentID" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ConstructionMethod" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FireProtectionClass" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SprinklerProtection" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SprinklerProtectionAutomatic" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "OccupancyType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossPlannedArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetPlannedArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NumberOfStoreys" type = "AttributeValueIntegerType"/>
      <xsd:element minOccurs = "0" name = "YearOfConstruction" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "YearOfLastRefurbishment" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "IsLandmarked" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_BuildingStoreyCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all instances of IfcBuildingStorey. Please note that several building attributes are handled directly at the IfcBuildingStorey instance, the building storey number (or short name) by IfcBuildingStorey.Name, the building storey name (or long name) by IfcBuildingStorey.LongName, and the description (or comments) by IfcBuildingStorey.Description. Actual building storey quantities, like building storey perimeter, building storey area and building storey volume are provided by IfcElementQuantity, and the building storey classification according to national building code by IfcClassificationReference. 
</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "EntranceLevel" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "AboveGround" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SprinklerProtection" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "SprinklerProtectionAutomatic" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "LoadBearingCapacity" type = "PressureType"/>
      <xsd:element minOccurs = "0" name = "GrossPlannedArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetPlannedArea" type = "AreaType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_BuildingUse">
    <xsd:annotation>
      <xsd:documentation>Provides information on the real estate context of the building of interest both current and anticipated.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MarketCategory" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "MarketSubCategory" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "PlanningControlStatus" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "NarrativeText" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "VacancyRateInCategoryNow" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "TenureModesAvailableNow" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "MarketSubCategoriesAvailableNow" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "RentalRatesInCategoryNow" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "VacancyRateInCategoryFuture" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "TenureModesAvailableFuture" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "MarketSubCategoriesAvailableFuture" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "RentalRatesInCategoryFuture" type = "AttributeValueDoubleType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_BuildingUseAdjacent">
    <xsd:annotation>
      <xsd:documentation>Provides information on adjacent buildings and their uses to enable their impact on the building of interest to be determined. Note that for each instance of the property set used, where there is an existence of risk, there will be an instance of the property set Pset_Risk (q.v).</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MarketCategory" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "MarketSubCategory" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "PlanningControlStatus" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "NarrativeText" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_OutsideDesignCriteria">
    <xsd:annotation>
      <xsd:documentation>Outside air conditions used as the basis for calculating thermal loads at peak conditions, as well as the weather data location from which these conditions were obtained.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "HeatingDryBulb" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "HeatingWetBulb" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "HeatingDesignDay" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "CoolingDryBulb" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "CoolingWetBulb" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "CoolingDesignDay" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "WeatherDataStation" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "WeatherDataDate" type = "AttributeValueDateTimeType"/>
      <xsd:element minOccurs = "0" name = "BuildingThermalExposure" type = "IfcBuildingThermalExposureEnum"/>
      <xsd:element minOccurs = "0" name = "PrevailingWindDirection" type = "AngleType"/>
      <xsd:element minOccurs = "0" name = "PrevailingWindVelocity" type = "SpeedType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcBuildingThermalExposureEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "LIGHT"/>
      <xsd:enumeration value = "MEDIUM"/>
      <xsd:enumeration value = "HEAVY"/>
      <xsd:enumeration value = "NOTKNOWN"/>
      <xsd:enumeration value = "UNSET "/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceCommon">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcSpace. Please note that several space attributes are handled directly at the IfcSpace instance, the space number (or short name) by IfcSpace.Name, the space name (or long name) by IfcSpace:LongName, and the description (or comments) by IfcSpace.Description. Actual space quantities, like space perimeter, space area and space volume are provided by IfcElementQuantity, and space classification according to national building code by IfcClassificationReference. The level above zero (relative to the building) for the slab row construction is provided by the IfcBuildingStorey.Elevation, the level above zero (relative to the building) for the floor finish is provided by the IfcSpace.ElevationWithFlooring.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "Reference" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "IsExternal" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "GrossPlannedArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetPlannedArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "PubliclyAccessible" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "HandicapAccessible" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceCoveringRequirements">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of covering requirements of IfcSpace. Those properties define the requirements coming from a space program in early project phases and can later be used to define the room book information, if such coverings are not modeled explicitly as covering elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "FloorCovering" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "FloorCoveringThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "WallCovering" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "WallCoveringThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CeilingCovering" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CeilingCoveringThickness" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "SkirtingBoard" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SkirtingBoardHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Molding" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "MoldingHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ConcealedFlooring" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ConcealedFlooringOffset" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "ConcealedCeiling" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "ConcealedCeilingOffset" type = "LengthType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceParking">
    <xsd:annotation>
      <xsd:documentation>Properties common to the definition of all occurrences of IfcSpace which have an attribute value for ObjectType = 'Parking'. NOTE: Modified in IFC 2x3, properties ParkingUse and ParkingUnits added.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ParkingUse" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ParkingUnits" type = "AttributeValueDoubleType"/>
      <xsd:element minOccurs = "0" name = "IsAisle" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "IsOneWay" type = "AttributeValueBooleanType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceThermalDesign">
    <xsd:annotation>
      <xsd:documentation>Space or zone HVAC design requirements. HISTORY: New property set in IFC Release 1.0 (Pset_SpaceHvacInformation); renamed to Pset_SpaceThermalDesign and revised in IFC2x2.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "CoolingDesignAirflow" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "HeatingDesignAirflow" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "TotalSensibleHeatGain" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "TotalHeatGain" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "TotalHeatLoss" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "CoolingDryBulb" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "CoolingRelativeHumidity" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "HeatingDryBulb" type = "TemperatureType"/>
      <xsd:element minOccurs = "0" name = "HeatingRelativeHumidity" type = "RatioType"/>
      <xsd:element minOccurs = "0" name = "VentilationAirFlowrate" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "ExhaustAirFlowrate" type = "VolumetricFlowRateType"/>
      <xsd:element minOccurs = "0" name = "CeilingRAPlenum" type = "AttributeValueBooleanType"/>
      <xsd:element minOccurs = "0" name = "BoundaryAreaHeatLoss" type = "DensityOfHeatFlowRateType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceThermalLoad">
    <xsd:annotation>
      <xsd:documentation>The space thermal load defines all thermal losses and gains occurring within a space or zone.  The thermal load source attribute defines an enumeration of possible sources of the thermal load. The maximum, minimum, time series and app</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "People" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "Lighting" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "EquipmentSensible" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "VentilationIndoorAir" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "VentilationOutdoorAir" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "RecirculatedAir" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "ExhaustAir" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "AirExchangeRate" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "DryBulbTemperature" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "RelativeHumidity" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "InfiltrationSensible" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "TotalSensibleLoad" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "TotalLatentLoad" type = "PowerType"/>
      <xsd:element minOccurs = "0" name = "TotalRadiantLoad" type = "PowerType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceThermalLoadPHistory">
    <xsd:annotation>
      <xsd:documentation>The space thermal load IfcSpaceThermalLoadProperties defines actual measured thermal losses and gains occurring within a space or zone. The thermal load source attribute defines an enumeration of possible sources of the thermal load.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "People" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Lighting" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "EquipmentSensible" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "VentilationIndoorAir" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "VentilationOutdoorAir" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "RecirculatedAir" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ExhaustAir" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "AirExchangeRate" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "DryBulbTemperature" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "RelativeHumidity" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "InfiltrationSensible" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "TotalSensibleLoad" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "TotalLatentLoad" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "TotalRadiantLoad" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcPset_SpaceThermalPHistory">
    <xsd:annotation>
      <xsd:documentation>Thermal and air flow conditions of a space or zone. HISTORY: New property set in IFC 2x2.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "CoolingAirFlowRate" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "HeatingAirFlowRate" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "VentilationAirFlowRate" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "ExhaustAirFlowRate" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SpaceTemperature" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "SpaceRelativeHumidity" type = "AttributeValueStringType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_BuildingBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of building.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "EavesHeigth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "FootprintArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossFloorArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetFloorArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_BuildingStoreyBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of building storey.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NetHeigtht" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossPerimeter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossFloorArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetFloorArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_SpaceBaseQuantities">
    <xsd:annotation>
      <xsd:documentation>Base quantities that are common to the definition of all occurrences of spaces.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "FinishCeilingHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "FinishFloorHeight" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossPerimeter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "NetPerimeter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossFloorArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetFloorArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossWallArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetWallArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossCeilingArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetCeilingArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcBridge">
    <xsd:annotation>
      <xsd:documentation>Any kind of bridges.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcBridgePart">
    <xsd:annotation>
      <xsd:documentation>Any kind of bridge parts.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcBridgePartTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcBridgePartTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "SPAN"/>
      <xsd:enumeration value = "ANCHORBLOCK"/>
      <xsd:enumeration value = "DECK"/>
      <xsd:enumeration value = "TOWER"/>
      <xsd:enumeration value = "SUSPENSIONSYSTEM"/>
      <xsd:enumeration value = "STAYBELT"/>
      <xsd:enumeration value = "HANGERBELT"/>
      <xsd:enumeration value = "ARCH"/>
      <xsd:enumeration value = "PIER"/>
      <xsd:enumeration value = "ABUTMENT"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeAbutmentBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeAnchorBlockBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeArchBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Span" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Rise" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeDeckBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeHangerBeltBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "TotalLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeOtherSpatialStructureElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgePierBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "HeightAboveGroundLevel" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeSpanBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeStayBeltBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "TotalLength" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeSuspensionSystemBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeTowerBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "HeightAboveGroundLevel" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "HeightAboveDeck" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcBridgeElement">
    <xsd:annotation>
      <xsd:documentation>Any kind of bridge elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcBridgeElementTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcBridgeElementTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "DECKSEGMENT"/>
      <xsd:enumeration value = "WAY"/>
      <xsd:enumeration value = "ARCHSEGMENT"/>
      <xsd:enumeration value = "TOWERSEGMENT"/>
      <xsd:enumeration value = "PIERSEGMENT"/>
      <xsd:enumeration value = "CROSSHEAD"/>
      <xsd:enumeration value = "STAYCABLE"/>
      <xsd:enumeration value = "SUSPENSIONCABLE"/>
      <xsd:enumeration value = "HANGERCABLE"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeArchSegmentBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeCrossheadBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeDeckSegmentBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeHangerCableBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Diameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "Weight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeOtherElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgePierSegmentBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeStayCableBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Diameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "Weight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeSuspensionCableBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Diameter" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "Weight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeTowerSegmentBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_BridgeWayBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcDam">
    <xsd:annotation>
      <xsd:documentation>Any kind of dams.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcDamPart">
    <xsd:annotation>
      <xsd:documentation>Any kind of dam parts.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcDamPartTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcDamPartTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_DamBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcDamElement">
    <xsd:annotation>
      <xsd:documentation>Any kind of dam elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcDamElementTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcDamElementTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_DamOtherElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcRoad">
    <xsd:annotation>
      <xsd:documentation>Any kind of roads (highway, primary, secondary).</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcRoadPart">
    <xsd:annotation>
      <xsd:documentation>Any kind of road parts (interchange, ramp, stretch).</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcRoadPartTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcRoadPartTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "INTERCHANGE"/>
      <xsd:enumeration value = "RAMP"/>
      <xsd:enumeration value = "STRETCH"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcRoadElement">
    <xsd:annotation>
      <xsd:documentation>Any kind of road elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcRoadElementTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcRoadElementTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_RoadOtherElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcTunnel">
    <xsd:annotation>
      <xsd:documentation>Any kind of tunnels.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcTunnelPart">
    <xsd:annotation>
      <xsd:documentation>Any kind of tunnel parts.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcTunnelPartTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcTunnelPartTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "BAY"/>
      <xsd:enumeration value = "INTERCHANGE"/>
      <xsd:enumeration value = "RING"/>
      <xsd:enumeration value = "STRETCH"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcTunnelSpace">
    <xsd:annotation>
      <xsd:documentation>Any kind of tunnel spaces.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcTunnelSpaceTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcTunnelSpaceTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "FULLTUNNEL"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcTunnelElement">
    <xsd:annotation>
      <xsd:documentation>Any kind of tunnel elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcTunnelElementTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcTunnelElementTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_TunnelOtherElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_TunnelRingSegmentBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "OuterSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcRailway">
    <xsd:annotation>
      <xsd:documentation>Any kind of railways.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcRailwayPart">
    <xsd:annotation>
      <xsd:documentation>Any kind of railway parts.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcRailwayPartTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcRailwayPartTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "STRETCH"/>
      <xsd:enumeration value = "SWITCH"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcRailwayElement">
    <xsd:annotation>
      <xsd:documentation>Any kind of railway elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcRailwayElementTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcRailwayElementTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_RailwayOtherElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_RailwayTrackPanelBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_RailwayTrackRailBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_RailwayTrackSleeperBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "CrossSectionArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_RailwayTrackTurnoutBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Depth" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcSubgrade">
    <xsd:annotation>
      <xsd:documentation>Any kind of subgrade.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcSubgradePart">
    <xsd:annotation>
      <xsd:documentation>
		Any kind of subgrade parts.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcCompositionTypeEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcPredefinedTypeEnum1"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcPredefinedTypeEnum1">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcSubgradeRetainingStructure">
    <xsd:annotation>
      <xsd:documentation>Any kind of retaining structure.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "ObjectType" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "LongName" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "CompositionType" type = "IfcElementCompositionEnum"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcSubgradeRetainingStructureTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcSubgradeRetainingStructureTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "GRAVITY"/>
      <xsd:enumeration value = "CANTILEVER"/>
      <xsd:enumeration value = "ANCHORED"/>
      <xsd:enumeration value = "REINFORCEDEARTH"/>
      <xsd:enumeration value = "SLURRY"/>
      <xsd:enumeration value = "ANCHOREDSLURRY"/>
      <xsd:enumeration value = "CELLULAR"/>
      <xsd:enumeration value = "PILING"/>
      <xsd:enumeration value = "ANCHOREDPILING"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_SubgradeOtherSpatialStructureElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_SubgradeRetainingStructureBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcSubgradeElement">
    <xsd:annotation>
      <xsd:documentation>
		Any kind of subgrade elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcPredefinedTypeEnum1"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcSubgradeRetainingElement">
    <xsd:annotation>
      <xsd:documentation>Any kind of retaining elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:group minOccurs = "0" ref = "IfcIdentificationGroup"/>
      <xsd:element minOccurs = "0" name = "PredefinedType" type = "IfcSubgradeRetainingElementTypeEnum"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:simpleType name = "IfcSubgradeRetainingElementTypeEnum">
    <xsd:restriction base = "xsd:NMTOKEN">
      <xsd:enumeration value = "WALL"/>
      <xsd:enumeration value = "PANEL"/>
      <xsd:enumeration value = "CRIB"/>
      <xsd:enumeration value = "CELL"/>
      <xsd:enumeration value = "FLAT"/>
      <xsd:enumeration value = "NAIL"/>
      <xsd:enumeration value = "SHEETPILE"/>
      <xsd:enumeration value = "BOXPILE"/>
      <xsd:enumeration value = "USERDEFINED"/>
      <xsd:enumeration value = "NOTDEFINED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_SubgradeExcavationWorksBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BankVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "LooseVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "CompactedVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "Weight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_SubgradeFillingWorksBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "BankVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "Weight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_SubgradeOtherElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_SubgradeRetainingElementBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
  <!--    -->
  <xsd:complexType name = "IfcQto_DS_SubgradeStockpileBaseQuantities">
    <xsd:choice maxOccurs = "unbounded" minOccurs = "0">
      <xsd:element minOccurs = "0" name = "MethodOfMeasurement" type = "AttributeValueStringType"/>
      <xsd:element minOccurs = "0" name = "Height" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Width" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "Length" type = "LengthType"/>
      <xsd:element minOccurs = "0" name = "GrossSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "NetSurfaceArea" type = "AreaType"/>
      <xsd:element minOccurs = "0" name = "GrossVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "NetVolume" type = "VolumeType"/>
      <xsd:element minOccurs = "0" name = "GrossWeight" type = "MassType"/>
      <xsd:element minOccurs = "0" name = "NetWeight" type = "MassType"/>
    </xsd:choice>
  </xsd:complexType>
</xsd:schema>
