<meta charset="UTF-8"/>
PrecommitTriggerOpenings.Alias = "ER generic server openings";
PrecommitTriggerOpenings.Description = "Business Rules executed on server at initialization and precommit time";
promote.Alias = "precommit at promote";
promote.Description = "this opening is fired at the object promotion";
demote.Alias = "precommit at demote";
demote.Description = "this opening is fired at the object demotion";
create.Alias = "precommit at create";
create.Description = "this opening is fired at the object creation";
connect.Alias = "precommit at connect";
connect.Description = "this opening is fired at the object connection";
delete.Alias = "precommit at delete";
delete.Description = "this opening is fired at the object deletion";
disconnect.Alias = "precommit at disconnect";
disconnect.Description = "this opening is fired at the object disconnection";
modifyattribute.Alias = "precommit at modify attribute";
modifyattribute.Description = "this opening is fired at the object's attribute modification";
modifydescription.Alias = "precommit at modify description";
modifydescription.Description = "this opening is fired at the object's 'description' modification";
changename.Alias = "precommit at change name";
changename.Description = "this opening is fired at the object's 'name' modification";
changeowner.Alias = "precommit at change owner";
changeowner.Description = "this opening is fired when the object changes owner";
copy.Alias = "precommit at copy";
copy.Description = "this opening is fired when the object is copied";
majorrevision.Alias = "precommit at major revision";
majorrevision.Description = "this opening is fired at the object (major) revision";
batchclone.Alias = "precommit at batch clone";
batchclone.Description = "this opening is fired at the batchclone operation";
batchrevise.Alias = "precommit at batch revise";
batchrevise.Description = "this opening is fired at the batchrevise operation";
addinterface.Alias = "precommit while adding an interface";
addinterface.Description = "this opening is fired when an interface is added";
removeinterface.Alias = "precommit while removing an interface";
removeinterface.Description = "this opening is fired when an interface is removed";
revision.Alias = "precommit at revision";
revision.Description = "this opening is fired at the object revision";
init_create.Alias = "initialization at creation";
init_create.Description = "this opening is fired at the object initialization for creation";
// VDU/DRT
compute_DefaultPropagationScope.Alias ="Lifecyle Operation Propagation";
compute_DefaultPropagationScope.Description ="Enables the operation to be propagated or not";
// MBE31
compute_SimulationDocumentStore.Alias = "Store computation for Simulation Document";
compute_SimulationDocumentStore.Description = "Enables store computation for Simulation Document";
// JBV/QTP
compute_new_init.Alias = "New Initialization";
compute_new_init.Description = "Fired when New panel is build";
compute_new_modify.Alias = "Properties Initialization";
compute_new_modify.Description = "Fired when Properties experience is built";
compute_edit_properties_init.Alias = "New Modify";
compute_edit_properties_init.Description = "Fired when the user modifies an attribute in New";
compute_edit_properties_modify.Alias = "Properties Modify";
compute_edit_properties_modify.Description = "Fired when the user modifies an attribute in Properties";
