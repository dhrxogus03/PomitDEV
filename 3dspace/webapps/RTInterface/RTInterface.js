define("DS/RTInterface/drivers/PAPI_driver",["DS/PlatformAPI/PlatformAPI","DS/RTProxyDriver/RTLogger"],function(e,n){"use strict";return{connected:!1,cache:[],init:function(){e.subscribe("towidgetim.ds.com",e=>{switch(n.RTInterface("event received - event:"+e&&e.evenement),e.evenement){case"CONNECTED":this.connected=!0,this.flushCache();break;case"DISCONNECTED":this.connected=!1}}),e.publish("fromwidgetim.ds.com",{evenement:"GETLOGINOKDATA"})},isConnected:function(){return this.connected},addCallbacks:function(t,r,c,a){const i=c||(r?function(e){return"towidget."+e.toLowerCase()+".im.ds.com"}(r):"towidgetim.ds.com");return e.subscribe(i,function(e){if(!e)return console.error("[RTInterface] addCallbacks - error: no data received from server");if(n.RTInterface("data received on channel: "+i),n.RTInterface(e),!a||e.evenement==a)for(let n of t)n(e)}),!0},send:function(t,r){n.RTInterface("data to send - action: "+t.action),n.RTInterface(t);const c=r||"toRTC.im.ds.com";return this.isConnected()?e.publish(c,t):(this.cache.push({data:t,channel:c}),e.publish("reliveWebsocket.im.ds.com")),t},flushCache:function(){if(0==this.cache.length)return n.RTInterface("cache is empty");for(;this.cache.length>0;){if(!this.isConnected())return n.RTInterface("connection lost, unable to continue flushing cache");let t=this.cache.shift();n.RTInterface("flushing cache - data to send - action: "+t.data.action),n.RTInterface(t.data),e.publish(t.channel,t.data)}}}}),define("DS/RTInterface/index",["DS/RTInterface/drivers/PAPI_driver","DS/RTProxyDriver/RTLogger"],function(e,n){"use strict";n.addLevel("RTInterface","magenta"),n.RTInterface("load");return{_init:function(){n.RTInterface("driver init"),e.init()},isConnected:function(){return e.isConnected()},addCallback:function(e,t,r,c){return n.RTInterface("addCallback"),this.addCallbacks([e],t,r,c)},addCallbacks:function(t,r,c,a){if(n.RTInterface("addCallbacks - platformId: "+r),!t||!Array.isArray(t)||!t.length)return console.error("[RTInterface] addCallbacks - error: missing callbacks or platformId or channel"),{error:"missing callbacks or platformId or channel"};for(let e of t)if("function"!=typeof e)return console.error("[RTInterface] addCallbacks - error: callback is not a function"),{error:"callback is not a function"};return e.addCallbacks(t,r,c,a)},_generateTxID:e=>Date.now()+"-r"+Math.floor(1e3*Math.random())+"-"+(e||"noAction"),send:function(t,r){return n.RTInterface("send - data: "+t),t?(t.TxID=this._generateTxID(t.action),e.send(t,r),t):(console.error("[RTInterface] send - error: missing data"),{error:"missing data"})},_getTxIDEventName:(e,n)=>n?`TxID-${e}-${n}`:`TxID-${e}`,_listenTxIDEvent:function(e,n,t){const r=this._getTxIDEventName(e,n),c=(e,n)=>{document.removeEventListener(r,e),clearTimeout(n)};return new Promise(function(e,n){let a;const i=setTimeout(()=>{c(a,i),n(new Error("request timeout"))},t||1e4);a=(t=>{c(a,i),t.detail&&t.detail.error?n(t.detail.error):e(t.detail)}),document.addEventListener(r,a)})},sendAsync:function(e,n,t,r){const c=this.send(e,t);return this._listenTxIDEvent(c.TxID,n,r)},triggerTxIDEvent:function(e,n,t,r){const c=new CustomEvent(this._getTxIDEventName(e,r),{detail:t?{error:t}:n});document.dispatchEvent(c)}}}),define("DS/RTInterface/RTInterface",["DS/RTInterface/index"],function(e){"use strict";return document.RTInterface?document.RTInterface:(e._init(),document.RTInterface=e,document.RTInterface)});