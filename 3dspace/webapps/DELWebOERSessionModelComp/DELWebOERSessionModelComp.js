define("DS/DELWebOERSessionModelComp/SessionModelComp",["DS/DELWebOERCommonUtils/DELWebBaseComponent","UWA/Class/Model"],function(e,t){"use strict";let o=t.extend({validate:function(){}});return class extends e{constructor(e){super(e)}async initialize(){await super.initialize(),this._model=new o,this._modelEvents=this.getModelEvents(),this._model.addEvent("onChange",e=>{let t=e.changedAttributes();Object.keys(t).forEach(e=>{let o=`onModelChange:${e}`,s={data:t[e]};this.logger.log(`publish event ${o} with params ${JSON.stringify(s)}`),this._modelEvents.publish({event:o,data:s})}),this.logger.log(`publish onModelChange for attributes ${JSON.stringify(t)}`),this._modelEvents.publish({event:"onModelChange",data:{data:t}})})}async empty(){this._model.clear()}async clean(){await this.empty(),this._model.removeEvent("onChange"),await super.clean()}async destroy(){this.clear(),this._model=null,await super.destroy()}set(...e){return this._model.set.apply(this._model,e)}get(e){return this._model.get(e)}getExposedComponent(){return this.publicAPI=super.getExposedComponent(),this.publicAPI.set=this.set.bind(this),this.publicAPI.get=this.get.bind(this),this.publicAPI.empty=this.empty.bind(this),this.publicAPI}}}),define("DS/DELWebOERSessionModelComp/actions/StandardActions",["UWA/Core","DS/Logger/Logger"],function(e,t){"use strict";t.getLogger("DS/DELWebOERSessionModelComp/actions/StandardActions");return{addRoots:function(t,o){let s=o.executionContext.getComponent("SessionModel"),n=o.args.items,i=s.get("roots");if(e.is(n,"array")){if(!n.every(t=>e.is(t.id)&&e.is(t.pprType)))throw new Error("Invalid Input, id property is missing, please make sure id property for every root added")}i||(i=[]),s.set("roots",[...i,...n]),t()},removeRoots:function(e,t){let o=t.executionContext,s=o.getComponent("SessionModel"),n=t.args.items,i=s.get("roots"),r=o.getComponent(WAfrStandardComponentKey.ModelEvents);if(!i)throw new Error("No roots to filter");i=i.filter(e=>!n.some(t=>t.id===e.id)),s.set("roots",i),r.publish({event:"onRootsRemoved",data:{data:n}}),e()},empty:async function(e,t={}){let o=t.executionContext.getComponent("SessionModel");await o.empty(),e()},setMode:async function(e,t={}){let o=t.executionContext.getComponent("SessionModel"),s=t.args.mode;o.set("mode",s),e()}}});