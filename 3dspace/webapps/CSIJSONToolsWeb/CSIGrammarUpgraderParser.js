"undefined"==typeof define&&(define=function(e){Parser=e(),define=void 0}),define("DS/CSIJSONToolsWeb/CSIGrammarUpgraderParser",["DS/CSIJSONToolsWeb/CSIGrammarUpgraderJsonField","DS/CSIJSONToolsWeb/CSIGrammarUpgraderRulesV1V2","DS/CSIJSONToolsWeb/CSIGrammarUpgraderRulesV2V3","DS/CSIJSONToolsWeb/CSIGrammarUpgraderPropertiesParser"],function(e,r,i,n){"use strict";const s=[{},r,i],t={ParsingOrder:Object.freeze({root:["name","version","filename","noWebSocket","grammarVersion","desc","library","implementation","onCall","progress","emit","throwError","RESTExposition","onBeginParameters","onCommandParameters","onEndParameters","customImplProgress","customImplError","importCommandsFromPool","imports","category","definition"],signature:["in","out","answers"],commandSignature:["onBeginParameters","onCommandParameters","onEndParameters"],parameters:["name","version","label","basic","basicArray","type","typeArray","parameters","parametersArray","desc","optional","enum"],bundle:["grammarVersion","pools","types","events","customImplementations","functions","commands"]}),FileType:Object.freeze({csiUnknown:0,csiFunction:1,csiCommand:2,csiPool:3,csiType:4,csiEvent:5,csiCustomImpl:6,csiBundle:7}),grammarUpgrader_:void 0,upgradeCommandToFunctionBool_:!1,fileType_:0,maxGrammarVersion_:3,currentFileMaxGrammarVersion_:3,currentFileGrammarVersion_:0,enableUpgradeCommandToFunction:function(e){this.upgradeCommandToFunctionBool_=e},isUpgradeCommandToFunctionEnabled:function(){return this.upgradeCommandToFunctionBool_},getCurrentFileGrammarVersion:function(){return this.currentFileGrammarVersion_},getCurrentFileMaxGrammarVersion:function(){return this.currentFileMaxGrammarVersion_},getMaxGrammarVersion:function(){return this.maxGrammarVersion_},isFunctionFile:function(){return this.fileType_===this.FileType.csiFunction},isCommandFile:function(){return this.fileType_===this.FileType.csiCommand},isPoolFile:function(){return this.fileType_===this.FileType.csiPool},isTypeFile:function(){return this.fileType_===this.FileType.csiType},isEventFile:function(){return this.fileType_===this.FileType.csiEvent},isCustomImplFile:function(){return this.fileType_===this.FileType.csiCustomImpl},isBundleFile:function(){return this.fileType_===this.FileType.csiBundle},getFileTypeParsingOrder:function(){switch(this.fileType_){case this.FileType.csiFunction:case this.FileType.csiCommand:case this.FileType.csiPool:case this.FileType.csiType:case this.FileType.csiEvent:case this.FileType.csiCustomImpl:return this.ParsingOrder.root;case this.FileType.csiBundle:default:return this.ParsingOrder.bundle}},analyseFileType:function(e){return this.currentFileMaxGrammarVersion_=this.maxGrammarVersion_,e.hasOwnProperty("grammarVersion")?this.currentFileGrammarVersion_=e.grammarVersion:(this.currentFileGrammarVersion_=1,e.grammarVersion=1),e.hasOwnProperty("desc")||(e.desc="Please fill the description"),e.hasOwnProperty("onCall")?this.fileType_=this.FileType.csiFunction:e.hasOwnProperty("onCommandParameters")?(this.fileType_=this.FileType.csiCommand,this.currentFileMaxGrammarVersion_=2,this.isUpgradeCommandToFunctionEnabled()&&(this.upgradeCommandToFunction(e),this.currentFileMaxGrammarVersion_=3)):e.hasOwnProperty("imports")||e.hasOwnProperty("importCommandsFromPool")?(this.fileType_=this.FileType.csiPool,this.currentFileMaxGrammarVersion_=2):e.hasOwnProperty("definition")?(this.fileType_=this.FileType.csiType,1===this.currentFileGrammarVersion_&&e.definition instanceof Array&&(e.hasOwnProperty("library")?(this.currentFileMaxGrammarVersion_=1,this.fileType_=this.FileType.csiCustomImpl):(this.currentFileMaxGrammarVersion_=1,this.fileType_=this.FileType.csiEvent))):e.hasOwnProperty("pools")?(this.fileType_=this.FileType.csiBundle,this.currentFileMaxGrammarVersion_=1):(this.fileType_=this.FileType.csiPool,this.currentFileMaxGrammarVersion_=2),this.fileType_},parseObject:function(r,i,n,t){for(const o of n)if(r.hasOwnProperty(o))if(s[t].hasOwnProperty(o)){const n=new e(o,r),a=s[t][o](n);void 0!==a&&(i[a.field]=a.getValue())}else i[o]=r[o]},upgradeCommandToFunction:function(e){e.onCall={in:{},out:{}};for(let r=0;r<this.ParsingOrder.commandSignature.length;++r){const i=this.ParsingOrder.commandSignature[r];if(e.hasOwnProperty(i)){if(e[i].in instanceof Object)for(const r in e[i].in)e[i].in.hasOwnProperty(r)&&(e.onCall.in[r]=e[i].in[r]);if(e[i].answers instanceof Object)for(const r in e[i].answers)e[i].answers.hasOwnProperty(r)&&(e.onCall.out[r]=e[i].answers[r]);delete e[i]}}}};return r.parser_=t,i.parser_=t,n.parser_=t,t});