define("DS/UpdateTexture_TextureArray/UpdateTexture_TextureArray",["DS/Visualization/ThreeJS_DS"],function(e){return function(o,t){o.force=!0,o.activatePDSFX();o.setPDSFXVaryings({vPosition:{type:"v3"},vCol:{type:"v4"}});var r={ColoredMode:{type:"f",value:t.ColorMode},ObjectColor:{type:"v4",value:new e.Vector4(t.ObjectColor[0],t.ObjectColor[1],t.ObjectColor[2],t.ObjectColor[3])},BlendVal:{type:"f",value:t.BlendVal},NbTerrains:{type:"i",value:t.NbTerrains},ColorMapTexture1:{type:"t2v",value:t.ColorMapTexture1.map,length:t.NbTerrains}};for(let o=1;o<=t.NbTerrains;o++){let a="TerrainMinMax_"+o;r[a]={type:"v4",value:new e.Vector4(t[a][0],t[a][1],t[a][2],t[a][3])}}o.setPDSFXUniforms(r);var a=["vec4 the_color ;"].join("\n");o.setPDSFXGlobalShaderCode("",a);let l="";{let e="{ \t    vec4 minmax = TerrainMinMax_XXX ;     vec2 min ; min.x = minmax[0] ; min.y = minmax[1] ;     vec2 max ; max.x = minmax[2] ; max.y = minmax[3] ;     float u = (vPosition.x - min.x) / (max.x - min.x) ;     float v = (vPosition.y - min.y) / (max.y - min.y) ;     if (0. < u && u < 1. && 0. < v && v < 1.) { \t  vec4 color = texture (ColorMapTexture1[XXX - 1], vec2(u,v)) ;       float alpha = color.a ;       float beta  = (1. - color.a) * the_color.a ;       the_color.rgb = alpha * color.rgb + beta * the_color.rgb ;       the_color.a   = alpha             + beta                 ;     } \t} \t  ";l+=e=e.replaceAll("XXX",1)}var n={ComputeCommonValues:["void ComputeCommonValues() ","{ ","bool colored_mode = ColoredMode > 0.5 ;","  if (colored_mode) ","{","\tthe_color = vCol ;","}","else","{","\tthe_color = ObjectColor ;","}"," ","  int NumTerrain = 0; "," "," ",""+l," ","}"].join("\n"),ComputeAlbedo:["vec3 ComputeAlbedo() {","  return the_color.rgb;","}"].join("\n"),ComputeRoughness:["float ComputeRoughness()","{","  return 0.6 ; // terrain is not shiny but easily visible","}"].join("\n"),ComputeOpacity:["float ComputeOpacity() {","  return the_color.a;","}"].join("\n")},i={ComputeVaryingValues:["void ComputeVaryingValues() {","vPosition = vGetAttribPosition().xyz ;","vCol    = vec4(vGetAttribColor(), 1.) ;","}"].join("\n")};return o.setPDSFXOverridableFunctions(i,n),o}});