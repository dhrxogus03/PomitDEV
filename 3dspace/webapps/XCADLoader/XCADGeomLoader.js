define("DS/XCADLoader/XCADGeomLoader",["DS/Mesh/Mesh","DS/Mesh/ThreeJS_Base","DS/XCADInputDocuments/XCADInputDocument","DS/XCADInputDocuments/XCADRepresentation","DS/XCADInputDocuments/XCADTessellatedRepresentation"],function(e,t,i,s,n){"use strict";function r(e,t){this.primitive=e,this.transfo=t,this.descendants=[]}var o=function(){this.DEFAULT_COLOR=new e.Color(.823529411765,.823529411765,1),this.DEFAULT_WIRE_COLOR=new e.Color(0,0,0),t.EventDispatcher.call(this),this.currentObject=new e.PrimitiveGroup,this.posBuffer=new e.Buffer,this.normBuffer=new e.Buffer,this.posIdxBuffer=new e.Buffer,this.normIdxBuffer=new e.Buffer,this.meshNb=0,this.primitivesNode=[],this.rootNode=new r(this.currentObject),this.primitivesNode.push(this.rootNode)};const a="WIRE_EDGE",h="BOUNDARY_EDGE";return o.prototype={constructor:o,load:function(t,i){switch(this.geomRepresentation=t,this.progressCB=i,this.currentObject.fillAttr=new e.FillAttributes,this.currentObject.lineAttr=new e.LineAttributes,this.currentObject.PointAttr=new e.PointAttributes,this.meshNb=0,this.geomRepresentation.getRepresentationType()){case s.XCAD_TESSELLATED_REPRESENTATION:this.processTessRep();break;case s.XCAD_TESSELLATED_ANNOTATION_REPRESENTATION:this.processAnnotTessRep()}return this.primitivesNode},startNewMesh:function(t){this.posBuffer=new e.Buffer,this.posBuffer.component=e.VertexComponentEnum.POSITION,this.posBuffer.format=e.DataTypeEnum.FLOAT,this.posBuffer.dimension=3,this.normBuffer=new e.Buffer,this.normBuffer.component=e.VertexComponentEnum.NORMAL,this.normBuffer.format=e.DataTypeEnum.FLOAT,this.normBuffer.dimension=3,this.currentObject.addBuffer(3*this.meshNb,this.posBuffer),this.currentObject.addBuffer(3*this.meshNb+1,this.normBuffer),!0===t&&this.geomRepresentation.isIndexed&&this.geomRepresentation.isIndexed()&&(this.posIdxBuffer=new e.Buffer,this.posIdxBuffer.indexBuffer=!0,this.posIdxBuffer.format=e.DataTypeEnum.UINT,this.posIdxBuffer.dimension=1,this.currentObject.addBuffer(3*this.meshNb+2,this.posIdxBuffer))},finishCurrentMesh:function(){this.meshNb++},processTessRep:function(){for(var e=this.geomRepresentation.getRootNodesCount(),t=0;t<e;t++){this.progressCB&&this.progressCB({loaded:t+1,total:e});var i=this.geomRepresentation.getRootNode(t);let r=[];i instanceof Array?r=i:r[0]=i;for(var s=0;s<r.length;s++){switch(this.geomRepresentation.getNodeType(r[s])){case n.KindOfNode.NOD_ContainerNode:this.processTessContainer(r[s]);break;case n.KindOfNode.NOD_SolidNode:null!=this.rootNode.primitive&&(this.currentObject=this.rootNode.primitive),this.processTessSolid(r[s]);break;case n.KindOfNode.NOD_SurfacicNode:null!=this.rootNode.primitive&&(this.currentObject=this.rootNode.primitive),this.processTessSurfacic(r[s]);break;case n.KindOfNode.NOD_VertexNode:null!=this.rootNode.primitive&&(this.currentObject=this.rootNode.primitive),this.processTessVertex(r[s])}}}},processAnnotTessRep:function(){for(var e=this.geomRepresentation.getRootNodesCount(),t=0;t<e;t++){var i=this.geomRepresentation.getRootNode(t);let e=[];i instanceof Array?e=i:e[0]=i;for(var s=0;s<e.length;s++){switch(this.geomRepresentation.getNodeType(e[s])){case n.KindOfNode.NOD_ContainerNode:this.processTessContainer(e[s]);break;case n.KindOfNode.NOD_SurfacicSetNode:this.processTessSurfacicSet(e[s]);break;case n.KindOfNode.NOD_GP:console.log("NOT LOADED NOD_GP ");break;case n.KindOfNode.NOD_Unknown:console.log("NOT LOADED NOD_Unknown");break;case void 0:console.log("not defined")}}}},processTessContainer:function(t,i){this.currentObject=new e.PrimitiveGroup;var s=this.geomRepresentation.getAssociatedTransfo(t),o=new r(this.currentObject,s);null!=i?i.descendants.push(o):this.primitivesNode.push(o);var a=this.geomRepresentation.getChildren(t,!0);if(null!=a)for(var h=0;h<a.length;h++){var d=a[h];switch(this.geomRepresentation.getNodeType(d)){case n.KindOfNode.NOD_SurfacicNode:this.currentObject=o.primitive,this.processTessSurfacic(d);break;case n.KindOfNode.NOD_SolidNode:this.currentObject=o.primitive,this.processTessSolid(d);break;case n.KindOfNode.NOD_ContainerNode:this.processTessContainer(d,o);break;case n.KindOfNode.NOD_SurfacicSetNode:this.currentObject=o.primitive,this.processTessSurfacicSet(d,t);break;case n.KindOfNode.NOD_GP:switch(this.geomRepresentation.getGPType(d)){case n.KindOfGP.GP_Face:var c=this.geomRepresentation.getNodeColor(t),f=this.geomRepresentation.getNodeColor(d);null!=f&&(c=f),void 0===c&&(c=[this.DEFAULT_COLOR.r,this.DEFAULT_COLOR.g,this.DEFAULT_COLOR.b,this.DEFAULT_COLOR.a]),this.processTriangulatedFace(d,new e.Color(c[0],c[1],c[2],c[3]))}}}},processTessSurfacic:function(t){for(var i,s=this.geomRepresentation.getNodeColor(t),r=this.geomRepresentation.getPolyLineData(t),o=this.geomRepresentation.getChildren(t),h=0,d=o.length;h<d;h++){i=o[h];var c=this.geomRepresentation.getNodeColor(t);switch(this.geomRepresentation.getNodeType(i)){case n.KindOfNode.NOD_GP:var f=this.geomRepresentation.getGPType(i,c);switch(null==c&&(c=s),null==s&&(c=[this.DEFAULT_WIRE_COLOR.r,this.DEFAULT_WIRE_COLOR.g,this.DEFAULT_WIRE_COLOR.b,this.DEFAULT_WIRE_COLOR.a]),f){case n.KindOfGP.GP_Edge:this.processEdge(i,new e.Color(c[0],c[1],c[2],c[3]),r,a)}}}},processTessSolid:function(t){for(var i,s=this.geomRepresentation.getNodeColor(t),r=this.geomRepresentation.getChildren(t),o=0,a=r.length;o<a;o++){i=r[o];var d=this.geomRepresentation.getNodeType(i),c=this.geomRepresentation.getNodeColor(i);switch(null==c&&(c=s),null==s&&(c=[this.DEFAULT_COLOR.r,this.DEFAULT_COLOR.g,this.DEFAULT_COLOR.b,this.DEFAULT_COLOR.a]),d){case n.KindOfNode.NOD_GP:switch(this.geomRepresentation.getGPType(i)){case n.KindOfGP.GP_Face:this.processTriangulatedFace(i,new e.Color(c[0],c[1],c[2],c[3]));break;case n.KindOfGP.GP_Edge:this.processEdge(i,void 0,[void 0,void 0],h)}}}},processTessSurfacicSet:function(t,i){var s=void 0,o=void 0,h=this.geomRepresentation.getNodeColor(t),d=this.geomRepresentation.getPolyLineData(t);void 0!==i&&(s=this.geomRepresentation.getNodeColor(i),o=this.geomRepresentation.getPolyLineData(i)),void 0===h&&null!=s&&(h=s,d=o);var c=this.geomRepresentation.getGPType(t,h);switch(null==h&&(h=[this.DEFAULT_WIRE_COLOR.r,this.DEFAULT_WIRE_COLOR.g,this.DEFAULT_WIRE_COLOR.b,this.DEFAULT_WIRE_COLOR.a]),c){case n.KindOfGP.GP_Edge:this.processEdge(t,new e.Color(h[0],h[1],h[2],h[3]),d,a);break;case n.KindOfGP.GP_Line:this.currentObject=new e.PrimitiveGroup;var f,u=new r(this.currentObject,void 0);this.primitivesNode.push(u);for(var p=this.geomRepresentation.getChildren(t),l=0,m=p.length;l<m;l++)f=p[l],null!=this.geomRepresentation._associatedDocument.stepEntities[f.substring(1)]&&this.processEdge(f,new e.Color(h[0],h[1],h[2],h[3]),d,a);break;case void 0:console.log("not supported: "+t)}},processTessVertex:function(e){},processEdge:function(t,i,s,n){var r=this.geomRepresentation.getEdgeData(t),o=[];r instanceof Array?o=r:o[0]=r;for(var a=0;a<o.length;++a){r=o[a],this.startNewMesh(!1),this.posBuffer.size=r.vertices.length,this.posBuffer.data=new Float32Array(r.vertices.length);for(var h=0;h<r.vertices.length;++h)this.posBuffer.data[h]=parseFloat(r.vertices[h]);this.normBuffer.size=r.vertices.length,this.normBuffer.data=new Array(this.normBuffer.size),this.currentObject.addBuffer(3*this.meshNb,this.posBuffer);var d=new e.Primitive,c=r.getVerticesNumber();d.nbIndices=c,d.connectivity=e.ConnectivityTypeEnum.LINE_STRIP,d.geomType=n;var f=e.LinePatternEnum.SOLID;null!=s[0]&&("continuous"===s[0]?f=e.LinePatternEnum.SOLID:"chain"===s[0]?f=e.LinePatternEnum.DOTDASHED:"chain double dash"===s[0]?f=e.LinePatternEnum.PHANTOM:"dashed"===s[0]?f=e.LinePatternEnum.DASHED:"dotted"===s[0]&&(f=e.LinePatternEnum.DOTTED)),d.attr={fill:new e.FillAttributes(null==i?this.DEFAULT_WIRE_COLOR:i),line:new e.LineAttributes(null==i?this.DEFAULT_WIRE_COLOR:i,void 0===s[1]?1:s[1],f),point:new e.PointAttributes};var u=new e.VertexComponent;u.component=this.posBuffer.component,u.nbVertices=c,u.nbValuesPerVertex=this.posBuffer.dimension,u.format=this.posBuffer.format,u.cardinality=0,u.bufferId=3*this.meshNb,d.addVertexComponent(u),this.currentObject.addPrimitive(d),this.finishCurrentMesh()}},processTriangulatedFace:function(t,i){var s=this.geomRepresentation.getFaceData(t);this.startNewMesh(!0),this.posBuffer.size=s.vertices.length,this.posBuffer.data=new Float32Array(s.vertices.length);for(var n=0;n<s.vertices.length;++n)this.posBuffer.data[n]=parseFloat(s.vertices[n]);this.normBuffer.size=s.normals.length,this.normBuffer.data=new Float32Array(s.normals.length);for(n=0;n<s.normals.length;++n)this.normBuffer.data[n]=parseFloat(s.normals[n]);for(var r=0,o=0;o<s.nbVertexPerStripTriangle.length;o++)r+=3*(s.nbVertexPerStripTriangle[o]-2);for(o=0;o<s.nbVertexPerFanTriangle.length;o++)r+=3*(s.nbVertexPerFanTriangle[o]-2);r+=s.singleTrianglesIndices.length,this.posIdxBuffer.size=r,this.posIdxBuffer.data=new Uint16Array(this.posIdxBuffer.size);var a=0;(p=new e.Primitive).nbIndices=r,p.connectivity=e.ConnectivityTypeEnum.TRIANGLES,p.geomType="FACE",p.attr={fill:new e.FillAttributes(null==i?this.DEFAULT_COLOR:i),line:new e.LineAttributes,point:new e.PointAttributes},(l=new e.VertexComponent).component=e.VertexComponentEnum.POSITION,l.nbVertices=s.vertices.length,l.nbValuesPerVertex=3,l.format=e.DataTypeEnum.FLOAT,l.cardinality=0,l.bufferId=3*this.meshNb,l.indices=new e.IndexArray,l.indices.format=e.DataTypeEnum.UINT,l.indices.bufferId=3*this.meshNb+2,l.indices.offset=a,(m=new e.VertexComponent).component=e.VertexComponentEnum.NORMAL,m.nbVertices=s.vertices.length,m.nbValuesPerVertex=3,m.format=e.DataTypeEnum.FLOAT,m.cardinality=0,m.bufferId=3*this.meshNb+1,m.indices=new e.IndexArray,m.indices.format=e.DataTypeEnum.UINT,m.indices.bufferId=3*this.meshNb+2,m.indices.offset=a,p.addVertexComponent(l),p.addVertexComponent(m),p.nbVertexComponents>0&&this.currentObject.addPrimitive(p);var h=0;for(o=0;o<s.nbVertexPerStripTriangle.length;o++){for(var d=s.nbVertexPerStripTriangle[o],c=2;c<d;++c)c%2?(this.posIdxBuffer.data[a++]=s.stripTrianglesIndices[h+c],this.posIdxBuffer.data[a++]=s.stripTrianglesIndices[h+c-1],this.posIdxBuffer.data[a++]=s.stripTrianglesIndices[h+c-2]):(this.posIdxBuffer.data[a++]=s.stripTrianglesIndices[h+c-1],this.posIdxBuffer.data[a++]=s.stripTrianglesIndices[h+c],this.posIdxBuffer.data[a++]=s.stripTrianglesIndices[h+c-2]);h+=d}var f=0;for(o=0;o<s.nbVertexPerFanTriangle.length;o++){var u=s.nbVertexPerFanTriangle[o];for(c=2;c<u;++c)this.posIdxBuffer.data[a++]=s.fanTrianglesIndices[f],this.posIdxBuffer.data[a++]=s.fanTrianglesIndices[f+c-1],this.posIdxBuffer.data[a++]=s.fanTrianglesIndices[f+c];f+=u}var p,l,m,g=0;for(o=0;o<s.singleTrianglesIndices.length;o+=3){for(var O=0;O<3;O++){var T=s.singleTrianglesIndices[g+O];this.posIdxBuffer.data[a++]=T}g+=3}this.geomRepresentation.isIndexed&&!this.geomRepresentation.isIndexed()&&((p=new e.Primitive).geomType="FACE",p.nbIndices=s.vertices.length/3,p.connectivity=e.ConnectivityTypeEnum.TRIANGLES,p.attr={fill:new e.FillAttributes(null==i?this.DEFAULT_COLOR:i),line:new e.LineAttributes,point:new e.PointAttributes},(l=new e.VertexComponent).component=e.VertexComponentEnum.POSITION,l.nbVertices=s.vertices.length/3,l.nbValuesPerVertex=3,l.format=e.DataTypeEnum.FLOAT,l.cardinality=0,l.bufferId=3*this.meshNb,l.indices=null,(m=new e.VertexComponent).component=e.VertexComponentEnum.NORMAL,m.nbVertices=s.normals.length/3,m.nbValuesPerVertex=3,m.format=e.DataTypeEnum.FLOAT,m.cardinality=0,m.bufferId=3*this.meshNb+1,m.indices=null,p.addVertexComponent(l),p.addVertexComponent(m),this.currentObject.addPrimitive(p));this.finishCurrentMesh()}},o});