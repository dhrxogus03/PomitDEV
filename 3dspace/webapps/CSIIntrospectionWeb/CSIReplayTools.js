define("DS/CSIIntrospectionWeb/CSIReplayTools",["DS/CSICommandBinder/CSIParameters"],function(e){"use strict";var t=function(){this.maxBlockForCurrentAsset_=9};return t.prototype.csiReplay_onNewPlaySession=function(e,t){e.sessionDebugId_=t,e.replayCallbacks_&&e.replayCallbacks_.onNewPlaySession&&e.replayCallbacks_.onNewPlaySession(e)},t.prototype.csiReplay_onBreak=function(e,t){const r=t.readParameters("data","Parameters"),o=t.readParameters("port","Parameters").readString("block");e.replayStep_&&e.replayStep_._setBreak(o,r,e.getBlockIdDesc([o])),e.resolve_(e.replayStep_),e.replayCallbacks_&&e.replayCallbacks_.onBreak&&e.replayCallbacks_.onBreak(e,o,r)},t.prototype.csiReplay_onProgressCall=function(e,t){const r=t.readParameters("data","Parameters"),o=t.readParameters("port","Parameters").readString("block"),s=e.getBlockExpectedSuccessOutput(o),n=e.getBlockExpectedErrorOutput(o);e.replayStep_&&("$ref:$"===o?e.replayStep_._setGraphCall(o,r):e.replayStep_._setCall(o,r,s,n,e.getBlockIdDesc([o]))),e.replayCallbacks_&&e.replayCallbacks_.onBlockCall&&e.replayCallbacks_.onBlockCall(e,o,r)},t.prototype.csiReplay_onProgressSuccess=function(e,t){const r=t.readParameters("data","Parameters"),o=t.readParameters("port","Parameters").readString("block");e.replayStep_&&e.replayStep_._setSuccess(r),e.replayCallbacks_&&e.replayCallbacks_.onBlockSuccess&&e.replayCallbacks_.onBlockSuccess(e,o,r)},t.prototype.csiReplay_onProgressError=function(e,t){const r=t.readParameters("data","Parameters"),o=t.readParameters("port","Parameters").readString("block");e.replayStep_&&e.replayStep_._setError(r),e.replayCallbacks_&&e.replayCallbacks_.onBlockError&&e.replayCallbacks_.onBlockError(e,o,r)},t.prototype.csiReplay_onGraphSuccess=function(e,t){const r=t.readParameters("data","Parameters"),o=t.readParameters("port","Parameters").readString("block");e.replayCallbacks_&&e.replayCallbacks_.onGraphSuccess&&e.replayCallbacks_.onGraphSuccess(e,o,r)},t.prototype.csiReplay_onPlaySuccess=async function(e,t){e._isNextGraph()?e._launchNextGraph(!1):(e.resolve_(e.replayStep_),e.replayStep_._setDone(!0),e._stop()),e.replayCallbacks_&&e.replayCallbacks_.onPlaySuccess&&e.replayCallbacks_.onPlaySuccess(e,t)},t.prototype.csiReplay_onPlayError=function(t,r){const o=r instanceof e?r.exportToString():r instanceof Error?r.toString():r;t.replayStep_._setErrorMsg(o),t.replayStep_._setDone(!1),t.reject_(t.replayStep_),t.replayCallbacks_&&t.replayCallbacks_.onPlayError&&t.replayCallbacks_.onPlayError(t,r),t._stop()},t.prototype.callCSIFunctionAsync=function(e,t,r,o,s,n,a){return new Promise((c,l)=>{e?e.call({destinationNodeId:t,name:r,version:o,parameters:s,onSuccess:e=>{c(e)},onProgress:e=>{n(e)},onError:e=>{l(e)}},a):l(new Error("No ClientNode, please connect to server 1st"))})},t.prototype.addBreakpoints=function(t,r){if(r instanceof Array&&r.length>0){const o=[];r.forEach(t=>{const r=new e;r.writeString("blockId",t),o.push(r)}),o.length>0&&t.writeParametersArray("breakPoints","Parameters",o)}},t.prototype.getProgressCallback=function(e){return t=>{if("CSIExecGraphProgress"===t.getObjectType()){const r=t.readParameters("data","Parameters"),o=t.readString("description","Parameters"),s=t.readParameters("port","CSIExecGraphPort"),n=r.readParameters("port","CSIExecGraphPort");if(r&&o&&s){const t=r.readUint32("debugId");if(void 0!==t)return this.csiReplay_onNewPlaySession(e,t);const o=s.readString("name");if("debug.break"===o)return this.csiReplay_onBreak(e,r);if("debug.progress"===o){const t=n.readString("name"),o=n.readString("block");if("call"===t)return this.csiReplay_onProgressCall(e,r);if("success"===t)return"$ref:$"===o?this.csiReplay_onGraphSuccess(e,r):this.csiReplay_onProgressSuccess(e,r);if("error"===t)return this.csiReplay_onProgressError(e,r)}}}}},t.prototype.isObject=function(e){return null!==e&&"object"==typeof e},t.prototype.compareObjects=function(e,t,r,o,s){let n=[];void 0===s&&(s=""),void 0===r&&(r="expected parameters"),void 0===o&&(o="received parameters");const a=Object.keys(e),c=Object.keys(t);for(const l of a){const a=e[l],i=t[l];if(c.indexOf(l)<0)n.push(r+' key "'+s+l+'" is not in '+o);else{const e=this.isObject(a),t=this.isObject(i);e&&t?n=n.concat(this.compareParameters(a,a,r,o,s+l+".")):e?n.push(r+' key "'+s+l+'" is an object '+JSON.stringify(a)+" but "+o+" key == "+i):t?n.push(r+' key "'+s+l+'" == '+a+" but "+o+" key is an object "+JSON.stringify(i)):a!==i&&n.push(r+' key "'+s+l+'" value = "'+a+'" != "'+i+'" in '+o)}}for(const e of c)a.indexOf(e)<0&&n.push(o+' key "'+s+e+'" is not in '+r);return n},t.prototype.isInFilter=function(e,t){if("string"==typeof t)return e.indexOf(t)>=0;if(t instanceof RegExp){const r=e.match(t);return r&&r.length>0}if(t instanceof Array&&t.length>0)for(let r=0;r<t.length;++r)if("string"==typeof t[r]){if(e.indexOf(t[r])>=0)return!0}else if(t[r]instanceof RegExp){const o=e.match(t[r]);if(o&&o.length>0)return!0}return!1},t.prototype.getFilterLambda=function(e){return t=>this.isInFilter(t,e)},t.prototype.filterRecordIgnore=function(e,t){if(!t.from)return!1;const r=e.function.implementation.settings.implementation.blocks;this.maxBlockForCurrentAsset_=r.length-1;let o=[],s=[];if(this.applyFilterToBlocks(r,t.from,o,s),t.to){const e=[],n=[];this.applyFilterToBlocks(r,t.to,e,n);const a=this.computeRangesFromTo(o,e,t.bracket,t.excludeBounds);s=a.invertedRanges,o=a.ranges,t.bracket=a.bracket}else s=this.indexListToRanges(s),o=this.indexListToRanges(o);return this.rebuild(e,s,o)},t.prototype.filterRecordAllow=function(e,t){if(!t.from)return!1;const r=e.function.implementation.settings.implementation.blocks;this.maxBlockForCurrentAsset_=r.length-1;let o=[],s=[];if(this.applyFilterToBlocks(r,t.from,s,o),t.to){const e=[],n=[];this.applyFilterToBlocks(r,t.to,n,e);const a=this.computeRangesFromTo(s,n,t.bracket,t.excludeBounds);s=a.ranges,o=a.invertedRanges,t.bracket=a.bracket}else s=this.indexListToRanges(s),o=this.indexListToRanges(o);return this.rebuild(e,s,o)},t.prototype.rebuild=function(e,t,r){if(0===r.length)return;const o=e.function.implementation.settings.implementation,s=o.blocks,n=o.controlFlows,a=o.dataFlows,c=e.inputs,l=e.outputs;return o.blocks=this.rebuildBlocks(s,t),o.controlFlows=this.rebuildControlFlows(n,r),o.dataFlows=this.rebuildDataFlows(a,t),e.inputs=this.rebuildInputs(c,t),e.outputs=this.rebuildOutputs(l,t),!0},t.prototype.applyFilterToBlocks=function(e,t,r,o){for(let s=0;s<e.length;++s)this.isInFilter(e[s].displayName,t)?r.push(s):o.push(s)},t.prototype.computeRangesFromTo=function(e,t,r,o){var s={ranges:{},invertedRanges:{},bracket:!1};let n=0,a=0;const c=[];let l=[0,-1],i=1;for(;i;)r?a<t.length?(l[1]=t[a++],o&&(l[1]-=1),l[1]>=l[0]&&c.push(l),l=[-1,-1]):i=0:r||(n<e.length?(l[0]=e[n++],o&&(l[0]+=1)):i=0),i&&(r=!r);return r&&(l[1]=this.maxBlockForCurrentAsset_,l[1]>=l[0]&&c.push(l)),s.ranges=c,s.bracket=r,s.invertedRanges=this.invertRanges(c),s},t.prototype.invertRanges=function(e){const t=[];let r=0;for(let o=0;o<e.length;++o){const s=e[o];s[0]>r&&t.push([r,s[0]-1]),r=s[1]+1}return r<this.maxBlockForCurrentAsset_&&t.push([r,this.maxBlockForCurrentAsset_]),t},t.prototype.indexListToRanges=function(e){const t=[];let r=[-1,-1];for(let o=0;o<e.length;++o){const s=e[o];-1===r[0]?(r[0]=s,r[1]=s):r[1]+1===s?r[1]=s:(t.push(r),r=[s,s])}return-1!==r[0]&&t.push(r),t},t.prototype.rebuildBlocks=function(e,t){const r=[];return t.forEach(t=>{r.splice(r.length,0,...e.slice(t[0],t[1]+1))}),r},t.prototype.rebuildControlFlows=function(e,t){const r=[];let o=0;for(t.forEach(t=>{if(o>=e.length-1)return;const s=t[0],n=t[1];let a;for(;o<s;++o)a=e[o],r.push(a);const c="blocks["+s+"].call";if((a=e[o]).to===c){let e;e=n+1>this.maxBlockForCurrentAsset_?"$ref:$.success":"blocks["+(n+1)+"].call",a.to=e,r.push(a)}o+=n+2-s});o<e.length;++o)r.push(e[o]);return r},t.prototype.rebuildDataFlows=function(e,t){const r=[];return t.forEach(t=>{for(let o=2*t[0];o<2*t[1]+2;++o)r.push(e[o])}),r},t.prototype.rebuildInputs=function(e,t){const r={content:{}};return t.forEach(t=>{for(let o=t[0];o<t[1]+1;++o){const t="blocks"+o;r.content[t]=e.content[t]}}),r.type=e.type,r.version=e.version,r},t.prototype.rebuildOutputs=function(e,t){const r={content:{}};return e.content.receivedSuccesses&&(r.content.receivedSuccesses={type:"Parameters",value:{}}),e.content.receivedError&&(r.content.receivedError={type:"Parameters",value:{}}),t.forEach(t=>{for(let o=t[0];o<t[1]+1;++o){const t="blocks"+o,s=e.content.receivedSuccesses?e.content.receivedSuccesses.value[t]:void 0,n=e.content.receivedError?e.content.receivedError.value[t]:void 0;s?r.content.receivedSuccesses.value[t]=s:n&&(r.content.receivedErrors.value[t]=n)}}),r.type=e.type,r.version=e.version,r},t.prototype.convertToFilter=function(e){if(e instanceof Array){const t=e.split(","),r=[];if(t.forEach(e=>{const t=this.convertToFilter(e);t&&r.push(t)}),r.length)return r}else if("string"==typeof e){if(e.length>0){if("/"===e[0]){const t=e.lastIndexOf("/"),r=e.slice(1,t),o=e.slice(t+1);return new RegExp(r,o)}return e}}else if(e instanceof RegExp)return e},new t});