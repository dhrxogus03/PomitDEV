define("DS/CSIIntrospectionWeb/CSIReplay",["DS/ExperienceKernel/ExperienceKernel","DS/CSIIntrospectionWeb/CSIReplayTools","DS/CSICommandBinder/CSIParameters","DS/CSIIntrospectionWeb/CSIDeclarativeFunctionDefinition","DS/CSIIntrospectionWeb/CSIExecutionGraph"],function(e,t,s,o,r){"use strict";function i(e,t){const o=Number(t);let r;return r="string"==typeof e?e:e instanceof l||void 0!==e.errorMsg?"ReplayStep error = "+e.errorMsg:e instanceof s?s.prototype.__stringifyWithBigIntSupport(e.toJSObject(),{stringify64BitsValues_:!0}):s.prototype.__stringifyWithBigIntSupport(e,{stringify64BitsValues_:!0}),o&&r.length>t?r.slice(0,o)+" ...":r}s.prototype.overrideOwnPropertiesWith=function(e){var t=!1;for(var s in e.propertyMap_)e.propertyMap_.hasOwnProperty(s)&&this.propertyMap_.hasOwnProperty(s)&&(this.propertyMap_[s]=e.propertyMap_[s],t=!0);return t};var n=function(e,t){this.breakOnStart_="boolean"==typeof e&&e,this.breakPoints_=t instanceof Array?t:[],this.progressEvents_=!0};n.prototype.appendTo=function(e){const o=new s;o.writeBool("breakOnStart",this.breakOnStart_),t.addBreakpoints(o,this.breakPoints_),o.writeBool("progressEvents",this.progressEvents_),e.writeParameters("debugConfig","Parameters",o)};var c=function(){this.onNewPlaySession=void 0,this.onBlockCall=void 0,this.onBlockSuccess=void 0,this.onBlockError=void 0,this.onBreak=void 0,this.onGraphSuccess=void 0,this.onPlaySuccess=void 0,this.onPlayError=void 0},l=function(e,t,s){this.prevCall={blockId:void 0,inputs:void 0,successOutputs:void 0,expectedSuccess:void 0,errorOutputs:void 0,expectedError:void 0,blockIdDesc:void 0},this.nextCall={blockId:void 0,inputs:void 0,blockIdDesc:void 0},this.graphCalled=!1,this.isBreaked=!1,this.isDone=!1,this.asset=e,this.errorMsg=t,this.alwaysOverrideKeysFct_=s};l.prototype.log=function(e,t){let s=t?"<br>":"\n",o="",r="",n="",c="",l="",a="",p="";t?(s="<br>",o='<strong><span style="color: green">',r='<strong><span style="color: darkgoldenrod">',n='<strong><span style="color: red">',c='<strong><span style="color: saddlebrown">',l="</span></strong >",a="<strong>",p="</strong>"):s="\n";let u=s+"ReplayStep";this.errorMsg&&(u+=n+" - error: "+this.errorMsg+l+s),this.prevCall.blockId&&(u+=s+o+" - prev block: ",this.prevCall.blockIdDesc&&(u+=this.prevCall.blockIdDesc.implementation.pool+"::"+this.prevCall.blockIdDesc.displayName),u+=" ("+this.prevCall.blockId+")"+l),this.prevCall.inputs&&(u+=s+a+"   - inputs: "+p+i(this.prevCall.inputs,e)),this.prevCall.successOutputs&&(u+=s+a+"   - outputs(success): "+p+i(this.prevCall.successOutputs,e)),this.prevCall.errorOutputs&&(u+=s+a+"   - outputs(error): "+p+i(this.prevCall.errorOutputs,e)),this.prevCall.expectedSuccess&&(u+=s+a+"   - expected(success): "+p+i(this.prevCall.expectedSuccess,e)),this.prevCall.expectedError&&(u+=s+a+"   - expected(error): "+p+i(this.prevCall.expectedError,e));const h=this.compareOutputs();return h&&h.length&&h.forEach(e=>{u+=s+r+" - output difference: "+l,u+=e}),this.graphCalled&&(u+=s+c+" - new graph asset: "+this.asset+l),this.nextCall.blockId&&(u+=s+o,u+=" - next block: ",this.nextCall.blockIdDesc&&(u+=this.nextCall.blockIdDesc.implementation.pool+"::"+this.nextCall.blockIdDesc.displayName),u+=" ("+this.nextCall.blockId+")"+l,this.nextCall.inputs&&(u+=s+"   - inputs: "+i(this.nextCall.inputs.toJSObject().call,e))),this.isDone&&(u+=s+s+o+"Replay Complete"+l),u+"\n"},l.prototype.compareOutputs=function(){return this.prevCall.successOutputs&&this.prevCall.expectedSuccess?t.compareObjects(this.prevCall.expectedSuccess,this.prevCall.successOutputs,"expected success","received parameters"):this.errorOutputs&&this.prevCall.expectedErrors?t.compareObjects(this.prevCall.expectedErrors,this.prevCall.errorOutputs,"expected success","received parameters"):void 0},l.prototype._setGraphCall=function(){this.graphCalled=!0},l.prototype._setCall=function(e,t,s,o,r){this.prevCall.blockId=e,this.prevCall.inputs=t,this.prevCall.expectedSuccess=s,this.prevCall.expectedErrors=o,this.prevCall.blockIdDesc=r},l.prototype._setSuccess=function(e){this.prevCall.successOutputs=e.toJSObject()},l.prototype._setError=function(e){this.prevCall.errorOutputs=e.toJSObject()},l.prototype._setBreak=function(e,t,s){this.nextCall.blockId=e,this.nextCall.inputs=t,this.nextCall.blockIdDesc=s,this.isBreaked=!0,this.alwaysOverrideKeysFct_&&this.alwaysOverrideKeysFct_(this)},l.prototype._setDone=function(e){this.isDone=e?{success:!0}:{error:!0},this.isBreaked=!0},l.prototype._setErrorMsg=function(e){this.errorMsg=e};var a=function(e,s,o,r){this.clientNode_=e,this.targetNodeId_=s,this.replayCallbacks_=r,this.debugConfig_=void 0,this.sessionDebugId_=void 0,this.interruption_=void 0,this.blockMap_=void 0,this.inputs_=void 0,this.outputs_=void 0,this.outputsSuccessPerBlockIdMap_=void 0,this.outputsErrorPerBlockIdMap_=void 0,this.jsonRecord_=o,this.recordObject_=void 0,this.ignore_={from:void 0,to:void 0,excludeBounds:!1,bracket:!1},this.allow_={from:void 0,to:void 0,excludeBounds:!1,bracket:!1},this.currentAsset_=void 0,this.subRecordCurrentIndex_=void 0,this.subRecords=void 0,this.stepMode_=!1,this.alwaysOverrideKeysFct_=void 0,this._deleteReplayStep(),this.progressCallback_=t.getProgressCallback(this)};return a.DebugConfig=n,a.ReplayCallbacks=c,a.ReplayCallbacksLogSample=function(){c.call(this),this.onNewPlaySession=function(e){console.log("ReplayCallbacksLogSample"),console.log("CSIReplay::play() active session debugId = "+e.getDebugSessionId())},this.onBlockCall=function(e,t,s){console.log("ReplayCallbacksLogSample"),"$ref:$"===t?console.log("CSIReplay::step() - GRAPH CALL - , debugId = "+e.getDebugSessionId()):console.log("CSIReplay::step() - CALL - , debugId = "+e.getDebugSessionId()+" block = "+t+" with input "+s.toJSON())},this.onBlockSuccess=function(e,t,s){console.log("ReplayCallbacksLogSample"),console.log("CSIReplay::step() - SUCCESS - , debugId = "+e.getDebugSessionId()+" block = "+t+" with output "+s.toJSON()),e.getReplayStep().compareOutputs().forEach(e=>{console.log(e)})},this.onBlockError=function(e,t,s){console.log("ReplayCallbacksLogSample"),console.log("CSIReplay::step() - ERROR - , debugId = "+e.getDebugSessionId()+" block = "+t+" with output "+s.toJSON())},this.onBreak=function(e,t,s){console.log("ReplayCallbacksLogSample"),console.log("CSIReplay::step() - BREAK - , debugId = "+e.getDebugSessionId()+" next block = "+t+" with input "+s.toJSON())},this.onGraphSuccess=function(e,t,s){console.log("ReplayCallbacksLogSample"),console.log("CSIReplay::step() - GRAPH END - , debugId = "+e.getDebugSessionId()+" block = "+t+" with output "+s.toJSON())},this.onPlaySuccess=function(e,t){console.log("ReplayCallbacksLogSample"),console.log("CSIReplay::play() - SUCCESS - , debugId = "+e.getDebugSessionId()+" output "+t.toJSON())},this.onPlayError=function(e,t){console.log("ReplayCallbacksLogSample"),console.log("CSIReplay::play() - ERROR - , debugId = "+e.getDebugSessionId()+" output "+t.toJSON())}},a.compareObjects=function(e,s,o,r){return t.compareObjects(e,s,o,r)},a.prototype.isAssetDragNDrop=function(){return this.jsonRecord_ instanceof Object&&this.jsonRecord_.filenames instanceof Array&&this.jsonRecord_.filecontents instanceof Array},a.prototype.stop=function(){if(this.interruption_&&this.sessionDebugId_){try{this.interruption_.interrupt()}catch(e){return console.error(e),"CSIReplay::stop() - failure: "+e}return this.sessionDebugId_=void 0,this.interruption_=void 0,"CSIReplay.stop() successful"}return"CSIReplay.stop() - no active play() session"},a.prototype.playBreakAll=async function(){this.stepMode_=!0;const e=new n(!0);return this.play(e)},a.prototype.play=async function(e){if(this.sessionDebugId_){const e="CSIReplay::play(): there is still an active play() session, please call csiReplay.stop() before";return Promise.reject(new l(void 0,e))}if(this.debugConfig_=void 0===e?new n:e,void 0===this.jsonRecord_)this.recordObject_={};else{if(this.isAssetDragNDrop())return this.subRecords_=this.jsonRecord_.filecontents,this._launchNextGraph(!0);if("string"!=typeof this.jsonRecord_){const e="Invalid jsonRecord argument";return Promise.reject(new l(void 0,e))}if("text!"===this.jsonRecord_.slice(0,5)){const e=await this._downloadAsset(this.jsonRecord_),t=JSON.parse(e);return this._computeSplitRecordPaths(this.jsonRecord_,t.subRecords),this._launchNextGraph(!0)}this._parseRecord(this.jsonRecord_)}return this._playGraph(!0)},a.prototype.continue=async function(){return this.stepMode_=!1,void 0===this.sessionDebugId_||void 0===this.replayStep_?Promise.resolve(new l(void 0,"no active replay session")):(this._callDebugger("continue"),new Promise((e,t)=>{this._createReplayStep(e,t)}))},a.prototype.breakAll=async function(){return void 0===this.sessionDebugId_||void 0===this.replayStep_?Promise.resolve(new l(void 0,"no active replay session")):this.replayStep_.isBreaked_?(console.log("CSIReplay.breakAll warning - replay is already breaked"),Promise.resolve(this.replayStep_)):(this._callDebugger("breakAll"),new Promise((e,t)=>{this._createReplayStep(e,t)}))},a.prototype.addBreakpoint=async function(e){if(e instanceof Array&&e.length>0){const o=new s;return t.addBreakpoints(o,e),this._callDebugger("breakPoints",o)}},a.prototype.overrideNextInputs=async function(e){if(void 0===e||!(e instanceof s))return Promise.reject(new Error("invalid argument"));if(void 0===this.sessionDebugId_||void 0===this.replayStep_)return Promise.reject(new Error("no active replay session"));if("Parameters"!==e.exists("call")){const t=new s;t.writeParameters("call","Parameters",e),e=t}const t=new s;return t.writeParameters("breakBlockData","Parameters",e),this._callDebugger("breakBlockData",t)},a.prototype.step=async function(){return this.stepMode_=!0,void 0===this.sessionDebugId_||void 0===this.replayStep_?Promise.resolve(new l(void 0,"no active replay session")):(this._callDebugger("stepOver"),new Promise((e,t)=>{this._createReplayStep(e,t)}))},a.prototype.getBlockIdDesc=function(e){return this.blockMap_[e]},a.prototype.getBlockExpectedOutput=function(e){let t=this.getBlockExpectedSuccessOutput(e);return t||(t=this.getBlockExpectedErrorOutput(e)),t},a.prototype.getBlockExpectedSuccessOutput=function(e){const t=e.slice(0,e.length-3)+e.slice(e.length-2,e.length-1);return this.outputsSuccessPerBlockIdMap_[t]},a.prototype.getBlockExpectedErrorOutput=function(e){return this.outputsErrorPerBlockIdMap_[e]},a.prototype.getDebugSessionId=function(){return this.sessionDebugId_},a.prototype.getReplayStep=function(){return this.replayStep_},a.prototype.ignore=function(e,s,o){return this.ignore_.from=t.convertToFilter(e),this.ignore_.to=t.convertToFilter(s),this.ignore_.excludeBounds=o,void 0!==this.ignore_.from},a.prototype.allow=function(e,s,o){return this.allow_.from=t.convertToFilter(e),this.allow_.to=t.convertToFilter(s),this.allow_.excludeBounds=o,void 0!==this.allow_.from},a.prototype.alwaysOverrideKeys=function(e){const t=this;e instanceof s?(this.alwaysOverrideKeysFct_=function(o){const r=o.nextCall.inputs;if(o.nextCall.blockId&&r){const o=r.readParameters("call","Parameters");if(o){o.overrideOwnPropertiesWith(e);const i=new s(r);i.writeParameters("call","Parameters",o),t.overrideNextInputs(i)}}},this.replayStep_&&this.alwaysOverrideKeysFct_(this.replayStep_)):(this.alwaysOverrideKeysFct_=void 0,this.replayStep_&&this.overrideNextInputs(this.replayStep_.nextCall.inputs))},a.prototype._createReplayStep=async function(e,t){this.replayStep_=new l(this.currentAsset_,void 0,this.alwaysOverrideKeysFct_),this.resolve_=e,this.reject_=t},a.prototype._deleteReplayStep=async function(){this.replayStep_=void 0,this.resolve_=void 0,this.reject_=void 0},a.prototype._stop=function(){this.sessionDebugId_=void 0,this.interruption_=void 0,this.replayStep_=void 0,this.subRecordCurrentIndex_=void 0,this.subRecords=void 0,this.stepMode_=!1,this.currentAsset_=void 0},a.prototype._callDebugger=async function(e,o){return void 0===o&&(o=new s),o.writeString("debugRequest",e),o.writeUint32("debugId",this.sessionDebugId_),new Promise((e,s)=>{t.callCSIFunctionAsync(this.clientNode_,this.targetNodeId_,"csiExecutionGraphDebugger",1,o,this.progressCallback_).then(t=>{e(t)}).catch(e=>{s(e)})})},a.prototype._readIO=function(e){this.inputs_=new s,this.inputs_.importFromString(this.recordObject_.inputs),e.writeParameters("inputs","Parameters",this.inputs_),this.outputs_=new s,this.outputs_.importFromString(this.recordObject_.outputs);const t=this.outputs_.readParameters("receivedSuccesses","Parameters"),o=this.outputs_.readParameters("receivedErrors","Parameters");if(this.outputsSuccessPerBlockIdMap_={},this.outputsErrorPerBlockIdMap_={},void 0!==t){const e=t.begin(),s=t.end();for(;!e.equal(s);)e.isObject()&&(this.outputsSuccessPerBlockIdMap_[e.getName()]=e.getJSValue()),e.next()}if(void 0!==o){const e=o.begin(),t=o.end();for(;!e.equal(t);)e.isObject()&&(this.outputsErrorPerBlockIdMap_[e.getName()]=e.getJSValue()),e.next()}},a.prototype._downloadAsset=async function(e){return new Promise((t,s)=>{require([e],function(e){t(e)},function(e){s(e)})})},a.prototype._computeSplitRecordPaths=function(e,t){this.subRecords_=[];const s=e.lastIndexOf("/"),o=e.slice(0,s+1);t.forEach(e=>{this.subRecords_.push(o+e.slice(2,e.length))})},a.prototype._playGraph=async function(o){const i=this.recordObject_.function.implementation.settings,n=new r.CSIExecGraphBlock(i),c=new s;if(c.writeObject("definition","CSIExecGraphBlock",n),this.blockMap_={},this.recordObject_.function.implementation.settings.implementation.blocks.forEach(e=>{this.blockMap_[e.id]=e}),0===this.recordObject_.function.implementation.settings.implementation.blocks.length)t.csiReplay_onPlaySuccess(this);else if(this._readIO(c),this.debugConfig_.appendTo(c),this.sessionDebugId_=-1,this.interruption_=new e.Interruption,t.callCSIFunctionAsync(this.clientNode_,this.targetNodeId_,"csiExecutionGraphFunction",1,c,this.progressCallback_,this.interruption_).then(e=>{t.csiReplay_onPlaySuccess(this,e)}).catch(e=>{t.csiReplay_onPlayError(this,e)}),o)return new Promise((e,t)=>{this._createReplayStep(e,t)})},a.prototype._isNextGraph=function(){return void 0!==this.subRecords_&&this.subRecordCurrentIndex_+1<this.subRecords_.length},a.prototype._launchNextGraph=async function(e){if(void 0===this.subRecords_)return;let t;if(void 0===this.subRecordCurrentIndex_?this.subRecordCurrentIndex_=0:++this.subRecordCurrentIndex_,this.isAssetDragNDrop())this.currentAsset_=this.jsonRecord_.filenames[this.subRecordCurrentIndex_],t=this.jsonRecord_.filecontents[this.subRecordCurrentIndex_],this.replayStep_&&(this.replayStep_.asset=this.currentAsset_);else{this.currentAsset_=this.subRecords_[this.subRecordCurrentIndex_],this.replayStep_&&(this.replayStep_.asset=this.currentAsset_);try{t=await this._downloadAsset(this.currentAsset_)}catch(e){return Promise.reject(new l(void 0,e))}}return this._parseRecord(t),this.stepMode_?this.debugConfig_.breakOnStart_=!0:this.debugConfig_.breakOnStart_=!1,this._playGraph(e)},a.prototype._parseRecord=async function(e){this.recordObject_=JSON.parse(e),t.filterRecordIgnore(this.recordObject_,this.ignore_),t.filterRecordAllow(this.recordObject_,this.allow_)},a.logParameters=i,a});