define("DS/W3DDriveComponent/DriveChooserView",["UWA/Core","UWA/Class/View","DS/UIKIT/Input/Select","DS/UIKIT/Input/Button","DS/UIKIT/Form","DS/DataGridView/DataGridView","DS/UIKIT/Modal","i18n!DS/W3DDriveComponent/assets/nls/W3DDriveComponent","css!DS/W3DDriveComponent/W3DDriveComponent.css","css!DS/UIKIT/UIKIT.css"],function(e,t,n,i,r,o,a,l){"use strict";return t.extend({tenants:[],container:null,_multiSelect:!1,_createFolder:!1,_selectInput:null,_createFolderButton:null,init:function(t){this._multiSelect=t.select.multiSelect,this._createFolder=t.select.createFolder,this.container=new e.createElement("div"),this.container.addClassName("drive-chooser")},getFormValues:function(){var e=this._selectInput.getValue(),t=this.getSelectedNode(),n=[];return t&&e&&1===e.length?(t.forEach(function(t){t&&t.options.id&&n.push({envId:e[0],serviceId:"3DDrive",objectId:t.options.id,objectType:t.options.type,displayName:t.options.label})}),n):n},setTenants:function(e,t){var n=e.findIndex(function(e){return e.value===t});if(n<0&&(n=0),e.length>0){e[n].selected=!0,this.onTenantSelectionChange(e[n].value),this.tenants=e;var i=this._selectInput;e.forEach(function(e){var t={value:e.value,label:e.label,selected:e.selected};i.add(t)})}},createTreeMap:function(t){var n=this;if(!this.treeView){this.treeView=function(e,t,n,i){return new o({identifier:"driveContentView",layoutOptions:{rowsHeader:!1,columnsHeader:!1},treeDocument:e,showAlternateBackgroundFlag:!1,showRowIndexFlag:!1,showRowHeaderBackgroundFlag:!1,treeNodeCellOptions:{expanderStyle:"triangle"},useAsyncPreExpand:!0,columns:[{dataIndex:"tree",typeRepresentation:"string",getCellClassName:function(e){return"drive-datagridview-row"}}],rowSelection:t?"multiple":"single",cellSelection:"none",defaultColumnDef:{minWidth:100}})}(t,this._multiSelect,this._createFolder,n.onNewFolder);var i=this.treeView.getNodesXSO();i.onPostAdd(function(e){e.forEach(function(e){n.onSelectNode(n.getFormValues()),n.createFolderVisibility(n.getFormValues())})}),i.onPostRemove(function(e){n.onSelectNode(n.getFormValues()),n.createFolderVisibility(n.getFormValues())})}var r=this.container.querySelector(".drive-tree-map"),a=this.treeView.elements?this.treeView.elements.container:null,l=e.createElement("div");l.addClassName("drive-tree"),a.inject(l),r.parentElement.replaceChild(l,r)},getSelectedNode:function(){var e=this.treeView.treeDocument?this.treeView.treeDocument.getXSO().get():null;return e&&e.length>0?e:null},createFolderVisibility:function(e){const t=this,n=1===e.length&&"DriveFolder"===e[0].objectType,i=1===e.length&&"Shared with me"!==e[0].displayName;n&&this._createFolder&&i?t._createFolderButton.enable():t._createFolderButton.disable()},createFolderView:function(e){const t=this,n=e;let o=l.get("forbiddenChars",{chars:'< > / \\ : ? * " |'});const s=new r({fields:[{type:"text",name:"title",label:l.title,placeholder:l.enterTitle,value:n,required:!0,maxlength:255,pattern:'^((?!<)(?!>)(?!/)(?!\\\\)(?!:)(?!\\?)(?!\\*)(?!")(?!\\|)(?!\\.$).)*$',errorText:o}],events:{onSubmit:function(e){t.onNewFolder(t.getSelectedNode()[0],(e.title||"").trim()),u&&u.destroy()}}}),c=new i({value:l.get("ok"),className:"primary",events:{onClick:()=>{s.submit()}}}),d=new i({value:l.get("cancel"),className:"default",events:{onClick:()=>{u&&u.destroy()}}}),u=new a({closable:!1,animate:!0,header:l.createFolder,body:s,footer:[c,d]}).inject(document.body);u.show(),s.getField("title").select()},render:function(){var t=this;this.container.empty();const r=e.createElement("div",{class:"create-folder-option"});this._selectInput=new n({className:"drive-select",placeholder:l.select_platform,name:"tenant",options:this.tenants,events:{onChange:function(e){t.onTenantSelectionChange(e.target.value)}}}).inject(this.container);var o=e.createElement("div");o.addClassName("drive-tree-map"),o.inject(this.container),this._createFolderButton=new i({value:l.createFolder,icon:"folder-add",disabled:!0,events:{onClick:()=>{t.autoName(t.getSelectedNode()[0]).then(function(e){t.createFolderView(e)})}}}).inject(r),r.inject(this.container)},destroy:function(){console.log("DriveChooserView destroy"),this._selectInput&&this._selectInput.destroy(),this.treeView&&this.treeView.destroy()}})}),define("DS/W3DDriveComponent/DriveWebServices",["UWA/Core","DS/i3DXCompassPlatformServices/i3DXCompassPlatformServices","DS/WAFData/WAFData","i18n!DS/W3DDriveComponent/assets/nls/W3DDriveComponent"],function(e,t,n,i){"use strict";function r(e){return new Promise(function(n,i){var r=e.tenantId;t.getServiceUrl({platformId:r,serviceName:"3DDrive",onComplete:function(e){n({platformId:r,url:e})},onFailure:function(){n()}})}).then(function(e){if(""!==e.platformId)return{baseUrl:e.url+"/resources/3ddrive/v1/bos",tenantId:e.platformId};reject(new Error("rejetee"))})}function o(e,t){return e+(e.match(/\?/)?"&":"?")+"tenant="+encodeURIComponent(t)}return{createNewFolder:function(t){return r(t).then(function(i){return new Promise(function(r,a){var l=e.merge({},{"Content-Type":"application/json;charset=UTF-8","X-DS-CSRFTOKEN":t.csrfToken}),s=JSON.stringify({title:t.name,type:"DriveFolder"});n.authenticatedRequest(o(i.baseUrl+"/"+t.folderId+"/contents?update=true",i.tenantId),{method:"POST",type:"json",headers:l,data:s,onComplete:function(e){var t={};t.title=e.title,t.id=e.id,t.shared=e.shared,t.type=e.type,t.icon=(e.extension,"doc"),t.accessright=e.accessright,r(t)},onFailure:a})})},function(){return{}})},expandFolder:function(e){return r(e).then(function(t){return new Promise(function(i,r){n.authenticatedRequest(o(t.baseUrl+"/"+e.folderId+"/contents?sort=atitle",t.tenantId),{type:"json",onComplete:function(t){var n=[],r=e.filter.type&&"DriveFolder"===e.filter.type;t.items&&t.items.filter(function(e){return!r||"DriveFolder"===e.type}).filter(function(t){return!("DriveFolder"!==t.type&&e.filter.extension&&e.filter.extension.length>0&&t.extension.length>0&&!e.filter.extension.includes(t.extension))}).forEach(function(e){var t={};t.title=e.title,t.id=e.id,t.shared=e.shared,t.type=e.type,t.icon=(e.extension,"doc"),t.accessright=e.accessright,n.push(t)}),i(n)},onFailure:r})})},function(){return[]})},getAutoName:function(e){return r(e).then(function(t){return new Promise(function(i,r){n.authenticatedRequest(o(t.baseUrl+"/"+e.folderId+"/contents/autoname?title="+e.name,t.tenantId),{onComplete:function(e){var t=JSON.parse(e),n=t.title;t.iteration.length>0&&(n+=" ("+t.iteration+")"),i(n)},onFailure:r})})},function(){return""})},getRootInodes:function(){return[{id:"DSROOT",type:"DriveFolder",shared:0,title:i.myFiles,accessright:"edit"},{id:"sharedwithme",type:"DriveFolder",shared:0,title:i.sharedWithMe,accessright:"read"}]},get3DDriveTenantList:function(){return new Promise(function(e,n){t.getPlatformServices({onComplete:function(t){e(t)},onFailure:function(){e()}})})},getMetadata:function(e){return r(e).then(function(t){return new Promise(function(i,r){e.tenantId&&n.authenticatedRequest(o(t.baseUrl+"/"+e.id+"?withactions=false",t.tenantId),{type:"json",onComplete:function(e,t){i(t["x-ds-csrftoken"])},onFailure:r})})},function(){return null})}}}),define("DS/W3DDriveComponent/DriveController",["DS/W3DDriveComponent/DriveWebServices","i18n!DS/W3DDriveComponent/assets/nls/W3DDriveComponent"],function(e,t){"use strict";return{view:null,model:null,defaultTenant:null,multiTenant:!0,initialized:!1,binded:!1,loadingTenants:{root:{title:t.loading_tenants,id:-1}},noTenantSelected:{root:{title:t.select_tenant,id:-1}},setView:function(e){this.view=e,this.bindToViewEvents()},setModel:function(e){this.model=e},loadDrives:function(){var t=this;e.get3DDriveTenantList().then(function(e){var n=[];e.filter(function(e){return!!t.multiTenant||e.platformId===t.defaultTenant}).forEach(function(e){n.push({label:e.displayName,value:e.platformId,url:e["3DDrive"]})}),t.tenants=n,t.view.setTenants(n,t.defaultTenant)})},run:function(){this.initialized&&this.binded&&this.loadDrives()},init:function(e){this.defaultTenant=e.envId,this.multiTenant=e.multiEnv,this.model.createRootNode(),this.view.createTreeMap(this.model),this.onSelectCB=e.onSelect,this.initialized=!0},bindToViewEvents:function(){var t=this;this.view.onTenantSelectionChange=function(e){t.model.refreshTree(e)},this.view.onSelectNode=function(e){t.onSelectCB(e)},this.view.autoName=function(n){var i={name:"New Folder",folderId:n._options.id,tenantId:t.model._tenantId};return e.getAutoName(i).then(function(e){return e})},this.view.onNewFolder=function(n,i){var r={name:i,folderId:n._options.id,tenantId:t.model._tenantId,csrfToken:t.model._csrfToken};e.createNewFolder(r).then(function(e){n.empty(),n.expand()})},this.binded=!0}}}),define("DS/W3DDriveComponent/DriveTreeModel",["UWA/Class","DS/TreeModel/TreeDocument","DS/TreeModel/TreeNodeModel","DS/W3DDriveComponent/DriveWebServices"],function(e,t,n,i){"use strict";return t.extend({defaultOptions:{shouldBeSelected:function(e){var t=!0;return"edit"===this._select.accessright&&(t=e._options.accessright.includes("edit")),"all"!==this._select.type&&(t=!!t&&e._options.type.includes(this._select.type)),t}},_tenantId:null,_filter:null,_select:null,_csrfToken:null,init:function(e){var t=this;this._parent(e),this._tenantId=e.envId,this._select=e.select,this._filter=e.filter,this._filter&&this._filter.extension&&(this._filter.extension=this._filter.extension.map(function(e){return e.toLowerCase()})),this.onPreExpand(function(e){if(!1===e.target.hasChildren()&&void 0!==this._tenantId){var n={folderId:e.parent.options.id,tenantId:this._tenantId,filter:this._filter};i.expandFolder(n).then(function(n){n.forEach(function(n){var i=t.createNode(e.target,n);"DriveFile"===n.type&&i.setState({state:"noChildren"})}),e.target.preExpandDone()})}else e.target.preExpandDone()}.bind(this)),this.onPostExpand(function(e){!1===e.target.hasChildren()&&e.target.setState({state:"noChildren"})})},createNode:function(e,t){var i;i="DriveFolder"===t.type?t.shared?"folder-shared":"folder":t.icon?t.icon:"doc";var r=!1;"DriveFolder"!==t.type||"edit"!==t.accessright&&"edit_share"!==t.accessright||(r=!0);var o=new n({children:[],id:t.id,label:t.title,type:t.type,icons:[i],accessright:t.accessright,newFolderCreationAllowed:r});return e.addChild(o),o},createRootNode:function(e){var t=this;this._tenantId=e,this.empty();var n=i.getRootInodes(),r={id:n[0].id,tenantId:e};i.getMetadata(r).then(function(e){t._csrfToken=e}),n.forEach(function(e){t.createNode(t,e)})},refreshTree:function(e){this.empty(),this.removeRoots(),this.createRootNode(e)}})}),define("DS/W3DDriveComponent/DriveContentSelector",["UWA/Core","DS/W3DDriveComponent/DriveChooserView","DS/W3DDriveComponent/DriveTreeModel","DS/W3DDriveComponent/DriveController","i18n!DS/W3DDriveComponent/assets/nls/W3DDriveComponent"],function(e,t,n,i,r){"use strict";return{create3DDriveChooser:function(e){var r=["DriveFolder","DriveFile","all"],o=["read","edit"],a=["DriveFolder","all"],l={multiEnv:!0,select:{multiSelect:!1,type:"all",accessright:"read",createFolder:!1},filter:{type:"all",extension:[]}},s=JSON.parse(JSON.stringify(e));if(Object.keys(l).forEach(function(t){"object"==typeof e[t]&&l[t]&&(s[t]=Object.assign(l[t],e[t]))}),Object.assign(l,s),!e.onSelect||"function"!=typeof e.onSelect)throw new Error("Invalid parameter: onSelect function is required");if(l.onSelect=e.onSelect,!l.envId&&!l.multiEnv)throw new Error("Invalid parameter: envId must be set");if("boolean"!=typeof l.multiEnv||"boolean"!=typeof l.select.multiSelect)throw new Error("Invalid parameter: multiEnv and select.multiSelect must be true or false");if("boolean"!=typeof l.select.createFolder)throw new Error("Invalid parameter: select.createFolder must be true or false");if(!r.includes(l.select.type))throw new Error("Invalid parameter: select.type = "+l.select.type+". Supported values are "+r);if(!o.includes(l.select.accessright))throw new Error("Invalid parameter: select.accessright = "+l.select.accessright+". Supported values are "+o);if(!a.includes(l.filter.type))throw new Error("Invalid parameter: filter.type = "+l.filter.type+". Supported values are "+a);var c=new n(l),d=new t(l);return i.setView(d),i.setModel(c),d.render(),i.init(e),i.run(),d}}});