define("DS/XCADSTEPDocument/STEPTessellatedRepresentation",["DS/XCADInputDocuments/XCADTessellatedRepresentation","DS/XCADInputDocuments/XCADRepresentation","DS/XCADInputDocuments/XCADFaceData","DS/XCADInputDocuments/XCADEdgeData","DS/Mesh/ThreeJS_Base"],function(t,e,s,i,n){"use strict";var o=/([^,]+)/g,r=/\(([^)]+)\)/g,a={COMPLEX_TRIANGULATED_FACE:t.KindOfNode.NOD_GP,TESSELLATED_SOLID:t.KindOfNode.NOD_SolidNode,TESSELLATED_SHELL:t.KindOfNode.NOD_SolidNode,TESSELLATED_WIRE:t.KindOfNode.NOD_SurfacicNode,TESSELLATED_EDGE:t.KindOfNode.NOD_GP,TRIANGULATED_FACE:t.KindOfNode.NOD_GP,TESSELLATED_CONNECTING_EDGE:t.KindOfNode.NOD_GP,TESSELLATED_GEOMETRIC_SET:t.KindOfNode.NOD_ContainerNode,TESSELLATED_POINT_SET:t.KindOfNode.NOD_VertexNode},c={COMPLEX_TRIANGULATED_FACE:t.KindOfGP.GP_Face,TRIANGULATED_FACE:t.KindOfGP.GP_Face,TESSELLATED_EDGE:t.KindOfGP.GP_Edge,TESSELLATED_CONNECTING_EDGE:t.KindOfGP.GP_Edge,TESSELLATED_CURVE_SET:t.KindOfNode.GP_Edge};return t.extend(function(t,s){this._associatedDocument=t,this._stepTokenizeArgs=t.stepTokenizeArgs,this._representationType=e.XCAD_TESSELLATED_REPRESENTATION,this._stepRepresentationIndex=s;var i=[];t.stepTokenizeArgs(t.stepEntities[s.substring(1)],i),this._rootNodes=[],t.stepTokenizeArgs(i[1],this._rootNodes),this._verticelist={},this._associatedDocument.CoordSystem.Coord=!1,this._associatedDocument.CoordSystem.Origin=void 0,this._associatedDocument.CoordSystem.Axis=void 0,this._associatedDocument.CoordSystem.RefDir=void 0;for(var n=0;n<this._rootNodes.length;n++){var o=[];if(this._stepTokenizeArgs(this._associatedDocument.stepEntities[this._rootNodes[n].substring(1)],o),null!=o[1]){var r=o[1].replace("(","").replace(")",""),a=this._associatedDocument._stepGetEntityType(r.substring(1));if("AXIS2_PLACEMENT_3D"===a.first){this._stepTokenizeArgs(a.second,o),this._associatedDocument.CoordSystem.Coord=!0;var c=[],d=[],h=[];if(this._stepTokenizeArgs(this._associatedDocument.stepEntities[r.substring(1)],o),null!=o[1]&&null!=o[2]&&null!=o[3]){var u=this._associatedDocument._stepGetEntityType(o[1].substring(1));if("CARTESIAN_POINT"===u.first){var _=[];this._stepTokenizeArgs(u.second,_),this._stepTokenizeArgs(_[1],c),void 0===this._associatedDocument.CoordSystem.Origin&&(this._associatedDocument.CoordSystem.Origin=c)}if("DIRECTION"===(u=this._associatedDocument._stepGetEntityType(o[2].substring(1))).first){_=[];this._stepTokenizeArgs(u.second,_),this._stepTokenizeArgs(_[1],d),void 0===this._associatedDocument.CoordSystem.Axis&&(this._associatedDocument.CoordSystem.Axis=d)}if("DIRECTION"===(u=this._associatedDocument._stepGetEntityType(o[3].substring(1))).first){_=[];this._stepTokenizeArgs(u.second,_),this._stepTokenizeArgs(_[1],h),void 0===this._associatedDocument.CoordSystem.RefDir&&(this._associatedDocument.CoordSystem.RefDir=h)}}}}}!1===this._associatedDocument.CoordSystem.Coord&&(this._associatedDocument.CoordSystem.Origin=void 0,this._associatedDocument.CoordSystem.Axis=void 0,this._associatedDocument.CoordSystem.RefDir=void 0)},{_fillVerticesList:function(t){let e=this._associatedDocument.stepEntities[t],s=e.substr(e.indexOf("((")+1,e.indexOf("))")-2).match(r);this._verticelist[t]=[];let i=[],n=s.length;for(var a=0;a<n;a++)3===(i=s[a].substr(1,s[a].length-2).match(o)).length&&this._verticelist[t].push(i[0],i[1],i[2]),i=null},_processTriangleStrips:function(t,e,s){var i=e.substr(1,e.length-2).match(r),n=1===s.length;let a=i.length;for(let e=0;e<a;e++){let r=i[e].substr(1,i[e].length-2).match(o),a=r.length;for(let e=0;e<a;e++){let i=r[e];if(i-=1,t.stripTrianglesIndices.push(i),!n){let e=s[i].substr(1,s[i].length-2).match(o);t.setNormalAt(i,e[0],e[1],e[2]),e=null}}t.nbVertexPerStripTriangle.push(r.length),r=null}i=null},_processTriangleFans:function(t,e,s){var i=e.substr(1,e.length-2).match(r);if(null!==i)for(var n=1===s.length,a=0;a<i.length;a++){for(var c=i[a].substr(1,i[a].length-2).match(o),d=0;d<c.length;d++){var h=c[d]-1;if(t.fanTrianglesIndices.push(t.getFanTrianglesVertexPosition(h)),!n){var u=s[h].substr(1,s[h].length-2).match(o);t.setNormalAt(h,u[0],u[1],u[2])}}t.nbVertexPerFanTriangle.push(c.length)}},getChildren:function(t,e){var s=[];if(e){s=this._associatedDocument.stepEntities[t.substring(1)].substring(this._associatedDocument.stepEntities[t.substring(1)].indexOf("TESSELLATED_GEOMETRIC_SET(")+27,this._associatedDocument.stepEntities[t.substring(1)].indexOf("))")).match(/([^,]+)/g)}else{var i=[];this._stepTokenizeArgs(this._associatedDocument.stepEntities[t.substring(1)],i),this._stepTokenizeArgs(i[1],s)}return s},getChild:function(t,e){var s=[];this._stepTokenizeArgs(this._associatedDocument.stepEntities[t.substring(1)],s);var i=[];return this._stepTokenizeArgs(s[1],i),i[e]},getChildCount:function(t,e){var s=[];if(e){s=this._associatedDocument.stepEntities[t.substring(1)].substring(this._associatedDocument.stepEntities[t.substring(1)].indexOf("TESSELLATED_GEOMETRIC_SET(")+27,this._associatedDocument.stepEntities[t.substring(1)].indexOf("))")).match(/([^,]+)/g)}else{var i=[];this._stepTokenizeArgs(this._associatedDocument.stepEntities[t.substring(1)],i),this._stepTokenizeArgs(i[1],s)}return s.length},getAssociatedTransfo:function(t){var e=void 0,s=[];this._stepTokenizeArgs(this._associatedDocument.stepEntities[t.substring(1)],s);var i=[];this._stepTokenizeArgs(s[1],i);let o=this._associatedDocument._stepGetEntityType(i[0].substring(1));if("AXIS2_PLACEMENT_3D"===o.first){var r=[];this._stepTokenizeArgs(o.second,r),this._associatedDocument.CoordSystem.Coord=!0;var a=[],c=[],d=[];if(this._stepTokenizeArgs(this._associatedDocument.stepEntities[i[0].substring(1)],r),null!=r[1]&&null!=r[2]&&null!=r[3]){var h=this._associatedDocument._stepGetEntityType(r[1].substring(1));if("CARTESIAN_POINT"===h.first){var u=[];this._stepTokenizeArgs(h.second,u),this._stepTokenizeArgs(u[1],a)}if("DIRECTION"===(h=this._associatedDocument._stepGetEntityType(r[2].substring(1))).first){u=[];this._stepTokenizeArgs(h.second,u),this._stepTokenizeArgs(u[1],c)}if("DIRECTION"===(h=this._associatedDocument._stepGetEntityType(r[3].substring(1))).first){u=[];this._stepTokenizeArgs(h.second,u),this._stepTokenizeArgs(u[1],d)}var _=parseFloat(a[0]),l=parseFloat(a[1]),g=parseFloat(a[2]),E=new n.Matrix3,m=new n.Vector3(d[0],d[1],d[2]),T=new n.Vector3(c[0],c[1],c[2]),D=new n.Vector3;D.crossVectors(T,m),E.set(m.x,D.x,T.x,m.y,D.y,T.y,m.z,D.z,T.z),(e=new n.Matrix4).set(E.elements[0],E.elements[3],E.elements[6],_,E.elements[1],E.elements[4],E.elements[7],l,E.elements[2],E.elements[5],E.elements[8],g,0,0,0,1)}}return e},getGeomSet:function(t){var e=[];this._stepTokenizeArgs(this._associatedDocument.stepEntities[t.substring(1)],e);var s=[];return null!=e[3]&&this._stepTokenizeArgs(e[3].substring(1,e[3].length-1),s),s},getCircleData:function(t){throw"Error: not implemented method"},getConeData:function(t){throw"Error: not implemented method"},getCoordinateSystem:function(){return this._associatedDocument.CoordSystem},getCylinderData:function(t){throw"Error: not implemented method"},getVertexData:function(t){throw"Error: not implemented method"},getEdgeData:function(t){var e=new i;t=t.substring(1);var s=this._associatedDocument._stepGetEntityType(t);if("TESSELLATED_EDGE"===s.first||"TESSELLATED_CONNECTING_EDGE"===s.first){var n,o=[];if(this._stepTokenizeArgs(this._associatedDocument.stepEntities[t],o),null!=o[1]&&(n=o[1].substring(1)),"COORDINATES_LIST"===this._associatedDocument._stepGetEntityType(n).first){void 0===this._verticelist[n]&&this._fillVerticesList(n);for(var r=o[3].replace("(","").replace(")","").split(","),a=0;a<r.length;a++){parseInt(r[a]);for(var c=0;c<3;c++)e.vertices[3*a+c]=this._verticelist[n][3*(r[a]-1)+c]}}}return e},getFaceData:function(t){var e=new s,i=this._associatedDocument._stepGetEntityType(t.substring(1));switch(""+i.first){case"COMPLEX_TRIANGULATED_FACE":case"TRIANGULATED_FACE":var n=[];this._stepTokenizeArgs(i.second,n);var a=n[1].substring(1);void 0===this._verticelist[a]&&this._fillVerticesList(a);var c=n[3].substr(1,n[3].length-2).match(r);if(1===c.length)for(var d=c[0].substr(1,c[0].length-2).match(o),h=0;h<n[2];h++)e.normals.push(d[0],d[1],d[2]);var u=n[5].substr(1,n[5].length-2).match(/([^,]+)/g);if(null!=u)for(h=0;h<u.length;h++)for(var _=3*(u[h]-1),l=0;l<3;l++)e.vertices[3*h+l]=this._verticelist[a][_+l];else e.vertices=this._verticelist[a];if(n[6].length>2&&this._processTriangleStrips(e,n[6],c),null!=n[7]&&n[7].length>2&&this._processTriangleFans(e,n[7],c),e.vertices.length!=e.normals.length){var g=[],E=[],m=[];if(0!=e.stripTrianglesIndices.length&&(m=new Set(e.stripTrianglesIndices)),0!=e.fanTrianglesIndices.length&&(m=new Set([...m,...e.fanTrianglesIndices])),0!=e.singleTrianglesIndices.length&&(m=new Set([...m,...e.singleTrianglesIndices])),null!=m)for(_=Array.from(m),h=0;h<_.length;h++)g[3*_[h]]=e.vertices[3*_[h]],g[3*_[h]+1]=e.vertices[3*_[h]+1],g[3*_[h]+2]=e.vertices[3*_[h]+2],E[3*_[h]]=e.normals[3*_[h]],E[3*_[h]+1]=e.normals[3*_[h]+1],E[3*_[h]+2]=e.normals[3*_[h]+2];e.vertices=g,e.normals=E}}return e},getGPType:function(t){var e=this._associatedDocument._stepGetEntityType(t.substring(1));return c[e.first]},getNodeBoundingSphere:function(t){throw"Error: not implemented method"},getNodeColor:function(t){t=t.substring(1);var e=this._associatedDocument.overridingFaceColors[t];return void 0!==e?e:this._associatedDocument.bodyColors[t]},getNodeOrientationMatrix:function(t){throw"Error: not implemented method"},getNodeType:function(t){var e=this._associatedDocument._stepGetEntityType(t.substring(1));return a[e.first]},getNodeUID:function(t){throw"Error: not implemented method"},getPlaneData:function(t){throw"Error: not implemented method"},getPointData:function(t){throw"Error: not implemented method"},getPolyLineData:function(t){return t=t.substring(1),[this._associatedDocument.curveFont[t],this._associatedDocument.curveWidth[t]]},getRootNode:function(t){var e=this._rootNodes[t];if("[COMPLEX_STEP_ENTITY]"===this._associatedDocument._stepGetEntityType(e.substring(1)).first){var s=e;e=this._associatedDocument.stepGetNodeIdFromCpxEntity(s.substring(1))}return e},getRootNodesCount:function(){return this._rootNodes.length},getSAG:function(t){throw"Error: not implemented method"},getSphereData:function(t){throw"Error: not implemented method"},isIndexed:function(){return!0}})});