define("DS/DELPPWRequirementViewModule/RequirementViewUI",["UWA/Core"],function(e){"use strict";return function(t,n,o,i,r){let l,a,d,c,s=i.getComponent("WUXDockAreaEnum"),u=i.getComponent("WUXFrameWindowsManager").getFrameWindow(t.getAppContext()).getImmersiveFrame();return{init:function(c,u,g){e.is(c,"string")?(d=c,function(c,u){let g=t.getElement(),f=i.createElement("div",{class:"tree-list-container"}),m=e.is(r)?r.getIconURLFromKey(u):"";f.inject(g),l=r.getNLSValue("View."+c+".Title")||"",n.loadDocument(o.getWUXNodeModel()),n.getContent().inject(f),(a=i.create("Panel",{position:{at:"right"},minWidth:300,minHeight:250,height:250,title:l,icon:m,side:s.RightDockArea,currentDockArea:s.RightDockArea,identifier:"panel-"+d,content:g,resizableFlag:!0,closeButtonFlag:!0,useBordersFlag:!0,visibleFlag:!1,collapsibleFlag:!0,verticallyStretchableFlag:!1})).close=function(){e.is(d)?t.notify("toggleCmdCheckHeaderState",{cmdName:d,cmdState:!1}):a.hide()}}(u,g)):t.debug("RequirementViewUI","Command name is not defined to create action UI.")},destroy:function(){o.emptyNodeModel(),e.is(a)&&(a.destroy(),a=void 0)},toggle:function(t){var n;(c=t.state)&&!a.visibleFlag?(a.immersiveFrame=u,n=u.getDockingElement(a.currentDockArea),e.is(n)&&(n.collapseDockingZoneFlag=!1),a.show()):a.hide()},updateTitle:function(t){e.is(t)&&""!==t?a.title=l+" - "+t:a.title=l}}}}),define("DS/DELPPWRequirementViewModule/RequirementViewModule",["UWA/Core","DS/DELPPWRequirementViewModule/RequirementViewUI"],function(e,t){"use strict";return{behaviors:["TreeListViewBehavior","ProductImplementBehavior","WUXNodeModelBehavior","UXFactoryBehavior","LinkBehavior","ModelBehavior","SelectionBehavior","SearchBehavior","ResourceBehavior","ViewBehavior","TaggerBehavior"],creator:function(n,o,i,r,l,a,d,c,s,u,g,f){let m,h,p,y,v=[],A=[],R=function(t){return!(!e.is(t)||!e.is(t.get))&&A.indexOf(t.get("type"))>-1},D=function(){let t,i,l=c.getSelections(),s=function(n){let i;e.is(h)&&Array.isArray(n)&&n.length>0&&(r.prepareUpdate(),n.forEach(function(n){if(R(n)&&n.get("from")===t.get("PID")&&(i=d.getReference(n.get("to")),e.is(i)&&!r.isNodeAdded(i.get("PID")))){const e=o.getReferenceNodeOptions(i);e.children=[],y=r.addNodeModel(e);const t=!d.needToQueryForChildren(i);r.updateNodeState(y,t?"collapsed":"partiallyExpanded")}}),r.pushUpdate())};r.emptyNodeModel(),e.is(l,"array")&&1===l[1].length&&(i=l[1][0],e.is(i)?(h=i,t=d.getReferenceModel(i),e.is(t)?(m.updateTitle(t.get("PLMEntity.V_Name")),a.getConnectionsByModel(t,null,{silentMode:!0,onComplete:s,forceDBMode:a.isAuthoringMode()})):n.debug("Reference Model is empty for PID:"+i)):(h=null,m.updateTitle("")))};return{listenTo:function(){return{select:this.reloadUI,connectionAdded:this.onAddConnection,refreshImpacted:this.reloadUI,ActionRemove:this.onActionRemove,AddToAuxilliaryView:this.AddToAuxilliaryView,connectionRemoved:this.onRemoveConnection}},onStart:function(e){let i,a=(e=e||{}).moduleIcon;v=e.pprTypes,A=e.linkTypes,p=e.relatedCmdId,a=e.moduleIcon,i=u.getNLSValue(p),(m=new t(n,o,r,l,u)).init(p,i,a),m.toggle({state:!0}),D()},onStop:function(){e.is(m)&&(m.destroy(),m=void 0),h=null},AddToAuxilliaryView:function(e){e.map(e=>e.referencePID).forEach(function(e){let t=d.getReference(e);n.notify("addToAuxiliaryView",t)})},reloadUI:function(t){e.is(t)&&D()},onAddConnection:function(t){let n=function(t){let n,o,i,l;R(t)&&(i=t.get("to"),n=c.getSelections(),e.is(n,"array")&&1===n[1].length&&(o=d.getReferenceModel(n[1][0]),e.is(o)&&o.get("PID")!==i&&(l=d.getReferenceModel(i),e.is(l)&&(r.isNodeAdded(l.get("PID"))||r.addNode(l,{loadChildren:!1})))))};e.is(t,"array")?t.forEach(function(e){n(e)}):n(t)},onRemoveConnection:function(t){var n=[],o=Array.isArray(t)?t:[t];r.withTransactionUpdate(function(){o.forEach(function(t){var o,i=t.get("to");R(t)&&(o=d.getReferenceModel(i),e.is(o)&&n.push(o.get("PID")))}),n.length>0&&r.removeNodes(n)})},onActionRemove:function(){let t,o=c.getSelections();e.is(o,"array")&&o[0].length>0&&e.is(1===o[1].length)&&(t=d.getReferenceModel(o[1]),a.getConnectionsByModel(t,null,{onComplete:function(t){if(e.is(t,"array")&&t.length>0)for(let e=0;e<o[0].length;e++)t.forEach(function(t){t.get("to")===o[0][e]&&a.deleteConnection(t.get("PID"))})},onFailure:function(){n.debug("Getting connections failed")}}))}}}}});