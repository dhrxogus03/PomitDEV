define("DS/xCitySecurityUtils/InputCleanup",["UWA/Core","UWA/String"],function(n,e){"use strict";return{escapeHtmlTags:function(r){if(!n.is(r,"string")||""===r)return r;return e.escapeHTML(r,!0)}}}),define("DS/xCitySecurityUtils/AssetsVerification",["UWA/Core"],function(n){"use strict";var e=new RegExp("<.+>","i"),r=new RegExp("EPSG:[0-9]{4,6}");return{checkReferentialSalubrity:function(i){if(!n.is(i.name,"string")||""===i.name)return new Error("Invalid referential name (should be a non-empty string)");if(e.test(i.name))return new Error("Invalid referential name (should not contain HTML markup).");if(n.is(i.description,"string")&&""!==i.description&&e.test(i.description))return new Error("Invalid referential description (should not contain HTML markup).");var t=r.test(i.projection);return n.is(i.projection,"string")&&""!==i.projection&&t?void 0:new Error("Invalid EPSG code")},checkDatasetSalubrity:function(r){if(!n.is(r.referentialUuid,"string")||""===r.referentialUuid)return new Error("Invalid referential name (should be a non-empty string).");if(n.is(r.name,"string")&&""!==r.name){if(e.test(r.name))return new Error("Invalid dataset name (should not contain HTML markup).")}else if(!r.customization||!0!==r.customization.defaultMap)return new Error("Invalid dataset name (should be a non-empty string).");if(n.is(r.description,"string")&&""!==r.description&&e.test(r.description))return new Error("Invalid dataset description (should not contain HTML markup).")},checkSourceSalubrity:function(r){if(!n.is(r.referentialUuid,"string")||""===r.referentialUuid)return new Error("Invalid referential identifier (should be a non-empty string).");if(!n.is(r.name,"string")||""===r.name)return new Error("Invalid name (should be a non-empty string).");if(e.test(r.name))return new Error("Invalid name (should not contain HTML markup).");if(n.is(r.description,"string")&&""!==r.description&&e.test(r.description))return new Error("Invalid description (should not contain HTML markup).")},checkExperienceSalubrity:function(r){if(!n.is(r.type,"string")||""===r.type)return new Error("Invalid experience type (should be a non-empty string)");if(!n.is(r.name,"string")||""===r.name)return new Error("Invalid experience name (should be a non-empty string)");if(e.test(r.name))return new Error("Invalid experience name (should not contain HTML markup).");if(n.is(r.description,"string")&&""!==r.description&&e.test(r.description))return new Error("Invalid experience description (should not contain HTML markup).")}}});