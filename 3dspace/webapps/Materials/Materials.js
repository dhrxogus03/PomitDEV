define("DS/Materials/ShaderDynamicPrefixBuilder",["DS/Mesh/ThreeJS_Base"],function(e){"use strict";var t=function(t){const s=e.MaterialToUse;switch(t){case s.originalMaterial:case s._fakeOriginalMaterial:return"ORIGINAL_MATERIAL";case s.normalMaterial:return"NORMAL_MATERIAL";case s.depthMaterial:return"DEPTH_MATERIAL";case s.normalDepthIoRRoughnessMaterial:return"NORMAL_DEPTH_IOR_ROUGHNESS_MATERIAL";case s.shadowMapDepthMaterial:return"SHADOWMAP_MATERIAL";case s.highlightMaterial:return"HIGHLIGHT_MATERIAL";case s.pickingMaterial:return"PICKING_MATERIAL";case s.pickingMaterialInstancing:return"PICKING_INSTANCING_MATERIAL";case s.oitAccumMaterial:return"OIT_ACCUM_MATERIAL";case s.oitRevealMaterial:return"OIT_REVEAL_MATERIAL";case s.ZOnlyMaterial:return"ZONLY_MATERIAL";case s.depthRGBAMaterial:return"DEPTH_RGBA_MATERIAL";case s.decalNormalStencilDepthMaterial:return"DECAL_NORMAL_STENCIL_DEPTH_MATERIAL";case s.normalDepthMaterial:return"NORMAL_DEPTH_MATERIAL";case s.transparentShadowMaterial:return"TRANSPARENT_SHADOWMAP_MATERIAL";case s.texCoordMaterial:return"TEXTURE_COORDINATES_MATERIAL";case s.gpuPositionMaterial:return"GPU_POSITION_MATERIAL";default:throw"Invalid Material to use "+t}};function s(e){return["#define "+t(e.materialToUse),e.selectionMaterial?"#define SELECTION_MATERIAL":"",e.mobile?"#define MOBILE_MODE":"",e.mobileDevice?"#define MOBILE_DEVICE_MODE":"",e.vrDevice?"#define VR_DEVICE_MODE":"",e.appleDevice?"#define APPLE_DEVICE_MODE":"",e.noCompositing?"#define NO_COMPOSITING":"",e.mobileHL?"#define MOBILE_HIGHLIGHT_MODE":"",e.primitiveHighlight?"#define PRIMITIVE_HIGHLIGHT":"",e.deferrable?"#define DEFERRABLE_MATERIAL":"",e.politeHighlight?"#define HIGHLIGHT_POLITE 1":"#define HIGHLIGHT_POLITE 0",e.noZObject?"#define NOZ_OBJECT":"",e.largeScale?"#define MODELVIEW_GPU":"#define MODELVIEW_CPU",e.useNormalMatrix?"#define USE_NORMAL_MATRIX":"",e.depthDebugMaterial?"#define DEBUG_DEPTH":"",e.normalDebugMaterial?"#define DEBUG_NORMAL":"",e.shadowMapDebugMaterial?"#define DEBUG_SHADOW":"",e.geomUVDebug?"#define DEBUG_GEOM_UVS":"",e.mappingUVDebug?"#define DEBUG_MAPPING_UVS":"",e.geomUV2Debug?"#define DEBUG_GEOM_UV2S":"",e.mappingUV2Debug?"#define DEBUG_MAPPING_UV2S":"",e.useLighting?"#define USE_LIGHTING":"",e.skipTranspar?"#define SKIP_TRANSPARENT":"",e.extFragDepth?"#define FRAG_DEPTH_EXT":"",e.gammaInput?"#define GAMMA_INPUT":"",e.gammaOutput?"#define GAMMA_OUTPUT":"",e.simpleGamma?"#define SIMPLE_GAMMA":"","#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_DIR_IBL_LIGHTS "+e.maxDirIBLLights,"#define MAX_DIR_PHONG_LIGHTS "+e.maxDirPhongLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_SPHERE_LIGHTS "+e.maxSphereLights,"#define MAX_TUBE_LIGHTS "+e.maxTubeLights,"#define MAX_DISK_LIGHTS "+e.maxDiskLights,"#define MAX_RECTANGLE_LIGHTS "+e.maxRectangleLights,"#define MAX_IES_LIGHTS "+e.maxIESLights,e.lightMap?"#define USE_LIGHTMAP":"","#define MAX_SHADOWS "+e.maxShadows,"#define MAX_SHADOWS_DIR "+e.maxDirShadows,"#define MAX_SHADOWS_DIR_IBL "+e.maxDirIBLShadows,"#define MAX_SHADOWS_SPOT "+e.maxSpotShadows,"#define MAX_SHADOWS_CUBE "+e.maxShadowsCube,e.shadowMapEnabled?"#define USE_SHADOWMAP":"","#define "+e.shadowMapTypeDefine,e.shadowMapType>-1?"#define SHADOW_MAP_TYPE "+e.shadowMapType:"","#define "+e.shadowMapQualityDefine,e.shadowMapQuality>-1?"#define SHADOW_MAP_QUALITY"+e.shadowMapQuality:"",e.shadowMapCubeEnabled?"#define USE_SHADOWMAP_CUBE":"",e.transparentShadowEnabled?"#define USE_TRANSPARENTSHADOWMAP":"",e.uintESM?"#define USE_UINT_ESM":"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.useUV?"#define NEEDS_UVTOUSE":"",0==e.mappingUseFragment?"#define USE_MAPPING_OPERATOR_VERTEX":"",1==e.mappingUseFragment?"#define USE_MAPPING_OPERATOR_FRAGMENT":"",e.mappingType>-1?"#define MAPPING_OPERATOR":"",e.needTangentBinormal?"#define USE_TANGENT_BINORMAL":"",e.clipPlanesEnabled?"#define USE_CLIPPINGPLANES":"",e.useClippingCylinder?"#define USE_CLIPPINGCYLINDER":"","#define MAX_POLYGON_SIZE "+e.maxPolygonSize,e.maxPolyLineSize>0?"#define USE_CLIPPINGPOLYGON":"",e.maxPolyLineSize>0?"#define NB_CLIPPINGPOLYGON "+e.maxNbPolyLine:"",e.maxScissorSize>0?"#define USE_SCISSORPOLYGON":"",e.maxScissorSize>0?"#define NB_SCISSOR "+e.maxNbScissor:"",e.fogViewMode?"#define USE_BACKGROUNDVIEWMODE_FOG":"",e.lowlightViewMode?"#define USE_BACKGROUNDVIEWMODE_LOWLIGHT":"",e.wrapAround?"#define WRAP_AROUND":"",(e.doubleSided,"#define DOUBLE_SIDED"),e.flipSided?"#define FLIP_SIDED":"",e.vertexColors||e.objectVertexColors?"#define USE_COLOR":"",e.objectVertexColors?"#define USE_OBJECT_COLOR":"",e.gpuTangentBinormal?"#define GPU_TANGENT_BINORMAL":"",e.specgloss?"#define SPECGLOSS":"",e.specglossNRE?"#define SPECGLOSS_NRE":"",e.dspbr?"#define DSPBR":"",e.dspbr19x?"#define DSPBR19x":"",e.dspbr21x?"#define DSPBR21x":"",e.dspbr22x?"#define DSPBR22x":"",e.dspbr25x?"#define DSPBR25x":"",e.NRECompatibility?"#define NRE_COMPATIBILITY":"",e.fromGLTF?"#define PBR_FROM_GLTF "+e.fromGLTF:"",e.isDecal?"#define DECAL":"",e.useOIT?"#define USE_OIT":"",e.PDSFX?"#define PDSFX":"",e.pdsfxUseMap?"#define PDSFX_USE_MAP":"",e.pdsfxUseDiscard?"#define PDSFX_USE_DISCARD":"",e.refractionRatioMap?"#define USE_REFRACTIONRATIOMAP":"",e.sslrefractionEnabled?"#define SSLREFRACTION_ENABLED":"",e.sslreflectionEnabled?"#define SSLREFLECTION_ENABLED":"",e.useSSAO?"#define USE_SSAO":"",e.isMultiInstanced?"#define IS_MULTI_INSTANCED":"",e._definePickingInstancing?"#define PICKING_INSTANCING":"",e.specialPickingInstancing?"#define SPECIAL_PICKING_INSTANCING":"",e.envMap?"#define USE_ENVMAP":"",e.envMap2?"#define USE_ENVMAP_2":"",e.useHDR?"#define HDR":"",e.useLatLongMap?"#define LATLONG_MAP":"",e.useAmbianceV2?"#define AMBIANCE_V2":"",e.useHDRFloat?"#define HDR_FLOAT":"",e.useSRGB?"#define sRGB":"",1===e.envMapping?"#define USE_LIGHTPROBEMAP":"",2===e.envMapping?"#define USE_LATLONGMAP":"",e.useFiniteEnvMap?"#define USE_FINITE_ENVMAP":"",e.useIBLColor?"#define USE_IBL_LIGHT_COLOR":"",e.reflectionProbes?"#define USE_REFLECTION_PROBE":"",e.dashedLine?"#define USE_DASHEDLINE":"",e.cpuPattern?"#define CPU_PATTERN":"",e.worldSizePattern?"#define WORLD_SIZE_PATTERN":"",e.invertedPattern?"#define DASHEDLINE_INVERTED":"",e.patternSize?"#define PATTERN_LENGTH "+e.patternSize:"",e.wideLine?"#define USE_WIDELINE":"",e.wideLine&&e.polygonBorderMode?"#define USE_POLYGON_BORDER_MODE":"",e.wideLine&&e.linejoin?"#define USE_"+e.linejoin.toUpperCase()+"JOIN":"",e.wideLine&&e.linecap?"#define USE_"+e.linecap.toUpperCase()+"CAP":""].join("\n")}return{_FragmentPrefixBuilder:function(t){return e.SplitTrimStickString([s(t),t.alphaTest?"#define ALPHATEST "+t.alphaTest.toFixed(5):"",t.discardOrOpaque?"#define DISCARD_OR_OPAQUE":"",t.inlinedPostProActivated?"#define INLINED_POSTPROCESS":"",6==t.inlinedPostProTonemapping?"#define TONEMAP_PHOTOGRAPHIC":"",t.reflectivityEnvMap?"#define REFLECTIVITY_ENVMAP":"",1===t.lightMapMode?"#define LIGHTMAP_IRRADIANCE_MODE":"",t.lightMapMappingType>-1?"#define LIGHTMAP_MAPPING_OPERATOR":"",t.lightMapLinear?"#define USE_LIGHTMAP_LINEAR":"",t.phongFirstDir?"#define PHONG_FIRST_DIR_ONLY":"",void 0!==t.textureBlending?"#define TEXTURE_BLENDING "+t.textureBlending:"","#define TEXTURE_FORMAT "+t.textureFormat,t.bumpMap?"#define USE_BUMPMAP":"",t.bumpMap&&t.bumpScaleMap?"#define USE_BUMPSCALEMAP":"",t.bumpMap&&t.bumpScaleMulCoef&&t.bumpScaleAddCoef?"#define USE_BUMPSCALE_COEFFICIENTS":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.normalMulCoef&&t.normalAddCoef?"#define USE_NORMAL_COEFFICIENTS":"",t.normalMapFlipY?"#define NORMALFLIPY":"",t.normalMap&&t.normalScaleMap?"#define USE_NORMALSCALEMAP":"",t.normalMap&&t.normalScaleMulCoef&&t.normalScaleAddCoef?"#define USE_NORMALSCALE_COEFFICIENTS":"",t.map?"#define USE_MAP":"",t.mapHDR?"#define USE_MAP_HDR":"",t.diffuseMulCoef&&t.diffuseAddCoef?"#define USE_DIFFUSE_COEFFICIENTS":"",t.diffuseBorderColorU?"#define USE_DIFFUSEMAP_BORDER_COLOR_U":"",t.diffuseBorderColorV?"#define USE_DIFFUSEMAP_BORDER_COLOR_V":"",t.map&&t.useAlphaFromDiffuseMap?"#define USE_ALPHA_FROM_MAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularMulCoef&&t.specularAddCoef?"#define USE_SPECULAR_COEFFICIENTS":"",t.specularMapLinear?"#define SPECULAR_LINEAR":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.metalnessMulCoef&&t.metalnessAddCoef?"#define USE_METALNESS_COEFFICIENTS":"",t.specularContribMap?"#define USE_SPECULARCONTRIBMAP":"",t.specularContribMulCoef&&t.specularContribAddCoef?"#define USE_SPECULARCONTRIB_COEFFICIENTS":"",t.useEmission?"#define USE_EMISSION":"",t.emissionColorMap?"#define USE_EMISSIONCOLORMAP":"",t.emissionColorMulCoef&&t.emissionColorAddCoef?"#define USE_EMISSIONCOLOR_COEFFICIENTS":"",t.emissionNormalized?"#define USE_NORMALIZED_EMISSION":"",t.emissionColorMapLinear?"#define EMISSION_LINEAR":"",t.useTransparency?"#define USE_TRANSPARENCY":"",t.transparencyMap?"#define USE_TRANSPARENCYMAP":"",t.transparencyMulCoef&&t.transparencyAddCoef?"#define USE_TRANSPARENCY_COEFFICIENTS":"",t.opacityMap?"#define USE_OPACITYMAP":"",t.opacityBorderColorU?"#define USE_OPACITYMAP_BORDER_COLOR_U":"",t.opacityBorderColorV?"#define USE_OPACITYMAP_BORDER_COLOR_V":"",t.opacityMulCoef&&t.opacityAddCoef?"#define USE_OPACITY_COEFFICIENTS":"",t.dspbrWithTranslucency?"#define USE_TRANSLUCENCY":"",t.translucencyMap?"#define USE_TRANSLUCENCYMAP":"",t.translucencyMulCoef&&t.translucencyAddCoef?"#define USE_TRANSLUCENCY_COEFFICIENTS":"",t.translucencyColorMap?"#define USE_TRANSLUCENCY_COLOR_MAP":"",t.translucencyColorMapLinear?"#define TRANSLUCENCY_COLOR_LINEAR":"",t.translucencyColorMulCoef&&t.translucencyColorAddCoef?"#define USE_TRANSLUCENCY_COLOR_COEFFICIENTS":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.glossinessMap?"#define USE_GLOSSINESSMAP":"",t.roughnessMulCoef&&t.roughnessAddCoef?"#define USE_ROUGHNESS_COEFFICIENTS":"",t.glossinessMulCoef&&t.glossinessAddCoef?"#define USE_GLOSSINESS_COEFFICIENTS":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.anisotropyMulCoef&&t.anisotropyAddCoef?"#define USE_ANISOTROPY_COEFFICIENTS":"",t.anisotropyAngleMap?"#define USE_ANISOTROPYANGLEMAP":"",t.anisotropyAngleMulCoef&&t.anisotropyAngleAddCoef?"#define USE_ANISOTROPYANGLE_COEFFICIENTS":"",t.sheen?"#define USE_SHEEN":"",t.sheenMap?"#define USE_SHEEN_MAP":"",t.sheenMulCoef&&t.sheenAddCoef?"#define USE_SHEEN_COEFFICIENTS":"",t.sheenColorMap?"#define USE_SHEEN_COLOR_MAP":"",t.sheenColorMulCoef&&t.sheenColorAddCoef?"#define USE_SHEEN_COLOR_COEFFICIENTS":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESS_MAP":"",t.sheenRoughnessMulCoef&&t.sheenRoughnessAddCoef?"#define USE_SHEEN_ROUGHNESS_COEFFICIENTS":"",t.sheenMode?"#define "+t.sheenMode:"",t.sheenColorMapLinear?"#define SHEEN_COLOR_LINEAR":"",t.specGlossFlakes?"#define USE_SPECGLOSS_FLAKES":"",t.dspbrFlakes?"#define USE_DSPBR_FLAKES":"",t.specGlossFlakes&&t.flakesMode<2?"#define ADVANCED_FLAKES_BLENDING":"",t.specGlossFlakes&&t.flakesMode<2?"#define ADVANCED_PRESENCE_NOISE":"",t.specGlossFlakes&&t.flakesMode<1?"#define FLAKES_NORMAL_PERTURBATION":"",t.specGlossFlakes&&t.flakesMode<1?"#define PEARL_FLAKES_ACTIVATED":"",t.dspbrFlakes&&0===t.flakesMode?"#define DSPBR_FLAKES_FULL_GRID":"",t.dspbrFlakes&&t.flakesMode<=1?"#define DSPBR_FLAKES_THREE_LAYERS":"",t.dspbrFlakes&&2===t.flakesMode?"#define DSPBR_FLAKES_TWO_LAYERS":"",t.dspbrFlakes&&3===t.flakesMode?"#define DSPBR_FLAKES_ONE_LAYER":"",t.flakesCoverageMap?"#define USE_FLAKESCOVERAGE_MAP":"",t.flakesCoverageMulCoef&&t.flakesCoverageAddCoef?"#define USE_FLAKESCOVERAGE_COEFFICIENTS":"",t.flakesRoughnessMap?"#define USE_FLAKESROUGHNESS_MAP":"",t.flakesRoughnessMulCoef&&t.flakesRoughnessAddCoef?"#define USE_FLAKESROUGHNESS_COEFFICIENTS":"",t.flakesColorMap?"#define USE_FLAKESCOLOR_MAP":"",t.flakesColorMulCoef&&t.flakesColorAddCoef?"#define USE_FLAKESCOLOR_COEFFICIENTS":"",t.flakesSizeMap?"#define USE_FLAKESSIZE_MAP":"",t.flakesSizeMulCoef&&t.flakesSizeAddCoef?"#define USE_FLAKESSIZE_COEFFICIENTS":"",t.flakesColorMapLinear?"#define FLAKES_LINEAR":"",t.flipFlop?"#define USE_FLIPFLOP":"",t.flipFlopColorMap?"#define USE_FLIPFLOP_COLOR_MAP":"",t.flipFlopColorMulCoef&&t.flipFlopColorAddCoef?"#define USE_FLIPFLOP_COLOR_COEFFICIENTS":"",t.flipFlopColorMapLinear?"#define FLIPFLOP_COLOR_LINEAR":"",t.flipFlopMap?"#define USE_FLIPFLOP_MAP":"",t.flipFlopMulCoef&&t.flipFlopAddCoef?"#define USE_FLIPFLOP_COEFFICIENTS":"",t.clearCoat?"#define CLEAR_COAT":"",t.clearCoatMap?"#define CLEAR_COAT_MAP":"",t.clearCoatMulCoef&&t.clearCoatAddCoef?"#define USE_CC_COEFFICIENTS":"",t.clearCoatColorMap?"#define CLEAR_COAT_COLORMAP":"",t.clearCoatColorMulCoef&&t.clearCoatColorAddCoef?"#define USE_CC_COLOR_COEFFICIENTS":"",t.clearCoatNormalMap?"#define CLEAR_COAT_NORMALMAP":"",(t.clearCoatNormalMap||t.orangePeel)&&t.clearCoatNormalMulCoef&&t.clearCoatNormalAddCoef?"#define USE_CC_NORMAL_COEFFICIENTS":"",t.clearCoatNormalMapFlipY?"#define CLEAR_COAT_NORMALMAPFLIPY":"",t.clearCoatRoughnessMap?"#define USE_CC_ROUGHNESSMAP":"",t.coatingGlossinessMap?"#define USE_CC_GLOSSINESSMAP":"",t.coatingGlossinessMulCoef&&t.coatingGlossinessAddCoef?"#define USE_CC_GLOSSINESS_COEFFICIENTS":"",t.clearCoatRoughnessMulCoef&&t.clearCoatRoughnessAddCoef?"#define USE_CC_ROUGHNESS_COEFFICIENTS":"",t.orangePeel?"#define USE_ORANGE_PEEL":"",t.clearCoatColorMapLinear?"#define CLEARCOAT_LINEAR":"",t.subsurface?"#define USE_SUBSURFACE":"",t.sssLUT?"#define USE_SSSLUT":"",t.thickness?"#define USE_THICKNESS":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.thicknessAddCoef&&t.thicknessMulCoef?"#define USE_THICKNESS_COEFFICIENTS":"",t.envMapSheen?"#define USE_ENVMAP_SHEEN":"",t.envMapDiffuse?"#define USE_ENVMAP_DIFFUSE":"",t.envMapHDR?"#define USE_ENVMAP_HDR":"",t.envMapRGBHDR?"#define USE_ENVMAP_RGB_HDR":"",t.envMapRGBsRGB?"#define USE_ENVMAP_RGB_SRGB":"",t.thinWalled?"#define THIN_WALLED":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCE_MAP":"",t.iridescenceAddCoef&&t.iridescenceMulCoef?"#define USE_IRIDESCENCE_COEFFICIENTS":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESS_MAP":"",t.iridescenceThicknessAddCoef&&t.iridescenceThicknessMulCoef?"#define USE_IRIDESCENCE_THICKNESS_COEFFICIENTS":"",t.instancingMeshSelectionMode?"#define INSTANCING_MESH_SELECTION":"",t.isFromGAS?"#define PBR_FROM_GAS":"",t.metal?"#define METAL":""].join("\n"))},_VertexPrefixBuilder:function(t){return e.SplitTrimStickString([s(t),t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals?"#define USE_MORPHNORMALS":"",t.fixedSize?"#define FIXED_SIZE":"",t.billboard?"#define BILLBOARD":"",t.skinning?"#define USE_SKINNING":"",t.useEulerAngles?"#define USE_SKINNING_ANGLES":"",t.skinningMapWidth&&!t.isMultiInstanced?"#define N_BONE_PIXEL_X "+t.skinningMapWidth.toFixed(1):"",t.skinningMapHeight&&!t.isMultiInstanced?"#define N_BONE_PIXEL_Y "+t.skinningMapHeight.toFixed(1):"",t.skinningInstancingMapsInfo&&t.isMultiInstanced?"#define NB_INSTANCING_SKIN_MAPS "+t.skinningInstancingMapsInfo.nbTextures+"\n#define NB_BONES "+t.skinningInstancingMapsInfo.nbBones.toFixed(1)+"\n#define MAX_MAP_SIZE "+t.skinningInstancingMapsInfo.maxTextureSize.toFixed(1)+"\n#define LAST_INSTANCING_SKIN_MAP_SIZE_X "+t.skinningInstancingMapsInfo.lastTextureSizeX.toFixed(1)+"\n#define LAST_INSTANCING_SKIN_MAP_SIZE_Y "+t.skinningInstancingMapsInfo.lastTextureSizeY.toFixed(1)+"\n":"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.map?"#define USE_MAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.glossinessMap?"#define USE_GLOSSINESSMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.anisotropyAngleMap?"#define USE_ANISOTROPYANGLEMAP":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.displacementMap&&t.displacementAddCoef&&t.displacementMulCoef?"#define USE_DISPLACEMENT_COEFFICIENTS":"",t.dspbrFlakes?"#define USE_DSPBR_FLAKES":"",t.specGlossFlakes?"#define USE_SPECGLOSS_FLAKES":"",t.orangePeel?"#define USE_ORANGE_PEEL":"",t.subsurface?"#define USE_SUBSURFACE":"",t.compressedVertices?"#define COMPRESSED_VERTICES":"",t.compressedNormals?"#define COMPRESSED_NORMALS":"",t.compressedUVs?"#define COMPRESSED_UVS":"",t.compressedColors?"#define COMPRESSED_COLORS":""].join("\n"))}}}),define("DS/Materials/DeferredCaches",["DS/Mesh/ThreeJS_Base","WebappsUtils/WebappsUtils"],function(e,t){"use strict";var s=new Map,i=new Map,a=new Map,r=new Map,n=new Map,o=new Map,l=new Map,h=t.getWebappsAssetUrl("Visualization","")+"textures/predefinedMaterials/",p=[],d=function(e){this.material=e,this.usedBy=new Set};d.prototype.get=function(e){return this.usedBy.add(e.id),this.material};return{_loadPredefinedMaterialTextures:function(t,s,i){if(p.length>0||i)return p;p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_Brass_Albedo.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(220,213,156)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_Brass_roughness.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(.4)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_BrushedSteel_Albedo.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(170,170,170)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_BrushedSteel_Anisotropy.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(.5)),p.push(e.ImageUtils.loadTexture(h+"Appearance_BrushedSteel_Normal.png",void 0,s,null,!0,!1,t).withSubstituteTexture(.5,.5,1)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_BrushedSteel_Roughness.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(.15)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_CastAluminum_Albedo.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(170,170,170)),p.push(e.ImageUtils.loadTexture(h+"Appearance_CastAluminum_Normal.png",void 0,s,null,!0,!1,t).withSubstituteTexture(.5,.5,1)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_CastAluminum_Roughness.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(.6)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_CastSteel_Albedo.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(136,136,136)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_CastSteel_Roughness.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(.4)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_Copper_Albedo.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(210,184,177)),p.push(e.ImageUtils.loadTexture(h+"Appearance_Copper_Normal.png",void 0,s,null,!0,!1,t).withSubstituteTexture(.5,.5,1)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_Copper_Roughness.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(.4)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_MachinedAluminum_Albedo.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(170,170,170)),p.push(e.ImageUtils.loadTexture(h+"Appearance_MachinedAluminum_Normal.png",void 0,s,null,!0,!1,t).withSubstituteTexture(.5,.5,1)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_MachinedAluminum_Roughness.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(.6)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_MachinedStainlessSteel_Albedo.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(170,170,170)),p.push(e.ImageUtils.loadTexture(h+"Appearance_MachinedStainlessSteel_Normal.png",void 0,s,null,!0,!1,t).withSubstituteTexture(.5,.5,1)),p.push(e.ImageUtils.loadBasisTexture(h+"Appearance_MachinedStainlessSteel_Roughness.basis",void 0,s,null,!0,e.BasisUsage.RGB,t).withSubstituteTexture(.15));for(var a=0;a<p.length;a++)p[a].wrapS=e.RepeatWrapping,p[a].wrapT=e.RepeatWrapping,p[a].flipY=!1;return p},DeferredMaterial:d,DefaultNormalDepthMaterials:s,DefaultShadowDepthMaterials:i,DefaultPickingMaterials:a,DefaultHighlightMaterials:r,DefaultMaterials:n,PredefinedMaterials:o,GeomTypeMaterials:l}}),define("DS/Materials/PDSFXData",["DS/Mesh/ThreeJS_Base"],function(e){"use strict";var t=[/(\W+)modelViewMatrix(\W+)/,/(\W+)viewMatrix(\W+)/,/(\W+)projectionMatrix(\W+)/],s=["modelViewMatrix","viewMatrix","projectionMatrix"],i=["vGetWorldViewMatrix()","vGetViewMatrix()","vGetProjectionMatrix()"],a=function(e){for(var a=s.length,r="",n=0;n<a;n++){e.search(t[n])>=0&&(r||(r=['BAD PDSFX USAGE!!!: DO NOT USE THE "'+s[n]+'" token in your overridden function!',"This is henceforth an internal PRIVATE variable. Use the following appropriate PDSFX getter function: "+i[n],"Please take time to correct your PDSFX materials by using the getters/setters provided by the API."].join("\n")),console.warn(r))}};var r=function(){this.PDSFX=!1,this.PDSFX_OverridableFunctions_VS={},this.PDSFX_OverridableFunctions_FS={},this.pdsfxUniforms=null,this.pdsfxTextures=null,this._pdsfxUniformsList=null,this.pdsfxVaryings=null,this.pdsfxGlobalVariablesCode_VS=null,this.pdsfxGlobalVariablesCode_FS=null,this.pdsfxAttributes=null,this.pdsfxAttributesInternal=null,this.CPULargeScale=!1,this._migrated=!1,this._extraDefines=null,this._uniqueID=null};return r.prototype.clone=function(){var t=new r;return t.PDSFX=!0,Object.assign(t.PDSFX_OverridableFunctions_VS,this.PDSFX_OverridableFunctions_VS),Object.assign(t.PDSFX_OverridableFunctions_FS,this.PDSFX_OverridableFunctions_FS),this.pdsfxUniforms&&(t.pdsfxUniforms=e.CloneStructure(this.pdsfxUniforms)),this.pdsfxTextures&&(t.pdsfxTextures=this.pdsfxTextures.slice()),this.pdsfxVaryings&&(t.pdsfxVaryings=e.CloneStructure(this.pdsfxVaryings)),this.pdsfxGlobalVariablesCode_VS&&(t.pdsfxGlobalVariablesCode_VS=this.pdsfxGlobalVariablesCode_VS),this.pdsfxGlobalVariablesCode_FS&&(t.pdsfxGlobalVariablesCode_FS=this.pdsfxGlobalVariablesCode_FS),this.pdsfxAttributes&&(t.pdsfxAttributes=e.CloneStructure(this.pdsfxAttributes)),this.pdsfxAttributesInternal&&(t.pdsfxAttributesInternal=e.CloneStructure(this.pdsfxAttributesInternal)),t.CPULargeScale=this.CPULargeScale,t._uniqueID=this._uniqueID,t._migrated=this._migrated,t._setUniformsList(),this._extraDefines&&(t._extraDefines={},Object.assign(t._extraDefines,this._extraDefines)),t},r.prototype._setUniformsList=function(){if(this.pdsfxUniforms)for(var e in this._pdsfxUniformsList=new Map,this.pdsfxUniforms)this._pdsfxUniformsList.set(e,this.pdsfxUniforms[e])},r.prototype._getGlobalVertexCode=function(e){return this.pdsfxGlobalVariablesCode_VS?"function"!=typeof this.pdsfxGlobalVariablesCode_VS?this.pdsfxGlobalVariablesCode_VS:this.pdsfxGlobalVariablesCode_VS(e):""},r.prototype._getGlobalFragmentCode=function(e){return this.pdsfxGlobalVariablesCode_FS?"function"!=typeof this.pdsfxGlobalVariablesCode_FS?this.pdsfxGlobalVariablesCode_FS:this.pdsfxGlobalVariablesCode_FS(e):""},r.prototype._getPDSFXOverridableFunctions_VS=function(t){for(var s="",i=Object.keys(this.PDSFX_OverridableFunctions_VS),r=0;r<i.length;r++){var n=i[r],o=this.PDSFX_OverridableFunctions_VS[n];if("string"==typeof o)a(o),s=`\n                    ${s}\n                    ${o}\n                `;else{var l=e._ShaderChunk["__PDSFX"+n+"_VS"](t,o);a(l),s=`\n                    ${s}\n                    ${l}\n                `}}return s},r.prototype._getPDSFXOverridableFunctions_FS=function(t){for(var s="",i=Object.keys(this.PDSFX_OverridableFunctions_FS),r=0;r<i.length;r++){var n=i[r],o=this.PDSFX_OverridableFunctions_FS[n];if("string"==typeof o)a(o),s=`\n                    ${s}\n                    ${o}\n                `;else{var l=e._ShaderChunk["__PDSFX"+n+"_FS"](t,o);a(l),s=`\n                    ${s}\n                    ${l}\n                `}}return s},r.prototype._setPDSFXOverridableFunctions=function(e,t){var s;for(s in e)this.PDSFX_OverridableFunctions_VS[s]&&e[s]&&(this.PDSFX_OverridableFunctions_VS[s]=e[s]);for(s in t)this.PDSFX_OverridableFunctions_FS[s]&&t[s]&&(this.PDSFX_OverridableFunctions_FS[s]=t[s])},r}),define("DS/Materials/WebGLProgramManager",["DS/Mesh/ThreeJS_Base"],function(e){"use strict";var t=function(e,t){this.program=e,this.shaderVersion=t};t.prototype.disposeProgram=function(e,t){e(t,this.program.program,!1)};var s=function(){this.programs=new Map};s.prototype.disposeAllPrograms=function(e,t){this.programs.forEach(function(s,i,a){s.disposeProgram(e,t)}),this.programs.clear()};var i,a=function(){this.materialToUses=new Map};a.prototype.disposeAllPrograms=function(e,t){this.materialToUses.forEach(function(s,i,a){s.disposeAllPrograms(e,t)}),this.materialToUses.clear()},a.prototype.getActive=function(e){if(!this.materialToUses.has(e)){var t=new s;return this.materialToUses.set(e,t),t}return this.materialToUses.get(e)};var r=function(){this.renderers=new Array(i);for(var e=0;e<i;e++)this.renderers[e]=new Map};r.prototype.getActive=function(e,t){var s=this.renderers[t];return s.has(e)||s.set(e,new a),s.get(e)},r.prototype.disposeAllPrograms=function(e,t){for(var s=0;s<this.renderers.length;s++){var i=this.renderers[s];i.forEach(function(s,i,a){s.disposeAllPrograms(e,t)}),i.clear()}},r.prototype.disposeAllRendererPrograms=function(e,t,s){for(var i=0;i<this.renderers.length;i++){var a=this.renderers[i];a.has(s)&&(a.get(s).disposeAllPrograms(e,t),a.delete(s))}};var n=function(t){i=e.RendererMode._count,this.material=t,this.programPools=new Map,this.activeProgramPool=null,this.currentContextId=-1,this.currentRendererId=-1,this.currentRendererMode=-1,this.currentMaterialToUse=-1};n.prototype.setActive=function(e,t,s,i){this.programPools.has(e)||this.programPools.set(e,new r),this.activeProgramPool=this.programPools.get(e).getActive(t,s).getActive(i).programs,this.currentContextId=e,this.currentRendererId=t,this.currentRendererMode=s,this.currentMaterialToUse=i},n.prototype.getProgram=function(e,t,s){var i=this.activeProgramPool.get(e);return i?i.shaderVersion!==t?(this.disposeCurrentProgram(s,e),null):i.program:null},n.prototype.addProgram=function(e,s,i){this.activeProgramPool.set(e,new t(s,i))},n.prototype.disposeAllPrograms=function(e){var t=this;this.programPools.forEach(function(s,i,a){s.disposeAllPrograms(e,t.material)}),this.programPools.clear(),this.activeProgramPool=null,this.currentContextId=-1,this.currentRendererId=-1,this.currentRendererMode=-1},n.prototype.disposeAllRendererPrograms=function(e,t,s){this.programPools.has(t)&&this.programPools.get(t).disposeAllRendererPrograms(e,this.material,s)},n.prototype.disposeCurrentProgram=function(e,t){if(this.activeProgramPool.has(t)){var s=this.activeProgramPool.get(t);this.activeProgramPool.delete(t),e(this.material,s.program.program,!1)}};Math.pow(2,31);return n.prototype.getProgramID=function(e,t){var s=e?e._programID:0,i=t?t._programID:0;return s|this.material._programID|i},n.prototype.getTokenProgramID=function(e){return(e?e._programID:0)|this.material._programID},n}),define("DS/Materials/Material",["DS/Mesh/ThreeJS_Base","DS/Materials/WebGLProgramManager","DS/Materials/DeferredCaches","DS/CoreEvents/Events"],function(e,t,s,i){"use strict";let a=null;var r=0,n=new e.Matrix3,o=new e.Matrix4;const l=new e.Matrix3(.01,0,0,0,-.01,0,0,.01,1),h=new Set;h.add("programManager"),h.add("program"),h.add("_displayRangeLists"),h.add("_PDSFXData"),h.add("_deferredMaterials"),h.add("_deferredMaterialsInit"),h.add("_dspbrFlakes"),h.add("_specGlossFlakes"),h.add("_clearCoat"),h.add("_volume"),h.add("_sheenData"),h.add("_sheen"),h.add("_anisotropy"),h.add("_displacement"),h.add("_iridescence"),h.add("_thickness"),h.add("_fromGLTF"),h.add("__physicalMode");class p{constructor(){a=e.BlockPoints,e.EventDispatcher.call(this),this._usePhongLighting=!1,this._isAlteringGeometryOnGPU=!1,this.id=r++,this._sceneGraphOrderMode=0,this.name="",this._useCount=0,this._source=e.AssetSource.MANUAL,this._side=e.Constants.FrontSide,this.forceSide=!1,this._opacity=1,this._transparent=!1,this.blending=e.NormalBlending,this.blendSrc=e.SrcAlphaFactor,this.blendDst=e.OneMinusSrcAlphaFactor,this.blendEquation=e.AddEquation,this.depthTest=!0,this.depthFunc=null,this.depthWrite=!0,this.colorWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.vertexColors=e.VertexColorType.NoColors,this.polite=!1,this.politeMaterial=null,this.useGASColor=!1,this._isFromGAS=!1,this._alphaTest=0,this.alphaTestMode=e.AlphaTestMode.DISCARD,this._disableForcedAlphaTest=!1,this._visible=!0,this.enableClipPlanes=!0,this.clipPlaneIndex=0,this.clipPlaneUseModelMaterial=null,this.mappingType=-1,this.mappingTransformSemantic=1,this.mappingObjTransformation=o,this.mappingNormTransformation=n,this.mappingUVTransformation=n,this.mappingUseFragment=!1,this.needsUpdate=!0,this.overridable=!0,this._forceAllowFullMaterialOverride=!1,this.force=!1,this.context=null,this.backMaterial=null,this.isBackMaterial=!1,this.isOIT=!1,this.useBlending=!1,this.previousOccurrenceRenderingOverride=null,this._programID=0,this.vertexShader=null,this.fragmentShader=null,this.program=null,this.programManager=new t(this),this.shaderID=0,this._definePickingInstancing=!1,this.enableReceiveShadowOnCapping=!1,this._renderedClipPlane=null,this.line=null,this.point=null,this.defines=null,this._PDSFXData=null,this.isWideLine=!1,this.isDashedLine=!1,this.is2DLine=!1,this.isCPUPattern=!1,this.refreshUniforms=function(e,t,s){},this._refreshPDSFXUniforms_private=function(e,t,s){this.refreshPDSFXUniforms&&this.refreshPDSFXUniforms()},this.refreshPDSFXUniforms=function(){},this._displayRangeLists=new Set,this._displayLists=new Map,this._deferredMaterialsInit=!1,this._deferredMaterials=[];for(var s=0;s<e.MaterialToUse.totalMaterial;s++)this._deferredMaterials[s]=null;this._deferredMaterials[e.MaterialToUse.originalMaterial]=this,this._loadingTextures=null,this._cloneOrigin=null}isPDSFX(){return!!this._PDSFXData&&this._PDSFXData.PDSFX}_needsUpdateIfTexturesAreReady(){var t=this;if(this.needsUpdate)for(var s=this._getTextures(!1),i=0;i<s.length;i++){var a=s[i];if(a){if(!a.onLoadCallbacks)continue;a._isReady||(a._isReady=function(){return this.loadEndStatus===e.AssetLoadingStatus.READY||this.loadEndStatus===e.AssetLoadingStatus.INIT},a._canBeUsed=function(){return null!==this._substituteTexture||this._isReady()}),a._isReady()||(a.onLoadCallbacks.push(function(){t._sendEvent("requestShadowMapUpdate"),t._sendEvent("requestVisuUpdate")}),a.onRequest&&a.onRequest(),null===a._substituteTexture&&(this._loadingTextures||(this._loadingTextures=new Set),this._loadingTextures.has(a)||this._loadingTextures.add(a)))}}if(this._loadingTextures){var r=!0;this._loadingTextures.forEach(function(t){r=r&&(t._isReady()||t.loadEndStatus===e.AssetLoadingStatus.ERROR),t.onRequest&&t.onRequest()}),r&&(this._loadingTextures=null,this.needsUpdate=!0)}}static __isTextureAvailable(t,s){var i=t[s];return!!i&&(i._canBeUsed||(console.error("Expected THREE.Texture or THREE.WebGLRenderTarget but got object"),i._canBeUsed=function(){return this.loadEndStatus===e.AssetLoadingStatus.READY||this.loadEndStatus===e.AssetLoadingStatus.INIT}),i._canBeUsed())}_isTextureAvailable(e){return p.__isTextureAvailable(this,e)}requireTangentBinormal(){return!1}requireVertexTangentBinormal(){return!1}_setMaterialShaderOptions(e,t,s,i,a,r){var n={};(t||s||i)&&Object.assign(n,{normalMap:this._isTextureAvailable("normalMap"),normalMapFlipY:!!this.normalMapFlipY,bumpMap:this._isTextureAvailable("bumpMap")}),Object.assign(e,n)}_dump(){return{type:this.getType(),pdsfx:this.isPDSFX(),opacity:this.opacityMap?"texture":this._opacity,useGASColor:this.useGASColor}}_getTextures(e){return[]}isPropertyTextured(e){switch(e){case"color":return!!this.map;case"specular":return!!this.specularMap;case"opacity":return!!this.opacityMap;case"normal":return!!this.normalMap;case"bump":return!!this.bumpMap}return!1}_transparencyOnGPU(t){if(this.isPDSFX()||this.alphaTest>0&&this.alphaTestMode===e.AlphaTestMode.DISCARD)return!0;var s=!1;return t&&t._vertexColors>0?s=(this.useGASColor||this._isFromGAS)&&((t._vertexColors&e.VertexColorType.A)>0||t._vertexColors<=e.VertexColorType.RGBA):this.vertexColors>0&&(s=(this.vertexColors&e.VertexColorType.A)>0||this.vertexColors<=e.VertexColorType.RGBA),s}_isTransparent(e){return this._transparent||this.getOpacity()<1||this._transparencyOnGPU(e)}_loadTextureInfo(e,t,s,i,a,r){}_loadMappingInfo(e,t,s,i){if(i.mappingType){var a=e.mappingNormTransformation;s.uniformMatrix3fv(i.mappingNormTransformation,!1,t.float32Matrix3x3Temp.setDoubles(a.elements)),a=e.mappingUVTransformation,s.uniformMatrix3fv(i.mappingUVTransformation,!1,t.float32Matrix3x3Temp.setDoubles(a.elements)),a=e.mappingObjTransformation,s.uniformMatrix4fv(i.mappingObjTransformation,!1,t.float32Matrix4x4Temp.setDoubles(a.elements)),s.uniform1i(i.mappingType,e.mappingType),s.uniform1i(i.mappingTransformSemantic,e.mappingTransformSemantic)}}_computeAmbianceKeyAndProcessMaterial(e,t,s,i,a){return this._needsUpdateIfTexturesAreReady(),0}get opacity(){return this._opacity}set opacity(e){this.setOpacity(e)}get alphaTest(){return this._alphaTest}set alphaTest(e){this.setAlphaTest(e)}get transparent(){return this._transparent}set transparent(e){e!==this._transparent&&this._invalidateDisplayRangeLists(),this._transparent=e}get side(){return this._side}set side(e){this._side!==e&&this._invalidateDisplayRangeLists(),this._side=e}get visible(){return this._visible}set visible(e){this._visible!==e&&this._invalidateDisplayRangeLists(),this._visible=e}_invalidateDisplayRangeLists(){this._displayRangeLists.forEach(function(e,t){e.flagObjectsAsGSSOInvalidated()})}_removeDisplayRangeList(e){const t=e.dl;this._displayRangeLists.delete(e),this._displayLists.has(t)&&(this._displayLists.set(t,this._displayLists.get(t)-1),this._displayLists.get(t)<=0&&this._displayLists.delete(t))}_addDisplayRangeList(e){const t=e.dl;this._displayRangeLists.add(e),this._displayLists.has(t)?this._displayLists.set(t,this._displayLists.get(t)+1):this._displayLists.set(t,1)}_notifyDLtoBeSortedNextFrame(){this._displayLists.forEach(function(e,t){t._sortByProgramNextFrame=!0})}get PDSFX_OverridableFunctions_FS(){return this._PDSFXData?this._PDSFXData.PDSFX_OverridableFunctions_FS:null}get pdsfxUniforms(){return console.warn("Do not access the 'pdsfxUniforms' property! Use one of these API functions instead: Material.getPDSFXUniform, Material.setPDSFXUniforms, or Material.updatePDSFXUniform."),this._PDSFXData?this._PDSFXData.pdsfxUniforms:null}get PDSFX(){return console.warn("Please call the Material.isPDSFX function instead."),this.isPDSFX()}setPDSFXUniforms(t){if(this._PDSFXData&&this._PDSFXData.PDSFX){let a=[];for(var s in t){var i=e.ToGLSLTypes[t[s].type];i&&(i.isTexture&&a.push(t[s]))}this._PDSFXData.pdsfxTextures=a.length?a:null,this._PDSFXData.pdsfxUniforms=t,this._PDSFXData._setUniformsList(),this.needsUpdate=!0}}updatePDSFXUniform(e,t,s=-1){if(this._PDSFXData&&this._PDSFXData.PDSFX&&void 0!==this._PDSFXData.pdsfxUniforms[e]&&(this._PDSFXData.pdsfxUniforms[e].value=t,s>=0)){const t=this._PDSFXData.pdsfxUniforms[e].length;this._PDSFXData.pdsfxUniforms[e].length=s,this.needsUpdate=this.needsUpdate||t!==s}}getPDSFXUniform(e){if(this._PDSFXData&&this._PDSFXData.PDSFX)return this._PDSFXData.pdsfxUniforms&&void 0!==this._PDSFXData.pdsfxUniforms[e]?{name:e,value:this._PDSFXData.pdsfxUniforms[e].value}:null}setPDSFXVaryings(e){this._PDSFXData&&this._PDSFXData.PDSFX&&(this._PDSFXData.pdsfxVaryings=e,this.needsUpdate=!0)}setPDSFXAttributes(e){this._PDSFXData&&this._PDSFXData.PDSFX&&(this._PDSFXData.pdsfxAttributes=e,this.needsUpdate=!0)}setPDSFXGlobalShaderCode(e,t){this._PDSFXData&&this._PDSFXData.PDSFX&&(this._PDSFXData.pdsfxGlobalVariablesCode_VS=e,this._PDSFXData.pdsfxGlobalVariablesCode_FS=t,this.needsUpdate=!0)}setPDSFXPolygonOffset(t){if(this._PDSFXData&&this._PDSFXData.PDSFX){this.polygonOffset=!0;var s=e.PDSFXPolygonOffsetParams[t];s&&(this.polygonOffsetFactor=s[0],this.polygonOffsetUnits=s[1])}}_defaultPDSFXOverridableFunctions(){return{vertex:{ComputeCommonValues:e._ShaderChunk.PDSFXComputeCommonValues_VS,ComputeObjectPosition:e._ShaderChunk.PDSFXComputeObjectPosition_VS,ComputeObjectNormal:e._ShaderChunk.PDSFXComputeObjectNormal_VS,ComputeObjectTexCoord0:e._ShaderChunk.PDSFXComputeObjectTexCoord0_VS,ComputeObjectTexCoord1:e._ShaderChunk.PDSFXComputeObjectTexCoord1_VS,ComputeObjectTexCoord2:e._ShaderChunk.PDSFXComputeObjectTexCoord2_VS,ComputeObjectTangent:e._ShaderChunk.PDSFXComputeObjectTangent_VS,ComputeObjectBinormal:e._ShaderChunk.PDSFXComputeObjectBinormal_VS,ProcessViewTangentSpace:e._ShaderChunk.PDSFXProcessViewTangentSpace_VS,ProcessClipSpacePosition:e._ShaderChunk.PDSFXProcessClipSpacePosition_VS,ComputeVaryingValues:e._ShaderChunk.PDSFXComputeVaryingValues_VS},fragment:{ComputeCommonValues:e._ShaderChunk.PDSFXComputeCommonValues_FS,ComputeDiscard:e._ShaderChunk.PDSFXComputeDiscard_FS,ComputeAlbedo:e._ShaderChunk.PDSFXComputeAlbedo_FS,_ComputeDiffuseTexel:e._ShaderChunk.PDSFX_ComputeDiffuseTexel_FS,ComputeViewPosition:e._ShaderChunk.PDSFXComputeViewPosition_FS,ComputeViewNormal:e._ShaderChunk.PDSFXComputeViewNormal_FS,ComputeOpacity:e._ShaderChunk.PDSFXComputeOpacity_FS,ProcessFinalColor:e._ShaderChunk.PDSFXProcessFinalColor_FS}}}_setDefaultPDSFXOverridableFunctions(){var e=this._defaultPDSFXOverridableFunctions();Object.assign(this._PDSFXData.PDSFX_OverridableFunctions_VS,e.vertex),Object.assign(this._PDSFXData.PDSFX_OverridableFunctions_FS,e.fragment),this.needsUpdate=!0}activatePDSFX(){throw"Called abstract activatePDSFX"}_activatePDSFXMigrated(e=null){this.activatePDSFX(),this._PDSFXData._migrated=!0,this._PDSFXData._uniqueID=e}setPDSFXOverridableFunctions(e,t){this._PDSFXData&&this._PDSFXData.PDSFX?(this._setDefaultPDSFXOverridableFunctions(),this._PDSFXData._setPDSFXOverridableFunctions(e,t),this.needsUpdate=!0):console.warn("Not a PDSFX material: please call activatePDSFX() first.")}setBackMaterial(e){this.isBackMaterial?console.warn("You can't set a back material on a back material"):(this.backMaterial=e,null!==this.backMaterial&&(this.backMaterial.polygonOffset=!0,this.backMaterial.polygonOffsetFactor=-10,this.backMaterial.polygonOffsetUnits=-10,this.backMaterial.isCPUPattern=this.isCPUPattern,this.backMaterial.isBackMaterial=!0,this.targetPrimitiveType!==this.backMaterial.targetPrimitiveType||this.is2DLine&&!this.backMaterial.is2DLine?(console.warn("The back material you are using is not compatible with the main material: primitive types don't match"),this.backMaterial=null):this.needsUpdate=!0),this._invalidateDisplayRangeLists(),this.updateDeferredMaterials())}setMappingOperator(t,s,i,a,r){if(t.length)switch(t){case"PLANAR":t=1;break;case"SPHERICAL":t=2;break;case"CUBIC":t=3;break;case"CYLINDRICAL":t=4;break;case"INFINITE_CYLINDRICAL":t=5;break;case"SPHERICAL_NORMALIZED":t=6;break;case"INFINITE_CYLINDRICAL_NORMALIZED":t=7;break;case"INFINITE_CYLINDRICAL_NORM_ANGLE_PRES":t=8}this.mappingType=t,void 0!==a&&(this.mappingUseFragment=a),s instanceof e.Matrix4&&(this.mappingObjTransformation=s,this.mappingObjTransformation.isIdentity()?(this.mappingObjTransformation=o,this.mappingNormTransformation=n):this.mappingNormTransformation=(new e.Matrix3).getInverse(s).transpose()),i instanceof e.Matrix3&&(this.mappingUVTransformation=i,this.mappingUVTransformation.isIdentity()&&(this.mappingUVTransformation=n)),void 0!==r&&(this.mappingTransformSemantic=r),this.needsUpdate=!0}getType(){return"Unknown"}areTexturesLoaded(){return!(this.map&&this._alphaTest&&!this.map._canBeUsed())}_sendEvent(e,t){t=t||{},i.publish({event:"/VISU/"+e,data:{eventChannel:"/VISU/"+e,eventType:"@"+e,extraData:t}})}setOpacity(e){(1===this._opacity&&e<1||this._opacity<1&&1===e||this._opacity>0&&0===e||0===this._opacity&&e>0)&&this._invalidateDisplayRangeLists(),this._opacity=e}getOpacity(){return this._opacity}setAlphaTest(e){this._alphaTest!==e&&(this.needsUpdate=!0,this._deferredMaterialsInit&&this.updateDeferredMaterials()),(0===this._alphaTest&&e>0||this._alphaTest>0&&0===e)&&this._invalidateDisplayRangeLists(),this._alphaTest=e}_inTransparentPass(e){return this.getOpacity()<1||this.transparent&&this._transparencyOnGPU(e)}setValues(t){void 0!==t&&(e.setValuesToObject(this,t,h),null!==this.backMaterial&&(this.backMaterial.polygonOffset=!0,this.backMaterial.polygonOffsetFactor=-10,this.backMaterial.polygonOffsetUnits=-10,this.backMaterial.isCPUPattern=this.isCPUPattern,this.backMaterial.isBackMaterial=!0,(this.targetPrimitiveType!==this.backMaterial.targetPrimitiveType||this.is2DLine&&!this.backMaterial.is2DLine)&&(console.warn("The back material you are using is not compatible with the main material: primitive types don't match"),this.backMaterial=null)),this.alphaTest&&this.alphaTestMode===e.AlphaTestMode.DISCARD&&(this.transparent=!0),null===this.mappingObjTransformation||this.mappingObjTransformation.isIdentity()?(this.mappingObjTransformation=o,this.mappingNormTransformation=n):this.mappingNormTransformation=(new e.Matrix3).getInverse(this.mappingObjTransformation).transpose(),(null===this.mappingUVTransformation||this.mappingUVTransformation.isIdentity())&&(this.mappingUVTransformation=n))}_canUseLights(){return!0}clone(e){return void 0===e&&(e=new p),e.name=this.name,e.side=this.side,e.forceSide=this.forceSide,e._opacity=this._opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.useGASColor=this.useGASColor,e._isFromGAS=this._isFromGAS,e.depthTest=this.depthTest,e.depthFunc=this.depthFunc,e.depthWrite=this.depthWrite,e.colorWrite=this.colorWrite,e.defines=this.defines?Object.assign({},this.defines):null,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.polite=this.polite,e.politeMaterial=this.politeMaterial,e.alphaTest=this.alphaTest,e.alphaTestMode=this.alphaTestMode,e._disableForcedAlphaTest=this._disableForcedAlphaTest,e.visible=this.visible,e.force=this.force,e.vertexColors=this.vertexColors,e.enableClipPlanes=this.enableClipPlanes,e.clipPlaneIndex=this.clipPlaneIndex,e.clipPlaneUseModelMaterial=this.clipPlaneUseModelMaterial,e.overridable=this.overridable,e.mappingType=this.mappingType,e.mappingUseFragment=this.mappingUseFragment,e.mappingNormTransformation=this.mappingNormTransformation,e.mappingObjTransformation=this.mappingObjTransformation,e.mappingUVTransformation=this.mappingUVTransformation,this._definePickingInstancing&&(e._definePickingInstancing=this._definePickingInstancing),this._PDSFXData&&this._PDSFXData.PDSFX&&(e._PDSFXData=this._PDSFXData.clone(),this.refreshPDSFXUniforms&&(e.refreshPDSFXUniforms=this.refreshPDSFXUniforms),this._refreshPDSFXUniforms_private&&(e._refreshPDSFXUniforms_private=this._refreshPDSFXUniforms_private)),e.isOIT=this.isOIT,e.backMaterial=this.backMaterial,e.isBackMaterial=this.isBackMaterial,e.previousOccurrenceRenderingOverride=this.previousOccurrenceRenderingOverride,e.useBlending=this.useBlending,e._programID=this._programID,e.program=this.program,e.enableReceiveShadowOnCapping=this.enableReceiveShadowOnCapping,e._renderedClipPlane=this._renderedClipPlane,e.line=this.line,e.point=this.point,e.isWideLine=this.isWideLine,e.isDashedLine=this.isDashedLine,e.is2DLine=this.is2DLine,e.isCPUPattern=this.isCPUPattern,e.refreshUniforms=this.refreshUniforms,e._usePhongLighting=this._usePhongLighting,e._isAlteringGeometryOnGPU=this._isAlteringGeometryOnGPU,e._cloneOrigin=this._cloneOrigin||this,e}updateDeferredMaterials(e){this._deferredMaterialsInit=!0}getGeomTypeDeferredMaterial(e,t){return this}dispose(){this.dispatchEvent({type:"dispose"})}_needsIBLLightExtraction(){return!1}_forceOpaqueShadowMapPass(){return!1}recompileShaders(e,t){if(t&&t.onlyDeferred||(t&&t.callback&&t.callback(this),this.needsUpdate=!0),this._deferredMaterialsInit){var s=this._deferredMaterials,i=t?t.deferredChannels:null;if(i&&i.length>0)for(var a=0;a<i.length;a++){(r=s[i[a]])&&(t&&t.callback&&t.callback(r),r.needsUpdate=!0)}else for(a=0;a<s.length;a++){var r;(r=s[a])&&(t&&t.callback&&t.callback(r),r.needsUpdate=!0)}}e&&(this.line&&this.line.recompileShaders(!1,t),this.point&&this.point.recompileShaders(!1,t))}getBaseId(){var e="id";return this._PDSFXData&&this._PDSFXData.PDSFX&&(e+="PDSFX"),e}getPredefinedMaterial(t,i,a){if(i===e.DefaultAppearanceMode.BASIC)return this;var r=this,n=s._loadPredefinedMaterialTextures(!0,function(){r._sendEvent("requestVisuUpdate")},!1),o=this.getBaseId();switch(o+="Lighted",o+="S"+this.side,o+="CP"+this.enableClipPlanes,o+="Type"+i,i){case e.DefaultAppearanceMode._GASLOOK_OLD:if(o+="Col"+this.color.getHex(),o="id"+(o+="O"+this._opacity).hashCode(),!s.PredefinedMaterials.has(o)){(u=new e.DSPBR19xMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,ior:1.576,roughness:.3,color:this.color,opacity:this._opacity}))._activatePDSFXMigrated(),u._PDSFXData._uniqueID="GASLookPDSFX";var h={noiseVolume:{type:"t2",value:t}};u.setPDSFXUniforms(h);u.setPDSFXVaryings({noiseCoords:{type:"v3"}});u.setPDSFXGlobalShaderCode(null,function(e){const t=e.variableHandler,s=e.functionHandler,i=t=>e.getTextureUniform(t),a=e=>t.float(e),r=e=>t.floatC(e),n=e=>t.vec2(e),o=e=>t.vec4(e);return`\n                                ${r("SLICE_SIDE")} = 64.0;\n                                ${r("SLICES_PER_ROW")} = 8.0;\n                                ${r("INV_SLICES_PER_ROW")} = 1.0 / SLICES_PER_ROW;\n                                // 1 / 512\n                                ${r("MAP_INVSIZE")} = 0.001953125;\n\n                                ${s.dF("sample3DTexture","v4",[s.prmV3("iPos")])} {\n                                    ${(e=>t.vec3(e))("pos")} = iPos * (SLICE_SIDE - 1.0);\n    \n                                    ${a("rowID")}  = floor(pos.z * INV_SLICES_PER_ROW);\n                                    ${a("rowID2")}  = rowID;\n                                    ${a("colID")}  = mod(floor(pos.z), SLICES_PER_ROW);\n                                    ${a("colID2")}  = mod(ceil(pos.z), SLICES_PER_ROW);\n                                    if (colID2 == 0.0) { \n                                        rowID2 = rowID2 + 1.0; \n                                    }\n            \n                                    ${a("x1")}  = colID  * SLICE_SIDE + pos.x + 0.5;\n                                    ${a("x2")}  = colID2 * SLICE_SIDE + pos.x + 0.5;\n                                    ${a("y1")}  = rowID  * SLICE_SIDE + pos.y + 0.5;\n                                    ${a("y2")}  = rowID2 * SLICE_SIDE + pos.y + 0.5;\n                                    ${n("mapUV")}   = ${n()}(x1 * MAP_INVSIZE, 1.0 - y1 * MAP_INVSIZE);\n                                    ${n("mapUV2")}  = ${n()}(x2 * MAP_INVSIZE, 1.0 - y2 * MAP_INVSIZE);\n                                    ${o("alpha1")}  = ${s.sample2DTexture(i("noiseVolume"),"mapUV")};\n                                    ${o("alpha2")}  = ${s.sample2DTexture(i("noiseVolume"),"mapUV2")};\n            \n                                    return mix(alpha1, alpha2, fract(pos.z));\n                                }\n                            `});var p={ComputeViewNormal:function(e,t){const s=e.variableHandler,i=e.functionHandler,a=e=>s.vec3(e);return`\n                                    ${a("vNormal")} = ${e.vGetViewNormal()};\n\n                                    ${a("bumpNorm")}  = ${i.cF("sample3DTexture","v3",[i.prmV3("fract(noiseCoords * 0.5)")])}.xxx * 0.04;\n                                    bumpNorm = (${e.vGetViewMatrix()} * ${(e=>s.vec4(e))()}(bumpNorm, 0.0)).xyz;\n        \n                                    vNormal += bumpNorm;\n                                    vNormal = normalize(vNormal);\n    \n                                    return vNormal;\n                                `}};u.setPDSFXOverridableFunctions({ComputeVaryingValues:function(e,t){return`\n                                    ${e.getVarying("noiseCoords")} = ${e.vGetAttribPosition()};\n                                `}},p);var d=new s.DeferredMaterial(u);s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.GASLOOK:if(o+="Col"+this.color.getHex(),o="id"+(o+="O"+this._opacity).hashCode(),!s.PredefinedMaterials.has(o)){var u=new e.DSPBR19xMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,ior:1.5,roughness:.3,color:(new e.Color).set(this.color).multiplyScalar(.85),opacity:this._opacity,clearCoat:.918,clearCoatRoughness:.1,_isFromGAS:!0});d=new s.DeferredMaterial(u);s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode._TRANSPARENT:if(o="id"+(o+="Col"+this.color.getHex()).hashCode(),!s.PredefinedMaterials.has(o)){d=new s.DeferredMaterial(new e.DSPBR19xMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,color:this.color,opacity:.25,transparent:!0,roughness:.34,ior:1.5,_isFromGAS:!0}));s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.CLAY:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){d=new s.DeferredMaterial(new e.DSPBR19xMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,color:(new e.Color).setRGB(.64,.34,.26),specular:(new e.Color).setRGB(.996,.851,.694),roughness:.41,ior:1.5,overridable:!1,_forceAllowFullMaterialOverride:!0}));s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.WHITE_MAT_PLASTER:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){d=new s.DeferredMaterial(new e.DSPBR19xMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,color:(new e.Color).setRGB(.922,.922,.922),roughness:1,ior:1.5,overridable:!1,_forceAllowFullMaterialOverride:!0}));s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.GREY_SHINY_PLASTIC:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){d=new s.DeferredMaterial(new e.DSPBR19xMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,color:(new e.Color).setRGB(.584,.584,.584),roughness:.045,ior:1.5,overridable:!1}));s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.CAST_ALUMINUM:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){(c=new e.DSPBR19xMaterial({color:11184810,map:n[6],side:this.side,normalMap:n[7],enableClipPlanes:this.enableClipPlanes,specular:(new e.Color).setRGB(.996,.996,.996),metalness:1,roughness:.6,roughnessMap:n[8],ior:1.5,overridable:!1,_forceAllowFullMaterialOverride:!0})).setMappingOperator(e.MappingType.CUBIC,null,l,!0);d=new s.DeferredMaterial(c);s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.MACHINED_ALUMINUM:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){(c=new e.DSPBR19xMaterial({color:11184810,map:n[14],side:this.side,normalMap:n[15],enableClipPlanes:this.enableClipPlanes,specular:(new e.Color).setRGB(.996,.996,.996),metalness:1,roughness:.6,roughnessMap:n[16],ior:1.5,overridable:!1,_forceAllowFullMaterialOverride:!0})).setMappingOperator(e.MappingType.CUBIC,null,l,!0);d=new s.DeferredMaterial(c);s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.CAST_STEEL:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){(c=new e.DSPBR19xMaterial({color:8947848,map:n[9],side:this.side,enableClipPlanes:this.enableClipPlanes,specular:(new e.Color).setRGB(.996,.996,.996),metalness:1,roughness:.4,roughnessMap:n[10],ior:1.5,overridable:!1,_forceAllowFullMaterialOverride:!0})).setMappingOperator(e.MappingType.CUBIC,null,l,!0);d=new s.DeferredMaterial(c);s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.BRUSHED_STEEL:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){(c=new e.DSPBR19xMaterial({color:11184810,map:n[2],side:this.side,normalMap:n[4],enableClipPlanes:this.enableClipPlanes,specular:(new e.Color).setRGB(.996,.996,.996),metalness:1,roughness:.15,roughnessMap:n[5],anisotropyMap:n[3],anisotropyAngle:.14,ior:1.5,overridable:!1,_forceAllowFullMaterialOverride:!0})).setMappingOperator(e.MappingType.CUBIC,null,l,!0);d=new s.DeferredMaterial(c);s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.MACHINED_STAINLESS_STEEL:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){(c=new e.DSPBR19xMaterial({color:11184810,map:n[17],side:this.side,normalMap:n[18],enableClipPlanes:this.enableClipPlanes,specular:(new e.Color).setRGB(.996,.996,.996),metalness:1,roughness:.15,roughnessMap:n[19],anisotropy:.17,anisotropyAngle:.09,ior:1.5,overridable:!1,_forceAllowFullMaterialOverride:!0})).setMappingOperator(e.MappingType.CUBIC,null,l,!0);d=new s.DeferredMaterial(c);s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.COPPER:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){(c=new e.DSPBR19xMaterial({color:13809841,map:n[11],side:this.side,normalMap:n[12],enableClipPlanes:this.enableClipPlanes,specular:(new e.Color).setRGB(.996,.996,.996),metalness:1,roughness:.4,roughnessMap:n[13],ior:1.5,overridable:!1,_forceAllowFullMaterialOverride:!0})).setMappingOperator(e.MappingType.CUBIC,null,l,!0);d=new s.DeferredMaterial(c);s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.BRASS:if(o="id"+o.hashCode(),!s.PredefinedMaterials.has(o)){var c;(c=new e.DSPBR19xMaterial({color:14472604,map:n[0],side:this.side,enableClipPlanes:this.enableClipPlanes,specular:(new e.Color).setRGB(.996,.996,.996),metalness:1,roughness:.4,roughnessMap:n[1],ior:1.5,overridable:!1,_forceAllowFullMaterialOverride:!0})).setMappingOperator(e.MappingType.CUBIC,null,l,!0);d=new s.DeferredMaterial(c);s.PredefinedMaterials.set(o,d)}break;case e.DefaultAppearanceMode.GENERIC_PLASTIC:case e.DefaultAppearanceMode.GENERIC_METAL:var f=a.colorFromGAS;if(f){if(o+="Col"+this.color.getHex(),o="id"+(o+="O"+this._opacity).hashCode(),!s.PredefinedMaterials.has(o)){d=new s.DeferredMaterial(new e.DSPBR19xMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,ior:1.5,color:this.color,opacity:this._opacity,opacityAddCoef:0,opacityMulCoef:1,_forceAllowFullMaterialOverride:!0,overridable:!0,_isFromGAS:!0}));s.PredefinedMaterials.set(o,d)}}else if(o+="ColCustom",o="id"+(o+="OCustom").hashCode(),!s.PredefinedMaterials.has(o)){d=new s.DeferredMaterial(new e.DSPBR19xMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,ior:1.5,opacityAddCoef:0,opacityMulCoef:1,_forceAllowFullMaterialOverride:!0}));s.PredefinedMaterials.set(o,d)}(u=s.PredefinedMaterials.get(o).get(this)).metalness=i===e.DefaultAppearanceMode.GENERIC_PLASTIC?0:1,u.roughness=1-a.shininess,u.opacityMulCoef=a.opacity,u._transparent=u._opacity<1||a.opacity<1,f||u.color.copy(a.color);break;case e.DefaultAppearanceMode.__QA_AUTOMATION__:var m=this.map||0===this.color.getHex()?new e.Color(11184810):this.color,S=this.opacityMap?1:this._opacity;if(o+="Col"+m.getHex(),o="id"+(o+="Op"+S).hashCode(),!s.PredefinedMaterials.has(o)){(u=new e.MeshBasicMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,color:m,opacity:S}))._activatePDSFXMigrated(),u._PDSFXData._uniqueID="LightedQAAutomationPDSFX";p={ProcessFinalColor:function(e,t){const s=e.variableHandler,i=e.pdsfxDefines,a=e=>s.vec3(e),r=e=>s.vec4(e),n=s.dereference()+t[0];return`\n                                    ${a("color")} = ${e.vGetAlbedo()};\n                                    ${(e=>s.mat4(e))("viewMat")}  = ${e.vGetViewMatrix()};\n                                    ${a("light1")}  = normalize((viewMat*${r()}(0.0,0.0,1.0,0.0)).xyz);\n                                    ${a("light2")}  = normalize((viewMat*${r()}(0.0,-1.0,-1.0,0.0)).xyz);\n                                    ${a("light3")}  = normalize((viewMat*${r()}(0.0,1.0,-1.0,0.0)).xyz);\n                                    ${a("viewNorm")}  = ${e.vGetViewNormal()};\n                                    ${(e=>s.float(e))("ambientCoef")}  = 0.11;\n                                    color = 2.0 * color * (ambientCoef + 0.44*clamp(dot(viewNorm, light1), 0.0, 1.0) + 0.22*clamp(dot(viewNorm, light2), 0.0, 1.0) + 0.22*clamp(dot(viewNorm, light3), 0.0, 1.0));\n                                    ${n} = ${r()}(color, ${e.vGetOpacity()});\n                                    ${i.gammaOutput?`\n                                        ${n}.r = sqrt(${n}.r);\n                                        ${n}.g = sqrt(${n}.g);\n                                        ${n}.b = sqrt(${n}.b);\n                                        `:""}\n                                `}};u.setPDSFXOverridableFunctions({},p);d=new s.DeferredMaterial(u);s.PredefinedMaterials.set(o,d)}}return s.PredefinedMaterials.get(o).get(this)}buildUniformsList(){}__getGAS(e){return this}_setUniformLocations(t,s,i,r){var n=s.objectUniformLocations,o=s.globalUniformLocations,l=s.postProUniformLocations,h=s.lightUniformLocations,p=s.shadowUniformLocations,d=s.clippingUniformLocations,u=s.pdsfxUniformLocations,c=s.uniformLocations;if(2===e.WebGLVersion){var f=t.getUniformBlockIndex(i,"FrameUBO");t.uniformBlockBinding(i,f,a.FRAME)}for(var m in r){var S=r[m],C=t.getUniformLocation(i,m),_=S.locationName?S.locationName:m;C&&(S.dynamic?S.globalUniform?o[_]=C:S.objectUniform?n[_]=C:S.lightUniform?h[_]=C:S.shadowUniform?p[_]=C:S.postProUniform?l[_]=C:S.clippingUniform?d[_]=C:S.pdsfxUniform?u[_]=C:S.materialUniform?c[_]=C:console.warn("Unknown uniform category "+m+" "+S):c[_]=C)}}_deallocate(t){if(this._deferredMaterialsInit){var s=e.MaterialToUse;e.cleanDeferredCache(this.id),this._deferredMaterialsInit=!1,this._deferredMaterials=[];for(var i=0;i<s.totalMaterial;i++)this._deferredMaterials[i]=null;this._deferredMaterials[s.originalMaterial]=this,this.backMaterial&&this._deferredMaterials[s.pickingMaterial]&&this._deferredMaterials[s.pickingMaterial].dispose()}this.needsUpdate=!0}getZOnlyMaterial(){var t=this.transparent||this._opacity<1,i="ZOnly-Tr"+t;if(i="id"+i.hashCode(),s.DefaultMaterials.has(i))return s.DefaultMaterials.get(i).get(this);var a=new e.MeshBasicMaterial({force:!0});a.blending=e.CustomBlending,a.useBlending=!0,a.blendDst=e.OneFactor,a.blendSrc=e.ZeroFactor,a.transparent=t,a._opacity=t?.5:1,a.overridable=!1;var r=new s.DeferredMaterial(a);return s.DefaultMaterials.set(i,r),r.get(this)}}return p.prototype.__dimension=2,p.prototype.targetPrimitiveType="FACES",p.prototype._shaderID=null,p.prototype.deferrable=!1,p.prototype.isPhysicalMaterial=!1,p.prototype._autoForceSide=!1,p}),define("DS/Materials/PostProMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/Material","DS/Materials/PDSFXData"],function(e,t,s){"use strict";class i extends t{constructor(e){if(!e||!e.postProContext)throw"Invalid Operation: PostProMaterial requires as PostProContext";super(),this.postProContext=null,this.setValues(e);var t=this.postProContext;if(this.postProBuilder=t.getShaderBuilder(),this.uniformHandler=t.getUniformHandler(),this.defines=t.getDefines(),this.force=!0,this.polygonOffset=!0,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,e&&!this.postProBuilder)throw"Invalid Operation Exception: ProProMaterial needs a postProBuilder";this.enableClipPlanes=!1}getType(){return"Custom"}getPredefinedMaterial(e,t,s){return this}_inTransparentPass(e){return this.transparent}setUniform(e,t){e&&void 0!==t&&void 0!==this.uniformHandler[e]&&(this.uniformHandler[e]=t)}getUniform(e){return e&&void 0!==this.uniformHandler[e]?this.uniformHandler[e]:null}getInput(e=0){return this.uniformHandler.getInput(e)}setInput(e,t=0){this.uniformHandler.setInput(e,t)}setLinkedInput(e,t=0){this.uniformHandler.setLinkedInput(e,t)}clone(e){var t=void 0!==e?e:new i({postProContext:this.postProContext});super.clone(t);var s=this.postProContext;return t.postProBuilder=s.getShaderBuilder(),t.uniformHandler=s.getUniformHandler(),t.defines=s.getDefines(),t}loadUniforms(e,t,s,i,a,r){this.uniformHandler.loadUniforms(this,e,t,s,i,a,r)}activatePDSFX(e){throw"Unsupported operation: PostProMaterial can't be PDSFXed, please use a standard material."}_canUseLights(){return!1}_dump(){throw"Unsupported operation"}}return i.prototype._shaderID="custom",i}),define("DS/Materials/GradientBackgroundMaterials",["DS/Mesh/ThreeJS_Base","DS/Materials/Material"],function(e,t){"use strict";class s extends t{constructor(e){super(),this.colors=null,this.YUp=0,this.ratio=1,this.setValues(e)}clone(){throw"Unsupported operation"}getPredefinedMaterial(e,t,s){return this}loadUniforms(e,t,s,i,a,r){t.uniform1i(s.YUp,this.YUp),t.uniform1f(s.ratio,this.ratio),t.uniform3fv(s.colors,this.colors)}getType(){throw"Abstract Gradient material"}}class i extends s{constructor(e){super(e)}getType(){return"GradientBackground2"}}i.prototype._shaderID="gradient2";class a extends s{constructor(e){super(e)}getType(){return"GradientBackground3"}}a.prototype._shaderID="gradient3";class r extends s{constructor(e){super(e),this.skylineFading=0,this.horizonHeight=0,this.setValues(e)}getType(){return"GradientBackground4"}loadUniforms(e,t,s,i,a,r){super.loadUniforms(e,t,s,i,a,r),t.uniform1f(s.skylineFading,this.skylineFading),t.uniform1f(s.horizonHeight,this.horizonHeight)}}return r.prototype._shaderID="gradient4",{GradientBackgroundMaterial2:i,GradientBackgroundMaterial3:a,GradientBackgroundMaterial4:r}}),define("DS/Materials/DeferrableMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/Material"],function(e,t){"use strict";class s extends t{constructor(){super()}updateDeferredMaterials(t){e.cleanDeferredCache(this.id);for(var s=0;s<this._deferredMaterials.length;s++)this._deferredMaterials[s]=this;this._deferredMaterials[e.MaterialToUse.transparentShadowMaterial]=null,this._deferredMaterials[e.MaterialToUse.ZOnlyMaterial]=this.getZOnlyMaterial(),this._deferredMaterialsInit=!0}_setMaterialShaderOptions(e,t,s,i,a,r){super._setMaterialShaderOptions(e,t,s,i,a,r)}clone(e){return void 0===e&&(e=new s),super.clone(e),e}}return s.prototype.deferrable=!0,s}),define("DS/Materials/MeshLambertMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/DeferrableMaterial","DS/Materials/PDSFXData"],function(e,t,s){"use strict";var i=new e.Color;class a extends t{constructor(t){super(),this.color=new e.Color(16777215),this.ambient=new e.Color(16777215),this.emissive=new e.Color(0),this.wrapAround=!1,this.wrapRGB=new e.Vector3(1,1,1),this.map=null,this.specularMap=null,this.envMap=null,this.combine=e.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.shading=e.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.lights=!0,this.numSupportedMorphTargets=0,this.numSupportedMorphNormals=0,this._usePhongLighting=!0,this.setValues(t)}_getTextures(e){var t=super._getTextures(e);return t=t.concat([this.map,this.specularMap])}getType(){return"Lambert"}_dump(){var e=super._dump();return e.color=this.color.toArray(),this.map&&(e.color="textured"),e}_transparencyOnGPU(e){return super._transparencyOnGPU(e)||this.map&&this.transparent}areTexturesLoaded(){return!!super.areTexturesLoaded()&&!(this.envMap&&!this.envMap._canBeUsed())}activatePDSFX(e){e=e||{},this._PDSFXData=new s,this._PDSFXData.PDSFX=!0,this._setDefaultPDSFXOverridableFunctions()}clone(){var e=new a;return super.clone(e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e.numSupportedMorphTargets=this.numSupportedMorphTargets,e.numSupportedMorphNormals=this.numSupportedMorphNormals,e}loadUniforms(e,t,s,a,r,n){var o;s.ambient&&(o=e.gammaInput?i.copyToLinear(this.ambient,e.simpleGamma):this.ambient,t.uniform3f(s.ambient,o.r,o.g,o.b)),s.emissive&&(o=e.gammaInput?i.copyToLinear(this.emissive,e.simpleGamma):this.emissive,t.uniform3f(s.emissive,o.r,o.g,o.b)),s.wrapRGB&&this.wrapAround&&t.uniform3f(s.wrapRGB,this.wrapRGB.x,this.wrapRGB.y,this.wrapRGB.z),e.loadUniformsCommon(t,this,s,a,r,n)}}return a.prototype._shaderID="lambert",a.prototype._autoForceSide=!0,a}),define("DS/Materials/ParticleBasicMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/DeferrableMaterial","DS/Materials/PDSFXData","DS/Materials/DeferredCaches"],function(e,t,s,i){"use strict";class a extends t{constructor(t){super(),this.color=new e.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}_getTextures(e){var t=super._getTextures(e);return t=t.concat([this.map])}_setMaterialShaderOptions(e,t,s,i,a,r){super._setMaterialShaderOptions(e,t,s,i,a,r),e.selectionMaterial&&!e.alphaTest&&(e.alphaTest=.01)}_dump(){var e=super._dump(this);return e.color=this.color.toArray(),this.map&&(e.color="textured"),e.size=this.size,e}clone(){var e=new a;return super.clone(e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e}getType(){return this._isFromGAS?"GASPoint":"Point"}activatePDSFX(e){e=e||{},this._PDSFXData=new s,this._PDSFXData.PDSFX=!0,this._setDefaultPDSFXOverridableFunctions()}_canUseLights(){return!1}loadUniforms(e,t,s,i,a,r){e.loadGASUniforms(t,this,s,i,null),s.scale&&t.uniform1f(s.scale,e.domElement.height/2),s.size&&t.uniform1f(s.size,this.size?this.size:1),s.map&&e.loadTexture(t,s.map,this.map)}getPredefinedMaterial(t,s,r){var n=this.getBaseId();switch(n+="Point",n+="S"+this.side,n+="CP"+this.enableClipPlanes,n+="Type"+s,s){case e.DefaultAppearanceMode.__QA_AUTOMATION__:if(n+="Col"+this.color.getHex(),n+="Op"+this._opacity,n="id"+(n+="SA"+this.sizeAttenuation).hashCode(),!i.PredefinedMaterials.has(n)){var o=new a({size:5,side:this.side,enableClipPlanes:this.enableClipPlanes,color:this.color,sizeAttenuation:this.sizeAttenuation,opacity:this._opacity});o._activatePDSFXMigrated(),o._PDSFXData._uniqueID="ParticleQAAutomationPDSFX";o.setPDSFXOverridableFunctions({},{ProcessFinalColor:function(e,t){const s=e.variableHandler,i=e.pdsfxDefines,a=s.dereference()+t[0];return`\n                                    ${a} = ${(e=>s.vec4(e))()}(${e.vGetAlbedo()}, ${e.vGetOpacity()});\n                                    ${i.gammaInput?`\n                                        ${a}.r = sqrt(${a}.r);\n                                        ${a}.g = sqrt(${a}.g);\n                                        ${a}.b = sqrt(${a}.b);\n                                        `:""}\n                                    ${i.gammaOutput?`\n                                        ${a}.r = sqrt(${a}.r);\n                                        ${a}.g = sqrt(${a}.g);\n                                        ${a}.b = sqrt(${a}.b);\n                                        `:""}\n                                `}});var l=new i.DeferredMaterial(o);i.PredefinedMaterials.set(n,l)}break;default:return this}return i.PredefinedMaterials.get(n).get(this)}getZOnlyMaterial(){return this}_defaultPDSFXOverridableFunctions(){var t=super._defaultPDSFXOverridableFunctions();return Object.assign(t.vertex,{ComputePointSize:e._ShaderChunk.PDSFXComputePointSize_VS}),t}updateDeferredMaterials(t){super.updateDeferredMaterials(t),this._deferredMaterials[e.MaterialToUse.shadowMapDepthMaterial]=null,this._deferredMaterials[e.MaterialToUse.normalDepthIoRRoughnessMaterial]=null,this._deferredMaterials[e.MaterialToUse.normalDepthMaterial]=null,this._deferredMaterials[e.MaterialToUse.oitAccumMaterial]=null,this._deferredMaterials[e.MaterialToUse.oitRevealMaterial]=null,this._deferredMaterials[e.MaterialToUse.texCoordMaterial]=null}}return a.prototype._shaderID="particle_basic",a.prototype.__dimension=0,a.prototype.targetPrimitiveType="POINTS",a}),define("DS/Materials/AbstractAmbianceMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/Material"],function(e,t){"use strict";return class extends t{constructor(t){super(),this.ambienceMatrix=new e.Matrix4,this.ambienceMatrix2=new e.Matrix4,this.useHDR=!1,this.useHDRFloat=!1,this.useSRGB=!1,this.useLatLongMap=!1,this.useAmbianceV2=!1,this.tEnvMap=null,this.tEnvMap2=null,this.useEnvMap2=!1,this.envMapExposure=1,this.envMapExposure2=1,this.blurCoef=0,this.intensity=1,this.invScreenSize=new e.Vector2,this.invSize=new e.Vector2,this.offset=new e.Vector2,this.startOffset=new e.Vector2,this.endOffset=new e.Vector2,this.ambient=new e.Color(16777215),this.backgroundColor=new e.Color(16777215),this.backgroundAlpha=1,this.groundPosition=new e.Vector3,this.groundPositionLowPart=new e.Vector3,this.groundPosition2=new e.Vector3,this.groundPosition2LowPart=new e.Vector3,this.groundNormal=new e.Vector3(0,0,1),this.groundHeight=new e.Vector3(0,0,.23),this.groundRadius=5e3,this.groundRadius2=5e3,this.groundOffset=0,this.groundScale=.78,this.groundScale2=.78,this.transitionCoef=0,this.withGround=0,this.withPlane=0,this.planeColor=new e.Color(16777215),this.tFlip=-1,this.cameraSize=new e.Vector3,this.cameraSight=new e.Vector3,this.cameraUp=new e.Vector3,this.cameraRight=new e.Vector3,this.sceneHeight=new e.Vector3(0,0,.15),this.near=1,this.right=1,this.up=1,this.projectionConic=1,this.defines={},this.enableClipPlanes=!1,this.setValues(t),t&&t.defines&&Object.assign(this.defines,t.defines)}clone(){throw"Unsupported operation"}setUseEnvMap2(e){this.useEnvMap2!==e&&(this.useEnvMap2=e,this.needsUpdate=!0)}setUseLatLongMap(e){this.useLatLongMap!==e&&(this.useLatLongMap=e,this.needsUpdate=!0)}setUseAmbianceV2(e){this.useAmbianceV2!==e&&(this.useAmbianceV2=e,this.needsUpdate=!0)}setUseHDR(e){this.useHDR!==e&&(this.useHDR=e,this.needsUpdate=!0)}setUseSRGB(e){this.useSRGB!==e&&(this.useSRGB=e,this.needsUpdate=!0)}setUseHDRFloat(e){this.useHDRFloat!==e&&(this.useHDRFloat=e,this.needsUpdate=!0)}getPredefinedMaterial(e,t,s){return this}loadUniforms(e,t,s,i,a,r){t.uniform1f(s.envMapExposure,this.envMapExposure),t.uniform1f(s.tFlip,this.tFlip),t.uniform1f(s.groundRadius,this.groundRadius),t.uniform1f(s.groundScale,this.groundScale),t.uniform1f(s.groundOffset,this.groundOffset),t.uniform1f(s.projectionConic,this.projectionConic),t.uniform1f(s.up,this.up),t.uniform1f(s.right,this.right),t.uniform1f(s.near,this.near),t.uniform1f(s.intensity,this.intensity),t.uniform1f(s.withGround,this.withGround),t.uniform1f(s.blurCoef,this.blurCoef),t.uniform1f(s.envMapExposure2,this.envMapExposure2),t.uniform1f(s.groundRadius2,this.groundRadius2),t.uniform1f(s.groundScale2,this.groundScale2),t.uniform1f(s.transitionCoef,this.transitionCoef),t.uniform1f(s.withPlane,this.withPlane),t.uniform1f(s.backgroundAlpha,this.backgroundAlpha),t.uniform2f(s.startOffset,this.startOffset.x,this.startOffset.y),t.uniform2f(s.endOffset,this.endOffset.x,this.endOffset.y),t.uniform2f(s.invScreenSize,this.invScreenSize.x,this.invScreenSize.y),t.uniform2f(s.invSize,this.invSize.x,this.invSize.y),t.uniform2f(s.offset,this.offset.x,this.offset.y),t.uniform3f(s.ambient,this.ambient.r,this.ambient.g,this.ambient.b),t.uniform3f(s.groundPosition,this.groundPosition.x,this.groundPosition.y,this.groundPosition.z),t.uniform3f(s.groundPositionLowPart,this.groundPositionLowPart.x,this.groundPositionLowPart.y,this.groundPositionLowPart.z),t.uniform3f(s.groundPosition2,this.groundPosition2.x,this.groundPosition2.y,this.groundPosition2.z),t.uniform3f(s.groundPosition2LowPart,this.groundPosition2LowPart.x,this.groundPosition2LowPart.y,this.groundPosition2LowPart.z),t.uniform3f(s.groundNormal,this.groundNormal.x,this.groundNormal.y,this.groundNormal.z),t.uniform3f(s.groundHeight,this.groundHeight.x,this.groundHeight.y,this.groundHeight.z),t.uniform3f(s.cameraSize,this.cameraSize.x,this.cameraSize.y,this.cameraSize.z),t.uniform3f(s.cameraSight,this.cameraSight.x,this.cameraSight.y,this.cameraSight.z),t.uniform3f(s.cameraUp,this.cameraUp.x,this.cameraUp.y,this.cameraUp.z),t.uniform3f(s.cameraRight,this.cameraRight.x,this.cameraRight.y,this.cameraRight.z),t.uniform3f(s.sceneHeight,this.sceneHeight.x,this.sceneHeight.y,this.sceneHeight.z),t.uniform3f(s.planeColor,this.planeColor.r,this.planeColor.g,this.planeColor.b),t.uniform3f(s.backgroundColor,this.backgroundColor.r,this.backgroundColor.g,this.backgroundColor.b),t.uniformMatrix4fv(s.ambienceMatrix,!1,e.float32Matrix4x4Temp.setDoubles(this.ambienceMatrix.elements)),t.uniformMatrix4fv(s.ambienceMatrix2,!1,e.float32Matrix4x4Temp.setDoubles(this.ambienceMatrix2.elements)),s.tEnvMap&&e.loadTexture(t,s.tEnvMap,this.tEnvMap),s.tEnvMap2&&e.loadTexture(t,s.tEnvMap2,this.tEnvMap2);var n=1,o=1;if(this.tEnvMap&&this.tEnvMap.hdr&&s.envMapHDRSize&&(this.tEnvMap.image?(n=parseInt(this.tEnvMap.image.width),o=parseInt(this.tEnvMap.image.height)):(n=parseInt(this.tEnvMap.width),o=parseInt(this.tEnvMap.height)),t.uniform2f(s.envMapHDRSize,n,o)),this.tEnvMap2&&(s.envMapHDRToMipsRatio||s.envMapHDRSize2)){var l=1;l=this.tEnvMap2.image?parseInt(this.tEnvMap2.image.width)/n:parseInt(this.tEnvMap2.width)/n,t.uniform1f(s.envMapHDRToMipsRatio,l),this.tEnvMap2.image?(n=parseInt(this.tEnvMap2.image.width),o=parseInt(this.tEnvMap2.image.height)):(n=parseInt(this.tEnvMap2.width),o=parseInt(this.tEnvMap2.height)),t.uniform2f(s.envMapHDRSize2,n,o)}}_setMaterialShaderOptions(e,t,s,i,a,r){super._setMaterialShaderOptions(e,t,s,i,a,r),e.envMap2=this.useEnvMap2,e.useHDR=this.useHDR,e.useHDRFloat=this.useHDRFloat,e.useSRGB=this.useSRGB,e.useLatLongMap=this.useLatLongMap,e.useAmbianceV2=this.useAmbianceV2}areTexturesLoaded(){return!(!super.areTexturesLoaded()||this.tEnvMap&&!this.tEnvMap._canBeUsed()||this.tEnvMap2&&!this.tEnvMap2._canBeUsed())}}}),define("DS/Materials/FiniteEnvMapMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/AbstractAmbianceMaterial"],function(e,t){"use strict";class s extends t{constructor(e){super(e)}getType(){return"FiniteEnvMap"}}return s.prototype._shaderID="finiteenvmap",s}),define("DS/Materials/FiniteTransitionEnvMapMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/AbstractAmbianceMaterial"],function(e,t){"use strict";class s extends t{constructor(e){super(e)}getType(){return"FiniteTransition"}}return s.prototype._shaderID="finitetransition",s}),define("DS/Materials/SimpleMapMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/AbstractAmbianceMaterial"],function(e,t){"use strict";class s extends t{constructor(e){super(e)}getType(){return"SimpleMap"}}return s.prototype._shaderID="simplemap",s}),define("DS/Materials/LatLongMapMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/AbstractAmbianceMaterial"],function(e,t){"use strict";class s extends t{constructor(e){super(e)}getType(){return"LatLongMap"}}return s.prototype._shaderID="latlong",s}),define("DS/Materials/CubeMapMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/AbstractAmbianceMaterial"],function(e,t){"use strict";class s extends t{constructor(e){super(e)}getType(){return"CubeMap"}}return s.prototype._shaderID="cubemap",s}),define("DS/Materials/PhysicalMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/DeferrableMaterial","DS/Materials/PDSFXData"],function(e,t,s){"use strict";let i,a;const r=new e.Matrix4,n={GGX:0,ASHIKMIN:1,BECKMANN:2,ESTEVEZKULLA:3};e._BRDFS=n;class o{constructor(e){this.hdr=e.hdr||null,this.brdf=n.GGX,this.direct=e.direct||!1,this.name=e.name||"",this.mips=e.mips||null,this.box=e.box?e.box.clone():null,this.position=e.position?e.position.clone():null,this.curID=-1}_useCustom(){return null!==this.hdr}clone(){return new o({hdr:this.hdr,direct:this.direct,name:this.name,mips:this.mips,box:this.box,position:this.position})}}e.IBLOverrider=o;const l={SPEC_GLOSS:0,SPEC_GLOSS_NRE:.5,DSPBR:1,DSPBR21x:2,DSPBR22x:3,DSPBR25x:4};e.DSPBRSubTypes={Generic:0,Metal:1,Glass:2,Plastic:3,Textile:4,Leather:5,"Car Paint":6,Emissive:7,Basic:8,Wood:9};const h={_NO_SHEEN:"NONE",VELVET:"USE_VELVET",VELVET_SOFT:"USE_SOFT_VELVET",SATIN:"USE_SATIN"};e.SheenMode=h;const p={None:-1,Apple:0,Chicken1:1,Chicken2:2,Cream:3,Ketchup:4,Marble:5,Potato:6,Skimmilk:7,Skin1:8,Skin2:9,Wholemilk:10};e.SubsurfaceScatteringPresets=p;var d=[{absorptionCoeffs:[.003,.0034,.046],scatteringCoeffs:[2.29,2.39,1.97]},{absorptionCoeffs:[.015,.077,.19],scatteringCoeffs:[.15,.21,.38]},{absorptionCoeffs:[.018,.088,.2],scatteringCoeffs:[.19,.25,.32]},{absorptionCoeffs:[2e-4,.0028,.0163],scatteringCoeffs:[7.38,5.47,3.15]},{absorptionCoeffs:[.061,.97,1.45],scatteringCoeffs:[.18,.07,.03]},{absorptionCoeffs:[.0021,.0041,.0071],scatteringCoeffs:[2.19,2.62,3]},{absorptionCoeffs:[.0024,.009,.12],scatteringCoeffs:[.68,.7,.55]},{absorptionCoeffs:[.0014,.0025,.0142],scatteringCoeffs:[.7,1.22,1.9]},{absorptionCoeffs:[.032,.17,.48],scatteringCoeffs:[.74,.88,1.01]},{absorptionCoeffs:[.013,.07,.145],scatteringCoeffs:[1.09,1.59,1.79]},{absorptionCoeffs:[.0011,.0024,.014],scatteringCoeffs:[2.55,3.21,3.77]}];class u{constructor(e){this.envMipMap=e.envMipMap||null,this.overrideIBL=e.overrideIBL||null}clone(){return new u({envMipMap:this.envMipMap,overrideIBL:null!==this.overrideIBL?this.overrideIBL.clone():null})}_useCustom(){return null!==this.overrideIBL&&this.overrideIBL._useCustom()}}e.__DefaultUVTransform__=e.__DefaultUVTransform__||new e.Matrix3;var c=e.__DefaultUVTransform__,f=new e.Color,m=function(e,t,s){t[s+"Map"]=e[s+"Map"],t[s+"AddCoef"]=e[s+"AddCoef"],t[s+"MulCoef"]=e[s+"MulCoef"],t[s+"UvTransform"]=e[s+"UvTransform"],t[s+"UvSlot"]=e[s+"UvSlot"]},S=function(e,t,s,i){i?t[s].copy(e[s]):t[s]=e[s],m(e,t,s)},C=function(e){return null===e||e.isIdentity()?c:e};const _=new Set;_.add("__parent__"),_.add("__needDisplacementUpdate"),_.add("_sssLUT"),_.add("_scatteringCoeffs"),_.add("_absorptionCoeffs"),_.add("_translucencyDepth"),_.add("_updateSSS"),_.add("_subsurface");class M{constructor(e,t){this.__parent__=t}loadUniforms(e,t,s,i){}setParameters(t){var s=this.__parent__,i={};if(s&&!s.needsUpdate&&this.setMaterialShaderOptions(i),e.setValuesToObject(this,t,_),s&&!s.needsUpdate){var a={};this.setMaterialShaderOptions(a);for(var r=Object.keys(i),n=0;n<r.length;n++)if(i[r[n]]!==a[r[n]]){s.needsUpdate=!0;break}}}isEnabled(){return!1}setMaterialShaderOptions(e){}getTextures(){return[]}_isTextureAvailable(e){return t.__isTextureAvailable(this,e)}clone(e){return null}}const v=new Set(["flakesCoverage","flakesCoverageMap","flakesCoverageAddCoef","flakesCoverageMulCoef","flakesCoverageUvTransform","flakesCoverageUvSlot","flakesSize","flakesSizeMap","flakesSizeAddCoef","flakesSizeMulCoef","flakesSizeUvTransform","flakesSizeUvSlot","flakesRoughness","flakesRoughnessMap","flakesRoughnessAddCoef","flakesRoughnessMulCoef","flakesRoughnessUvTransform","flakesRoughnessUvSlot","flakesColor","flakesColorMap","flakesColorAddCoef","flakesColorMulCoef","flakesColorUvTransform","flakesColorUvSlot","flipFlopColor","flipFlopColorMap","flipFlopColorAddCoef","flipFlopColorMulCoef","flipFlopColorUvTransform","flipFlopColorUvSlot","flipFlop","flipFlopMap","flipFlopAddCoef","flipFlopMulCoef","flipFlopUvTransform","flipFlopUvSlot"]);class g extends M{constructor(t,s){super(t,s),this.flakesCoverage=0,this.flakesCoverageMap=null,this.flakesCoverageAddCoef=null,this.flakesCoverageMulCoef=null,this.flakesCoverageUvTransform=c,this.flakesCoverageUvSlot=1,this.flakesSize=0,this.flakesSizeMap=null,this.flakesSizeAddCoef=null,this.flakesSizeMulCoef=null,this.flakesSizeUvTransform=c,this.flakesSizeUvSlot=1,this.flakesRoughness=0,this.flakesRoughnessMap=null,this.flakesRoughnessAddCoef=null,this.flakesRoughnessMulCoef=null,this.flakesRoughnessUvTransform=c,this.flakesRoughnessUvSlot=1,this.flakesColor=new e.Color(16777215),this.flakesColorMap=null,this.flakesColorAddCoef=null,this.flakesColorMulCoef=null,this.flakesColorUvTransform=c,this.flakesColorUvSlot=1,this.flipFlopColor=new e.Color(16777215),this.flipFlopColorMap=null,this.flipFlopColorAddCoef=null,this.flipFlopColorMulCoef=null,this.flipFlopColorUvTransform=c,this.flipFlopColorUvSlot=1,this.flipFlop=0,this.flipFlopMap=null,this.flipFlopAddCoef=null,this.flipFlopMulCoef=null,this.flipFlopUvTransform=c,this.flipFlopUvSlot=1,this.setParameters(t)}loadUniforms(e,t,s,i){var a;this.isEnabled()&&(s.flakesColor&&(a=e.gammaInput?f.copyToLinear(this.flakesColor,e.simpleGamma):this.flakesColor,t.uniform3f(s.flakesColor,a.r,a.g,a.b)),s.flakesColorMap&&e.loadTexture(t,s.flakesColorMap,this.flakesColorMap),s.flakesColorMulCoef&&(t.uniform3f(s.flakesColorMulCoef,this.flakesColorMulCoef.x,this.flakesColorMulCoef.y,this.flakesColorMulCoef.z),t.uniform3f(s.flakesColorAddCoef,this.flakesColorAddCoef.x,this.flakesColorAddCoef.y,this.flakesColorAddCoef.z)),s.flakesCoverage&&t.uniform1f(s.flakesCoverage,this.flakesCoverage),s.flakesCoverageMap&&e.loadTexture(t,s.flakesCoverageMap,this.flakesCoverageMap),s.flakesCoverageMulCoef&&(t.uniform1f(s.flakesCoverageMulCoef,this.flakesCoverageMulCoef),t.uniform1f(s.flakesCoverageAddCoef,this.flakesCoverageAddCoef)),s.flakesSize&&t.uniform1f(s.flakesSize,this.flakesSize),s.flakesSizeMap&&e.loadTexture(t,s.flakesSizeMap,this.flakesSizeMap),s.flakesSizeMulCoef&&(t.uniform1f(s.flakesSizeMulCoef,this.flakesSizeMulCoef),t.uniform1f(s.flakesSizeAddCoef,this.flakesSizeAddCoef)),s.flakesRoughness&&t.uniform1f(s.flakesRoughness,this.flakesRoughness),s.flakesRoughnessMap&&e.loadTexture(t,s.flakesRoughnessMap,this.flakesRoughnessMap),s.flakesRoughnessMulCoef&&(t.uniform1f(s.flakesRoughnessMulCoef,this.flakesRoughnessMulCoef),t.uniform1f(s.flakesRoughnessAddCoef,this.flakesRoughnessAddCoef)),s.flipFlop&&t.uniform1f(s.flipFlop,this.flipFlop),s.flipFlopMap&&e.loadTexture(t,s.flipFlopMap,this.flipFlopMap),s.flipFlopMulCoef&&(t.uniform1f(s.flipFlopMulCoef,this.flipFlopMulCoef),t.uniform1f(s.flipFlopAddCoef,this.flipFlopAddCoef)),s.flipFlopColor&&(a=e.gammaInput?f.copyToLinear(this.flipFlopColor,e.simpleGamma):this.flipFlopColor,t.uniform3f(s.flipFlopColor,a.r,a.g,a.b)),s.flipFlopColorMap&&e.loadTexture(t,s.flipFlopColorMap,this.flipFlopColorMap),s.flipFlopColorMulCoef&&(t.uniform3f(s.flipFlopColorMulCoef,this.flipFlopColorMulCoef.x,this.flipFlopColorMulCoef.y,this.flipFlopColorMulCoef.z),t.uniform3f(s.flipFlopColorAddCoef,this.flipFlopColorAddCoef.x,this.flipFlopColorAddCoef.y,this.flipFlopColorAddCoef.z)))}isEnabled(){var e=this.__parent__._PDSFXData;return this.flakesCoverage>0||this._isTextureAvailable("flakesCoverageMap")||e&&e._extraDefines.dspbrFlakes}clone(e){return new g(this,e)}setParameters(e){super.setParameters(e),this.flakesRoughnessUvTransform=C(this.flakesRoughnessUvTransform),this.flakesSizeUvTransform=C(this.flakesSizeUvTransform),this.flakesCoverageUvTransform=C(this.flakesCoverageUvTransform),this.flakesColorUvTransform=C(this.flakesColorUvTransform),this.flipFlopUvTransform=C(this.flipFlopUvTransform),this.flipFlopColorUvTransform=C(this.flipFlopColorUvTransform)}setMaterialShaderOptions(e){var t=this.isEnabled(),s=this.__parent__._PDSFXData,i=t&&(this._isTextureAvailable("flipFlopMap")||this.flipFlop>0||s&&s._extraDefines.flipFlop);Object.assign(e,{dspbrFlakes:t,flakesSizeMap:t&&this._isTextureAvailable("flakesSizeMap"),flakesSizeMulCoef:t&&null!==this.flakesSizeMulCoef,flakesSizeAddCoef:t&&null!==this.flakesSizeAddCoef,flakesCoverageMap:t&&this._isTextureAvailable("flakesCoverageMap"),flakesCoverageMulCoef:t&&null!==this.flakesCoverageMulCoef,flakesCoverageAddCoef:t&&null!==this.flakesCoverageAddCoef,flakesRoughnessMap:t&&this._isTextureAvailable("flakesRoughnessMap"),flakesRoughnessMulCoef:t&&null!==this.flakesRoughnessMulCoef,flakesRoughnessAddCoef:t&&null!==this.flakesRoughnessAddCoef,flakesColorMap:t&&this._isTextureAvailable("flakesColorMap"),flakesColorMapLinear:t&&!!this.flakesColorMap&&this.flakesColorMap.hdr,flakesColorMulCoef:t&&null!==this.flakesColorMulCoef,flakesColorAddCoef:t&&null!==this.flakesColorAddCoef,flipFlop:i,flipFlopColorMap:i&&this._isTextureAvailable("flipFlopColorMap"),flipFlopColorMapLinear:i&&!!this.flipFlopColorMap&&this.flipFlopColorMap.hdr,flipFlopColorMulCoef:i&&null!==this.flipFlopColorMulCoef,flipFlopColorAddCoef:i&&null!==this.flipFlopColorAddCoef,flipFlopMap:i&&this._isTextureAvailable("flipFlopMap"),flipFlopMulCoef:i&&null!==this.flipFlopMulCoef,flipFlopAddCoef:i&&null!==this.flipFlopAddCoef})}getTextures(){return[this.flakesSizeMap,this.flakesCoverageMap,this.flakesRoughnessMap,this.flakesColorMap,this.flipFlopColorMap,this.flipFlopMap]}}const P=new Set(["flakes","flakesColor","flakesColorMulCoef","flakesColorAddCoef","flakesBump","flakesDensity","flakesScale","flakesRoughness","pearlFlakesColor","pearlFlakesColorMulCoef","pearlFlakesColorAddCoef","pearlFlakesBump","pearlFlakesDensity"]);class D extends M{constructor(t,s){super(t,s),this.flakes=!1,this.flakesColor=new e.Color(0),this.flakesColorMulCoef=new e.Vector3(1,1,1),this.flakesColorAddCoef=new e.Vector3(0,0,0),this.flakesBump=0,this.flakesDensity=0,this.flakesScale=0,this.flakesRoughness=0,this.pearlFlakesColor=new e.Color(0),this.pearlFlakesColorMulCoef=new e.Vector3(1,1,1),this.pearlFlakesColorAddCoef=new e.Vector3(0,0,0),this.pearlFlakesBump=0,this.pearlFlakesDensity=0,this.setParameters(t)}loadUniforms(e,t,s,i){var a;this.isEnabled()&&(s.flakesColor&&(a=e.gammaInput?f.copyToLinear(this.flakesColor,e.simpleGamma):this.flakesColor,t.uniform3f(s.flakesColor,a.r,a.g,a.b)),s.pearlFlakesColor&&(a=e.gammaInput?f.copyToLinear(this.pearlFlakesColor,e.simpleGamma):this.pearlFlakesColor,t.uniform3f(s.pearlFlakesColor,a.r,a.g,a.b)),s.flakesBump&&t.uniform1f(s.flakesBump,this.flakesBump),s.flakesDensity&&t.uniform1f(s.flakesDensity,this.flakesDensity),s.flakesScale&&t.uniform1f(s.flakesScale,this.flakesScale),s.flakesRoughness&&t.uniform1f(s.flakesRoughness,this.flakesRoughness),s.pearlFlakesDensity&&t.uniform1f(s.pearlFlakesDensity,this.pearlFlakesDensity),s.pearlFlakesBump&&t.uniform1f(s.pearlFlakesBump,this.pearlFlakesBump),this.flakesColorMulCoef&&s.flakesColorMulCoef&&t.uniform3f(s.flakesColorMulCoef,this.flakesColorMulCoef.x,this.flakesColorMulCoef.y,this.flakesColorMulCoef.z),this.flakesColorAddCoef&&s.flakesColorAddCoef&&t.uniform3f(s.flakesColorAddCoef,this.flakesColorAddCoef.x,this.flakesColorAddCoef.y,this.flakesColorAddCoef.z),this.pearlFlakesColorMulCoef&&s.pearlFlakesColorMulCoef&&t.uniform3f(s.pearlFlakesColorMulCoef,this.pearlFlakesColorMulCoef.x,this.pearlFlakesColorMulCoef.y,this.pearlFlakesColorMulCoef.z),this.pearlFlakesColorAddCoef&&s.pearlFlakesColorAddCoef&&t.uniform3f(s.pearlFlakesColorAddCoef,this.pearlFlakesColorAddCoef.x,this.pearlFlakesColorAddCoef.y,this.pearlFlakesColorAddCoef.z))}isEnabled(){return this.flakes}clone(e){return new D(this,e)}setMaterialShaderOptions(e){Object.assign(e,{specGlossFlakes:this.isEnabled()})}}const T=new Set(["clearCoat","clearCoatMap","clearCoatAddCoef","clearCoatMulCoef","clearCoatUvTransform","clearCoatUvSlot","clearCoatRoughness","clearCoatRoughnessMap","clearCoatRoughnessAddCoef","clearCoatRoughnessMulCoef","clearCoatRoughnessUvTransform","clearCoatRoughnessUvSlot","coatingGlossinessMap","coatingGlossinessMulCoef","coatingGlossinessAddCoef","clearCoatColor","clearCoatColorMap","clearCoatColorAddCoef","clearCoatColorMulCoef","clearCoatColorUvTransform","clearCoatColorUvSlot","clearCoatNormalMap","clearCoatNormalAddCoef","clearCoatNormalMulCoef","clearCoatNormalUvTransform","clearCoatNormalUvSlot","clearCoatNormalMapFlipY","clearCoatNormalScaleMulCoef","clearCoatNormalScaleAddCoef","clearCoatNormalScale","orangePeel","orangePeelScale"]);class y extends M{constructor(t,s){super(t,s),this.clearCoat=0,this.clearCoatMap=null,this.clearCoatAddCoef=null,this.clearCoatMulCoef=null,this.clearCoatUvTransform=c,this.clearCoatUvSlot=1,this.clearCoatRoughness=0,this.clearCoatRoughnessMap=null,this.clearCoatRoughnessAddCoef=null,this.clearCoatRoughnessMulCoef=null,this.clearCoatRoughnessUvTransform=c,this.clearCoatRoughnessUvSlot=1,this.clearCoatColor=new e.Color(3684408),this.clearCoatColorMap=null,this.clearCoatColorAddCoef=null,this.clearCoatColorMulCoef=null,this.clearCoatColorUvTransform=c,this.clearCoatColorUvSlot=1,this.coatingGlossinessMap=null,this.coatingGlossinessMulCoef=null,this.coatingGlossinessAddCoef=null,this.clearCoatNormalMap=null,this.clearCoatNormalAddCoef=null,this.clearCoatNormalMulCoef=null,this.clearCoatNormalUvTransform=c,this.clearCoatNormalUvSlot=1,this.clearCoatNormalMapFlipY=!1,this.clearCoatNormalScaleMulCoef=1,this.clearCoatNormalScaleAddCoef=0,this.clearCoatNormalScale=1,this.orangePeel=!1,this.orangePeelScale=0,this.setParameters(t)}loadUniforms(e,t,s,i){if(this.isEnabled()){var a;if(s.clearCoat&&t.uniform1f(s.clearCoat,this.clearCoat),s.clearCoatMap&&e.loadTexture(t,s.clearCoatMap,this.clearCoatMap),s.clearCoatMulCoef&&t.uniform1f(s.clearCoatMulCoef,this.clearCoatMulCoef),s.clearCoatAddCoef&&t.uniform1f(s.clearCoatAddCoef,this.clearCoatAddCoef),s.clearCoatRoughness&&t.uniform1f(s.clearCoatRoughness,this.clearCoatRoughness),s.clearCoatRoughnessMap&&e.loadTexture(t,s.clearCoatRoughnessMap,this.clearCoatRoughnessMap),s.clearCoatRoughnessMulCoef&&(t.uniform1f(s.clearCoatRoughnessMulCoef,this.clearCoatRoughnessMulCoef),t.uniform1f(s.clearCoatRoughnessAddCoef,this.clearCoatRoughnessAddCoef)),s.coatingGlossinessMap&&e.loadTexture(t,s.coatingGlossinessMap,this.coatingGlossinessMap),s.coatingGlossinessMulCoef&&(t.uniform1f(s.coatingGlossinessMulCoef,this.coatingGlossinessMulCoef),t.uniform1f(s.coatingGlossinessAddCoef,this.coatingGlossinessAddCoef)),s.clearCoatNormalMap&&e.loadTexture(t,s.clearCoatNormalMap,this.clearCoatNormalMap),s.clearCoatNormalMulCoef&&(t.uniform3f(s.clearCoatNormalAddCoef,this.clearCoatNormalAddCoef.x,this.clearCoatNormalAddCoef.y,this.clearCoatNormalAddCoef.z),t.uniform3f(s.clearCoatNormalMulCoef,this.clearCoatNormalMulCoef.x,this.clearCoatNormalMulCoef.y,this.clearCoatNormalMulCoef.z)),s.clearCoatNormalScale&&t.uniform1f(s.clearCoatNormalScale,this.clearCoatNormalScaleMulCoef*this.clearCoatNormalScale+this.clearCoatNormalScaleAddCoef),s.clearCoatColor)a=e.gammaInput?f.copyToLinear(this.clearCoatColor,e.simpleGamma):this.clearCoatColor,t.uniform3f(s.clearCoatColor,a.r,a.g,a.b);s.clearCoatColorMap&&e.loadTexture(t,s.clearCoatColorMap,this.clearCoatColorMap),s.clearCoatColorMulCoef&&(t.uniform3f(s.clearCoatColorMulCoef,this.clearCoatColorMulCoef.x,this.clearCoatColorMulCoef.y,this.clearCoatColorMulCoef.z),t.uniform3f(s.clearCoatColorAddCoef,this.clearCoatColorAddCoef.x,this.clearCoatColorAddCoef.y,this.clearCoatColorAddCoef.z)),s.orangePeelScale&&s.orangePeelScale&&t.uniform1f(s.orangePeelScale,this.orangePeelScale)}}isEnabled(){var e=this.__parent__._PDSFXData;return this.clearCoat>0||this._isTextureAvailable("clearCoatMap")||e&&e._extraDefines.clearCoat}setMaterialShaderOptions(e){var t=this.isEnabled();Object.assign(e,{clearCoat:t,clearCoatMap:t&&this._isTextureAvailable("clearCoatMap"),clearCoatMulCoef:t&&null!==this.clearCoatMulCoef,clearCoatAddCoef:t&&null!==this.clearCoatAddCoef,clearCoatRoughnessMap:t&&this._isTextureAvailable("clearCoatRoughnessMap"),clearCoatRoughnessMulCoef:t&&null!==this.clearCoatRoughnessMulCoef,clearCoatRoughnessAddCoef:t&&null!==this.clearCoatRoughnessAddCoef,clearCoatColorMap:t&&this._isTextureAvailable("clearCoatColorMap"),clearCoatColorMapLinear:t&&!!this.clearCoatColorMap&&this.clearCoatColorMap.linear,clearCoatColorMulCoef:t&&null!==this.clearCoatColorMulCoef,clearCoatColorAddCoef:t&&null!==this.clearCoatColorAddCoef,coatingGlossinessMap:t&&!e.dspbr&&this._isTextureAvailable("coatingGlossinessMap"),coatingGlossinessMulCoef:t&&!e.dspbr&&null!==this.coatingGlossinessMulCoef,coatingGlossinessAddCoef:t&&!e.dspbr&&null!==this.coatingGlossinessAddCoef,clearCoatNormalMap:t&&this._isTextureAvailable("clearCoatNormalMap"),clearCoatNormalMapFlipY:t&&this.clearCoatNormalMapFlipY,clearCoatNormalMulCoef:t&&null!==this.clearCoatNormalMulCoef,clearCoatNormalAddCoef:t&&null!==this.clearCoatNormalAddCoef,orangePeel:t&&this.orangePeel&&!this.clearCoatNormalMap})}getTextures(){return[this.clearCoatMap,this.clearCoatColorMap,this.coatingGlossinessMap,this.clearCoatRoughnessMap,this.clearCoatNormalMap]}setParameters(e){super.setParameters(e),this.clearCoatUvTransform=C(this.clearCoatUvTransform),this.clearCoatRoughnessUvTransform=C(this.clearCoatRoughnessUvTransform),this.clearCoatColorUvTransform=C(this.clearCoatColorUvTransform),this.clearCoatNormalUvTransform=C(this.clearCoatNormalUvTransform)}clone(e){return new y(this,e)}}const b=new Set(["thinWalled","ior","attenuationColor","attenuationDistance","subsurfaceColor","subsurfaceAnisotropy"]);class x extends M{constructor(t,s){super(t,s),this.attenuationColor=new e.Color(16777215),this.attenuationDistance=1e6,this.subsurfaceColor=new e.Color(0),this.subsurfaceAnisotropy=0,this._sssLUT=null,this._scatteringCoeffs=null,this._absorptionCoeffs=null,this._translucencyDepth=null,this._updateSSS=0,this._subsurface=!1,this.setParameters(t)}loadUniforms(e,t,s,i){this.isEnabled()&&(s.sssLUT?(e.loadTexture(t,s.sssLUT,this._sssLUT),t.uniform3f(s.maxTranslucencyDepth,this._translucencyDepth[0],this._translucencyDepth[1],this._translucencyDepth[2])):s.absorptionCoefficients&&t.uniform3f(s.absorptionCoefficients,this._absorptionCoeffs[0],this._absorptionCoeffs[1],this._absorptionCoeffs[2]))}isEnabled(){return this._subsurface}setMaterialShaderOptions(e){var t=this.isEnabled();Object.assign(e,{subsurface:t,sssLUT:t&&!!this._sssLUT})}setParameters(t){var s=this.__parent__,i=this._subsurface,a=void 0!==t.subsurfacePreset&&t.subsurfacePreset!==p.None,r=t.subsurfaceColor?t.subsurfaceColor:this.subsurfaceColor,n=t.attenuationColor?t.attenuationColor:this.attenuationColor;this._subsurface=r.getHex()>0||a;var o=!0;if(!this._subsurface&&n.getHex()<16711422&&(o=!1,this._subsurface=!0),this._subsurface=this._subsurface&&!s.thinWalled,super.setParameters(t),this._subsurface){if(a){var l=d[t.subsurfacePreset];this.subsurfaceColor=new e.Color(16777215),this._absorptionCoeffs=l.absorptionCoeffs.slice(0),this._scatteringCoeffs=l.scatteringCoeffs.slice(0)}else{var h=this.attenuationColor,u=Math.max(this.attenuationDistance,1e-6),c=this.subsurfaceColor,f=new e.Color(0);f.r=-Math.log(Math.min(.999,Math.max(h.r,.001)))/u,f.b=-Math.log(Math.min(.999,Math.max(h.b,.001)))/u,f.g=-Math.log(Math.min(.999,Math.max(h.g,.001)))/u;var m=new e.Color(0);m.r=1-Math.pow(4.09712+4.20863*c.r-Math.sqrt(9.59217+41.6808*c.r+17.7126*c.r*c.r),2),m.b=1-Math.pow(4.09712+4.20863*c.b-Math.sqrt(9.59217+41.6808*c.b+17.7126*c.b*c.b),2),m.g=1-Math.pow(4.09712+4.20863*c.g-Math.sqrt(9.59217+41.6808*c.g+17.7126*c.g*c.g),2);var S=new e.Color(0);S.r=f.r*(1-m.r),S.g=f.g*(1-m.g),S.b=f.b*(1-m.b),this._absorptionCoeffs=S.toArray();var C=new e.Color(0);C.r=f.r*m.r,C.g=f.g*m.g,C.b=f.b*m.b,this._scatteringCoeffs=C.toArray()}this._updateSSS=o?2:1}s&&this._subsurface!==i&&(s.needsUpdate=!0)}clone(e){return new x(this,e)}}const A=new Set(["thickness","thicknessMap","thicknessAddCoef","thicknessMulCoef","thicknessUvTransform","thicknessUvSlot"]);class U extends M{constructor(e,t){super(e,t),this.thickness=0,this.thicknessMap=null,this.thicknessAddCoef=null,this.thicknessMulCoef=null,this.thicknessUvTransform=c,this.thicknessUvSlot=1,this.setParameters(e)}loadUniforms(e,t,s,i){this.isEnabled()&&(s.thickness&&t.uniform1f(s.thickness,this.thickness),s.thicknessMap&&e.loadTexture(t,s.thicknessMap,this.thicknessMap),s.thicknessAddCoef&&(t.uniform1f(s.thicknessMulCoef,this.thicknessMulCoef),t.uniform1f(s.thicknessAddCoef,this.thicknessAddCoef)))}isEnabled(){if(this.__parent__.thinWalled)return!1;var e=this.__parent__._PDSFXData;return this.thickness>0||this._isTextureAvailable("thicknessMap")||e&&e._extraDefines.thickness}setMaterialShaderOptions(e){var t=this.isEnabled();Object.assign(e,{thicknessMap:t&&this._isTextureAvailable("thicknessMap"),thickness:t,thicknessMulCoef:t&&null!==this.thicknessMulCoef,thicknessAddCoef:t&&null!==this.thicknessAddCoef})}getTextures(){return[this.thicknessMap]}setParameters(e){super.setParameters(e),this.thicknessUvTransform=C(this.thicknessUvTransform)}clone(e){return new U(this,e)}}const F=new Set(["anisotropy","anisotropyMap","anisotropyAddCoef","anisotropyMulCoef","anisotropyUvSlot","anisotropyUvTransform","anisotropyAngle","anisotropyAngleMap","anisotropyAngleAddCoef","anisotropyAngleMulCoef","anisotropyAngleUvSlot","anisotropyAngleUvTransform"]);class E extends M{constructor(e,t){super(e,t),this.anisotropy=0,this.anisotropyMap=null,this.anisotropyAddCoef=null,this.anisotropyMulCoef=null,this.anisotropyUvTransform=c,this.anisotropyUvSlot=1,this.anisotropyAngle=0,this.anisotropyAngleMap=null,this.anisotropyAngleAddCoef=null,this.anisotropyAngleMulCoef=null,this.anisotropyAngleUvTransform=c,this.anisotropyAngleUvSlot=1,this.setParameters(e)}loadUniforms(e,t,s,i){this.isEnabled()&&(s.anisotropy&&t.uniform1f(s.anisotropy,this.anisotropy),s.anisotropyMap&&e.loadTexture(t,s.anisotropyMap,this.anisotropyMap),s.anisotropyMulCoef&&(t.uniform1f(s.anisotropyMulCoef,this.anisotropyMulCoef),t.uniform1f(s.anisotropyAddCoef,this.anisotropyAddCoef)),s.anisotropyAngle&&t.uniform1f(s.anisotropyAngle,this.anisotropyAngle),s.anisotropyAngleMap&&e.loadTexture(t,s.anisotropyAngleMap,this.anisotropyAngleMap),s.anisotropyAngleMulCoef&&(t.uniform1f(s.anisotropyAngleMulCoef,this.anisotropyAngleMulCoef),t.uniform1f(s.anisotropyAngleAddCoef,this.anisotropyAngleAddCoef)))}isEnabled(){var e=this.__parent__._PDSFXData;return this.anisotropy>0||this._isTextureAvailable("anisotropyMap")||e&&e._extraDefines.anisotropy}setMaterialShaderOptions(e){var t=this.isEnabled();Object.assign(e,{anisotropy:t,anisotropyMap:t&&this._isTextureAvailable("anisotropyMap"),anisotropyMulCoef:t&&null!==this.anisotropyMulCoef,anisotropyAddCoef:t&&null!==this.anisotropyAddCoef,anisotropyAngleMap:t&&this._isTextureAvailable("anisotropyAngleMap"),anisotropyAngleMulCoef:t&&null!==this.anisotropyAngleMulCoef,anisotropyAngleAddCoef:t&&null!==this.anisotropyAngleAddCoef})}setParameters(e){super.setParameters(e),this.anisotropyUvTransform=C(this.anisotropyUvTransform),this.anisotropyAngleUvTransform=C(this.anisotropyAngleUvTransform)}getTextures(){return[this.anisotropyMap,this.anisotropyAngleMap]}clone(e){return new E(this,e)}}const I=new Set(["displacementMap","displacementAddCoef","displacementMulCoef","displacementUvTransform","displacementUvSlot","displacementScale","displacementBias"]);class O extends M{constructor(e,t){super(e,t),this.displacementMap=null,this.displacementAddCoef=null,this.displacementMulCoef=null,this.displacementUvTransform=c,this.displacementUvSlot=1,this.displacementScale=1,this.displacementBias=0,this.__needDisplacementUpdate=!1,this.setParameters(e)}loadUniforms(e,t,s,i){if(this.isEnabled()&&s.displacementMap){if(e.loadTexture(t,s.displacementMap,this.displacementMap),this.__needDisplacementUpdate)if(this.__needDisplacementUpdate=!("complete"===this.displacementMap.loadEndStatus||"error"===this.displacementMap.loadEndStatus),!this.__needDisplacementUpdate)this.__parent__._sendEvent("requestShadowMapUpdate");if(s.displacementBias&&t.uniform1f(s.displacementBias,this.displacementBias),s.displacementMapSize){var a=this.displacementMap.getSizes();t.uniform2f(s.displacementMapSize,a.width,a.height)}s.displacementScale&&t.uniform1f(s.displacementScale,this.displacementScale),s.displacementAddCoef&&(t.uniform3f(s.displacementAddCoef,this.displacementAddCoef.x,this.displacementAddCoef.y,this.displacementAddCoef.z),t.uniform3f(s.displacementMulCoef,this.displacementMulCoef.x,this.displacementMulCoef.y,this.displacementMulCoef.z))}}isEnabled(){return this._isTextureAvailable("displacementMap")}setMaterialShaderOptions(e){var t=this.__parent__.__physicalMode,s=!e._isDecal&&this.isEnabled()&&(e.specgloss||t>=l.DSPBR21x);Object.assign(e,{displacementMap:s,displacementAddCoef:s&&null!==this.displacementAddCoef,displacementMulCoef:s&&null!==this.displacementMulCoef})}getTextures(){return[this.displacementMap]}setParameters(e){super.setParameters(e),this.displacementUvTransform=C(this.displacementUvTransform),e&&(this.__needDisplacementUpdate=!!(e.displacementMap||e.displacementAddCoef||e.displacementMulCoef||void 0!==e.displacementBias||void 0!==e.displacementScale||e.displacementUvTransform||void 0!==e.displacementUvSlot))}clone(e){return new O(this,e)}}const L=new Set(["iridescence","iridescenceMap","iridescenceAddCoef","iridescenceMulCoef","iridescenceUvTransform","iridescenceUvSlot","iridescenceIoR","iridescenceThickness","iridescenceThicknessMap","iridescenceThicknessAddCoef","iridescenceThicknessMulCoef","iridescenceThicknessUvTransform","iridescenceThicknessUvSlot"]);class w extends M{constructor(e,t){super(e,t),this.iridescence=0,this.iridescenceMap=null,this.iridescenceAddCoef=null,this.iridescenceMulCoef=null,this.iridescenceUvTransform=c,this.iridescenceUvSlot=1,this.iridescenceThickness=.4,this.iridescenceThicknessMap=null,this.iridescenceThicknessAddCoef=null,this.iridescenceThicknessMulCoef=null,this.iridescenceThicknessUvTransform=c,this.iridescenceThicknessUvSlot=1,this.iridescenceIoR=1.3,this.setParameters(e)}loadUniforms(e,t,s,i){this.isEnabled()&&(t.uniform1f(s.iridescenceIoR,this.iridescenceIoR),s.iridescence&&t.uniform1f(s.iridescence,this.iridescence),s.iridescenceMap&&e.loadTexture(t,s.iridescenceMap,this.iridescenceMap),s.iridescenceAddCoef&&(t.uniform1f(s.iridescenceAddCoef,this.iridescenceAddCoef),t.uniform1f(s.iridescenceMulCoef,this.iridescenceMulCoef)),s.iridescenceThickness&&t.uniform1f(s.iridescenceThickness,this.iridescenceThickness),s.iridescenceThicknessMap&&e.loadTexture(t,s.iridescenceThicknessMap,this.iridescenceThicknessMap),s.iridescenceThicknessAddCoef&&(t.uniform1f(s.iridescenceThicknessAddCoef,this.iridescenceThicknessAddCoef),t.uniform1f(s.iridescenceThicknessMulCoef,this.iridescenceThicknessMulCoef)))}isEnabled(){var e=this.__parent__._PDSFXData;return this.iridescence>0||this._isTextureAvailable("iridescenceMap")||e&&e._extraDefines.iridescence}setMaterialShaderOptions(e){var t=this.isEnabled();Object.assign(e,{iridescence:t,iridescenceMap:t&&this._isTextureAvailable("iridescenceMap"),iridescenceAddCoef:t&&null!==this.iridescenceAddCoef,iridescenceMulCoef:t&&null!==this.iridescenceAddCoef,iridescenceThicknessMap:t&&this._isTextureAvailable("iridescenceThicknessMap"),iridescenceThicknessAddCoef:t&&null!==this.iridescenceThicknessAddCoef,iridescenceThicknessMulCoef:t&&null!==this.iridescenceThicknessMulCoef})}getTextures(){return[this.iridescenceMap,this.iridescenceThicknessMap]}setParameters(e){super.setParameters(e),this.iridescenceThicknessUvTransform=C(this.iridescenceThicknessUvTransform),this.iridescenceUvTransform=C(this.iridescenceUvTransform)}clone(e){return new w(this,e)}}const k=new Set(["sheen","sheenMap","sheenAddCoef","sheenMulCoef","sheenUvTransform","sheenUvSlot","sheenRoughness","sheenRoughnessMap","sheenRoughnessAddCoef","sheenRoughnessMulCoef","sheenRoughnessUvTransform","sheenRoughnessUvSlot","sheenColor","sheenColorMap","sheenColorAddCoef","sheenColorMulCoef","sheenColorUvTransform","sheenColorUvSlot","sheenMode"]);class R extends M{constructor(t,s){super(t,s),this.sheen=0,this.sheenMap=null,this.sheenAddCoef=null,this.sheenMulCoef=null,this.sheenUvTransform=c,this.sheenUvSlot=1,this.sheenRoughness=0,this.sheenRoughnessMap=null,this.sheenRoughnessAddCoef=null,this.sheenRoughnessMulCoef=null,this.sheenRoughnessUvTransform=c,this.sheenRoughnessUvSlot=1,this.sheenColor=new e.Color(0),this.sheenColorMap=null,this.sheenColorAddCoef=null,this.sheenColorMulCoef=null,this.sheenColorUvTransform=c,this.sheenColorUvSlot=1,this.sheenMode=s.__physicalMode>=l.DSPBR21x?h.VELVET_SOFT:h.VELVET,this.setParameters(t)}loadUniforms(e,t,s,i){if(this.isEnabled()){var a;s.sheen&&t.uniform1f(s.sheen,this.sheen),s.sheenMap&&e.loadTexture(t,s.sheenMap,this.sheenMap),s.sheenMulCoef&&(t.uniform1f(s.sheenMulCoef,this.sheenMulCoef),t.uniform1f(s.sheenAddCoef,this.sheenAddCoef)),s.sheenRoughness&&t.uniform1f(s.sheenRoughness,this.sheenRoughness),s.sheenRoughnessMap&&e.loadTexture(t,s.sheenRoughnessMap,this.sheenRoughnessMap),s.sheenRoughnessMulCoef&&(t.uniform1f(s.sheenRoughnessMulCoef,this.sheenRoughnessMulCoef),t.uniform1f(s.sheenRoughnessAddCoef,this.sheenRoughnessAddCoef)),s.sheenColor&&(a=e.gammaInput?f.copyToLinear(this.sheenColor,e.simpleGamma):this.sheenColor,t.uniform3f(s.sheenColor,a.r,a.g,a.b)),s.sheenColorMap&&e.loadTexture(t,s.sheenColorMap,this.sheenColorMap),s.sheenColorMulCoef&&(t.uniform3f(s.sheenColorMulCoef,this.sheenColorMulCoef.x,this.sheenColorMulCoef.y,this.sheenColorMulCoef.z),t.uniform3f(s.sheenColorAddCoef,this.sheenColorAddCoef.x,this.sheenColorAddCoef.y,this.sheenColorAddCoef.z));var r=this.__parent__;s.envMapSheen&&null!==r._sheenData&&e.loadTexture(t,s.envMapSheen,r._sheenData.envMipMap)}}isEnabled(){var e=this.__parent__._PDSFXData;return this.sheen>0||!!this._isTextureAvailable("sheenMap")||e&&e._extraDefines.sheen}setMaterialShaderOptions(e){var t=this.isEnabled();Object.assign(e,{sheen:t,sheenMap:t&&this._isTextureAvailable("sheenMap"),sheenMulCoef:t&&null!==this.sheenMulCoef,sheenAddCoef:t&&null!==this.sheenAddCoef,sheenColorMap:t&&this._isTextureAvailable("sheenColorMap"),sheenColorMapLinear:t&&!!this.sheenColorMap&&this.sheenColorMap.hdr,sheenColorMulCoef:t&&null!==this.sheenColorMulCoef,sheenColorAddCoef:t&&null!==this.sheenColorAddCoef,sheenRoughnessMap:t&&this._isTextureAvailable("sheenRoughnessMap"),sheenRoughnessMulCoef:t&&null!==this.sheenRoughnessMulCoef,sheenRoughnessAddCoef:t&&null!==this.sheenRoughnessAddCoef,sheenMode:t&&this.sheenMode})}getTextures(){return[this.sheenMap,this.sheenColorMap,this.sheenRoughnessMap]}setParameters(e){super.setParameters(e),this.sheenUvTransform=C(this.sheenUvTransform),this.sheenRoughnessUvTransform=C(this.sheenRoughnessUvTransform),this.sheenColorUvTransform=C(this.sheenColorUvTransform)}clone(e){return new R(this,e)}}const N=new Set(["diffuse","diffuseMap","diffuseMulCoef","diffuseAddCoef","diffuseUvTransform","diffuseUvSlot","specular","specularMap","specularMulCoef","specularAddCoef","specularUvTransform","specularUvSlot","specularContribution","specularContributionMap","specularContributionMulCoef","specularContributionAddCoef","specularContributionUvTransform","specularContributionUvSlot","metalness","metalnessMap","metalnessMulCoef","metalnessAddCoef","metalnessUvTransform","metalnessUvSlot","emissionColor","emissionColorMap","emissionColorMulCoef","emissionColorAddCoef","emissionColorUvTransform","emissionColorUvSlot","emissionValue","emissionNormalized","transparency","transparencyMap","transparencyMulCoef","transparencyAddCoef","transparencyUvTransform","transparencyUvSlot","opacity","opacityMap","opacityMulCoef","opacityAddCoef","opacityUvTransform","opacityUvSlot","useAlphaFromDiffuseMap","roughness","roughnessMap","roughnessMulCoef","roughnessAddCoef","roughnessUvTransform","roughnessUvSlot","glossinessMap","glossinessMapMulCoef","glossinessMapAddCoef","translucency","translucencyMap","translucencyMulCoef","translucencyAddCoef","translucencyUvTransform","translucencyUvSlot","translucencyColor","translucencyColorMap","translucencyColorMulCoef","translucencyColorAddCoef","translucencyColorUvTransform","translucencyColorUvSlot","bumpMap","bumpUvSlot","bumpUvTransform","bumpScale","bumpScaleMap","bumpScaleMulCoef","bumpScaleAddCoef","bumpScaleUvTransform","bumpScaleUvSlot","normalMap","normalMulCoef","normalAddCoef","normalUvTransform","normalUvSlot","normalMapFlipY","normalScale","normalScaleMap","normalScaleMulCoef","normalScaleAddCoef","normalScaleUvTransform","normalScaleUvSlot"]),B={diffuse:"color",diffuseMap:"map",specularContribution:"specularContrib",specularContributionMap:"specularContribMap",specularContributionMulCoef:"specularContribMulCoef",specularContributionAddCoef:"specularContribAddCoef",specularContributionUvTransform:"specularContribUvTransform",specularContributionUvSlot:"specularContribUvSlot"};class $ extends t{constructor(t){for(var s in a=e._SSSGenerator,i=e._AmbianceGenerators,super(),(t=t||{}).__initializing__=!0,B)void 0!==t[s]&&void 0===t[B[s]]&&(t[B[s]]=t[s]);this.__physicalMode=l.DSPBR,t&&t.dspbr21x&&(this.__physicalMode=l.DSPBR21x),t&&t.dspbr22x&&(this.__physicalMode=l.DSPBR22x),t&&t.dspbr25x&&(this.__physicalMode=l.DSPBR25x),this._phongFallbackMaterial=null,this.lights=!0,this.thinWalled=!0,this.color=new e.Color(16777215),this.map=null,this.diffuseUvSlot=1,this.diffuseUvTransform=c,this.diffuseMulCoef=null,this.diffuseAddCoef=null,this.specular=new e.Color(16777215),this.specularMap=null,this.specularAddCoef=null,this.specularMulCoef=null,this.specularUvTransform=c,this.specularUvSlot=1,this.metalness=0,this.metalnessMap=null,this.metalnessAddCoef=null,this.metalnessMulCoef=null,this.metalnessUvTransform=c,this.metalnessUvSlot=1,this.specularContrib=1,this.specularContribMap=null,this.specularContribAddCoef=null,this.specularContribMulCoef=null,this.specularContribUvTransform=c,this.specularContribUvSlot=1,this.emissionColor=new e.Color(16777215),this.emissionColorMap=null,this.emissionColorAddCoef=null,this.emissionColorMulCoef=null,this.emissionColorUvTransform=c,this.emissionColorUvSlot=1,this.emissionValue=0,this.emissionNormalized=!1,this.transparency=0,this.transparencyMap=null,this.transparencyAddCoef=null,this.transparencyMulCoef=null,this.transparencyUvTransform=c,this.transparencyUvSlot=1,this.opacity=1,this.opacityMap=null,this.opacityAddCoef=null,this.opacityMulCoef=null,this.opacityUvTransform=c,this.opacityUvSlot=1,this.useAlphaFromDiffuseMap=!0,this.ior=1.4,this.roughness=0,this.roughnessMap=null,this.roughnessAddCoef=null,this.roughnessMulCoef=null,this.roughnessUvTransform=c,this.roughnessUvSlot=1,this.glossinessMap=null,this.glossinessMulCoef=null,this.glossinessAddCoef=null,this.reflectionProbes=null,this.envMipMap=null,this.envMap=null,this.overrideIBL=null,this.translucency=0,this.translucencyMap=null,this.translucencyAddCoef=null,this.translucencyMulCoef=null,this.translucencyUvTransform=c,this.translucencyUvSlot=1,this.translucencyColor=new e.Color(16777215),this.translucencyColorMap=null,this.translucencyColorAddCoef=null,this.translucencyColorMulCoef=null,this.translucencyColorUvTransform=c,this.translucencyColorUvSlot=1,this.bumpMap=null,this.bumpUvSlot=1,this.bumpUvTransform=c,this.bumpScale=1,this.bumpScaleMap=null,this.bumpScaleAddCoef=null,this.bumpScaleMulCoef=null,this.bumpScaleUvTransform=c,this.bumpScaleUvSlot=1,this.normalMap=null,this.normalAddCoef=null,this.normalMulCoef=null,this.normalUvTransform=c,this.normalUvSlot=1,this.normalMapFlipY=!1,this.normalScale=new e.Vector2(1,1),this.normalScaleMap=null,this.normalScaleAddCoef=null,this.normalScaleMulCoef=null,this.normalScaleUvTransform=c,this.normalScaleUvSlot=1,this.useLighting=!0,this.needTangent=!1,this.needTangentBinormal=!1,this.NRECompatibility=!0,this.setValues(t),this._selectUvTransforms(),this._dspbrFlakes=null,this.setDSPBRFlakes(t),this._specGlossFlakes=null,this._dspbrFlakes||this.setSpecGlossFlakes(t),this._clearCoat=null,this.setClearCoat(t),this._volume=null,this.setVolume(t),this._mapFromOldParameters(t),this._sheenData=null,this._sheen=null,this.setSheen(t),this._anisotropy=null,this.setAnisotropy(t),this._displacement=null,this.setDisplacement(t),this._iridescence=null,this.setIridescence(t),this._thickness=null,this.setThickness(t),this.ambienceMatrix=new e.Matrix4,this.useFiniteEnvMap=!1,this.parallaxCorrectionParameters=null,this._fromGLTF=t&&t._fromGLTF?1:0,this._fromGLTF=t&&t._fromGLTF_SpecGloss?2:this._fromGLTF}_selectUvTransforms(){this.normalUvTransform=C(this.normalUvTransform),this.bumpUvTransform=C(this.bumpUvTransform),this.bumpScaleUvTransform=C(this.bumpScaleUvTransform),this.normalScaleUvTransform=C(this.normalScaleUvTransform),this.diffuseUvTransform=C(this.diffuseUvTransform),this.specularUvTransform=C(this.specularUvTransform),this.metalnessUvTransform=C(this.metalnessUvTransform),this.emissionColorUvTransform=C(this.emissionColorUvTransform),this.specularContribUvTransform=C(this.specularContribUvTransform),this.transparencyUvTransform=C(this.transparencyUvTransform),this.opacityUvTransform=C(this.opacityUvTransform),this.translucencyUvTransform=C(this.translucencyUvTransform),this.translucencyColorUvTransform=C(this.translucencyColorUvTransform),this.roughnessUvTransform=C(this.roughnessUvTransform)}static _setTypeParams(e){e.specGloss=!1,e.specGlossNRE=!1,e.dspbr19x=!1,e.dspbr21x=!1,e.dspbr22x=!1,e.dspbr25x=!1}requireVertexTangentBinormal(){return this._displacement&&this._displacement.isEnabled()}_dump(){var e=super._dump(this);e.subType=this.getSubType(),e.color=this.color.toArray(),e.specular=this.specular.toArray(),this.specularMap&&(e.specularMap="textured"),e.roughness=this.roughness,this.roughnessMap&&(e.roughness="textured");var t=this.getType();return t.includes("DSPBR")?(this.map&&(e.color="textured"),e.transparency=this.transparency,this.transparencyMap&&(e.transparency="textured"),e.emissionColor=this.emissionColor.toArray(),this.emissionColorMap&&(e.emissionColor="textured"),e.emissionValue=this.emissionValue,e.metalness=this.metalness,this.metalnessMap&&(e.metalness="textured"),e.specularContribution=this.specularContrib,this.specularContribMap&&(e.specularContribution="textured"),e.ior=this.ior):t.includes("SpecGloss")?(this.map&&(e.color="textured"),e.transparency=this.transparency,this.transparencyMap&&(e.transparency="textured"),e.emissionColor=this.emissionColor.toArray(),this.emissionColorMap&&(e.emissionColor="textured")):"CATGraphicalMaterial"===t&&this.map&&(e.texture=!0),e}requireTangentBinormal(){return this.needTangentBinormal||this._anisotropy&&this._anisotropy.isEnabled()||!!this.normalMap||!(!this._clearCoat||!this._clearCoat.clearCoatNormalMap)||this.requireVertexTangentBinormal()}getSubType(){return"Generic"}getType(){switch(this.__physicalMode){case l.SPEC_GLOSS:case l.SPEC_GLOSS_NRE:return"SpecGloss";case l.DSPBR:return"DSPBR19x";case l.DSPBR21x:return"DSPBR21x";case l.DSPBR22x:return"DSPBR22x";case l.DSPBR25x:return"DSPBR25x"}return"DSPBR19x"}_deallocate(e){super._deallocate(e),i&&(i.decreaseUseCount("m"+this.id),i.decreaseUseCount("ms"+this.id)),a&&this._volume&&this._volume._sssLUT&&a.decreaseUseCount(this._volume._sssLUT.id),this._phongFallbackMaterial&&this._phongFallbackMaterial.dispose()}_transparencyOnGPU(e){return super._transparencyOnGPU(e)||this.opacityMap||this.transparencyMap||this.map&&(this.useAlphaFromDiffuseMap||this.transparency>0)}_mapFromOldParameters(e){this.__physicalMode>=l.DSPBR21x||(e.hasOwnProperty("emissive")&&(this.emissionColor.copy(e.emissive),this.emissionColorMap=e.hasOwnProperty("emissiveMap")?e.emissiveMap:this.emissionColorMap,this.emissionColorAddCoef=e.hasOwnProperty("emissiveAddCoef")?e.emissiveAddCoef:this.emissionColorAddCoef,this.emissionColorMulCoef=e.hasOwnProperty("emissiveMulCoef")?e.emissiveMulCoef:this.emissionColorMulCoef,this.emissionColorUvSlot=e.hasOwnProperty("emissiveUvSlot")?e.emissiveUvSlot:this.emissionColorUvSlot,this.emissionColorUvTransform=e.hasOwnProperty("emissiveUvTransform")?e.emissiveUvTransform:this.emissionColorUvTransform,this.emissionValue=1,this.emissionNormalized=!1),e.hasOwnProperty("coating")&&(this._clearCoat||(this._clearCoat=new y(e,this)),this._clearCoat.clearCoat=e.coating),e.hasOwnProperty("glossiness")&&(this.metalness<1e-6&&null===this.metalnessMap&&(this.__physicalMode=l.SPEC_GLOSS,this.metalness=0,this.metalnessMap=null),this.roughness=1-e.glossiness,this.roughnessMap=null,this.thinWalled=!0),e.hasOwnProperty("glossinessMap")&&(this.metalness<1e-6&&null===this.metalnessMap&&(this.__physicalMode=l.SPEC_GLOSS,this.metalness=0,this.metalnessMap=null),this.roughnessMap=null,this.thinWalled=!0,this.roughnessUvSlot=e.hasOwnProperty("glossinessUvSlot")?e.glossinessUvSlot:this.roughnessUvSlot,this.roughnessUvTransform=e.hasOwnProperty("glossinessUvTransform")?e.glossinessUvTransform:this.roughnessUvTransform),this._clearCoat&&(e.hasOwnProperty("coatingGlossiness")&&(this.metalness<1e-6&&null===this.metalnessMap&&(this.__physicalMode=l.SPEC_GLOSS,this.metalness=0,this.metalnessMap=null),this._clearCoat.clearCoatRoughness=1-e.coatingGlossiness),e.hasOwnProperty("coatingGlossinessMap")&&(this.metalness<1e-6&&null===this.metalnessMap&&(this.__physicalMode=l.SPEC_GLOSS,this.metalness=0,this.metalnessMap=null),this._clearCoat.clearCoatRoughnessMap=null,this.thinWalled=!0,this._clearCoat.clearCoatRoughnessUvSlot=e.hasOwnProperty("coatingGlossinessUvSlot")?e.coatingGlossinessUvSlot:this._clearCoat.clearCoatRoughnessUvSlot,this._clearCoat.clearCoatRoughnessUvTransform=e.hasOwnProperty("coatingGlossinessUvTransform")?e.coatingGlossinessUvTransform:this._clearCoat.clearCoatRoughnessUvTransform)),e.specGloss&&(this.__physicalMode=l.SPEC_GLOSS,this.metalness=0,this.metalnessMap=null),e.specGlossNRE&&(this.__physicalMode=l.SPEC_GLOSS_NRE,this.metalness=0,this.metalnessMap=null))}_canUseLights(){return this.useLighting}_transparencyEnabled(){return!0}_emissionEnabled(){if(this.emissionValue<=0)return!1;const t=this.emissionColorAddCoef?this.emissionColorAddCoef:new e.Vector3(0,0,0),s=this.emissionColorMulCoef?this.emissionColorMulCoef:new e.Vector3(1,1,1),i=s.x*this.emissionColor.r+t.x>1/255||s.y*this.emissionColor.g+t.y>1/255||s.z*this.emissionColor.b+t.z>1/255;return this._isTextureAvailable("emissionColorMap")||i||this._PDSFXData&&this._PDSFXData._extraDefines.emissionColor}_translucencyEnabled(){if(this.__physicalMode<=l.DSPBR)return!1;const e=null!==this.translucencyMulCoef?this.translucencyMulCoef:1,t=null!==this.translucencyAddCoef?this.translucencyAddCoef:0,s=e*this.translucency+t;return this._isTextureAvailable("translucencyMap")||s>0||this._PDSFXData&&this._PDSFXData._extraDefines.translucency}_setCoreShaderOptions(e,t,s,i,a,r){var n={specgloss:this.__physicalMode===l.SPEC_GLOSS||this.__physicalMode===l.SPEC_GLOSS_NRE,specglossNRE:this.__physicalMode===l.SPEC_GLOSS_NRE,dspbr:this.__physicalMode>=l.DSPBR,dspbr19x:this.__physicalMode===l.DSPBR,dspbr21x:this.__physicalMode===l.DSPBR21x,dspbr22x:this.__physicalMode===l.DSPBR22x,dspbr25x:this.__physicalMode===l.DSPBR25x,NRECompatibility:!!this.NRECompatibility,fromGLTF:this._fromGLTF};super._setMaterialShaderOptions(n,t,s,i,a,r),Object.assign(n,{diffuseMulCoef:null!==this.diffuseMulCoef,diffuseAddCoef:null!==this.diffuseAddCoef,diffuseBorderColorU:!!this.map&&this.map._useBorderColor().u,diffuseBorderColorV:!!this.map&&this.map._useBorderColor().v,specularContribMap:this._isTextureAvailable("specularContribMap"),specularContribMulCoef:null!==this.specularContribMulCoef,specularContribAddCoef:null!==this.specularContribAddCoef,specularMap:this._isTextureAvailable("specularMap"),specularMapLinear:!!this.specularMap&&this.specularMap.hdr,specularMulCoef:null!==this.specularMulCoef,specularAddCoef:null!==this.specularAddCoef,useTransparency:this._transparencyEnabled(),metalnessMap:this._isTextureAvailable("metalnessMap"),metalnessMulCoef:null!==this.metalnessMulCoef,metalnessAddCoef:null!==this.metalnessAddCoef,opacityMap:this._isTextureAvailable("opacityMap"),opacityBorderColorU:!!this.opacityMap&&this.opacityMap._useBorderColor().u,opacityBorderColorV:!!this.opacityMap&&this.opacityMap._useBorderColor().v,opacityMulCoef:null!==this.opacityMulCoef,opacityAddCoef:null!==this.opacityAddCoef,useAlphaFromDiffuseMap:this.useAlphaFromDiffuseMap}),n.useTransparency&&Object.assign(n,{transparencyMap:this._isTextureAvailable("transparencyMap"),transparencyMulCoef:null!==this.transparencyMulCoef,transparencyAddCoef:null!==this.transparencyAddCoef}),t&&(Object.assign(n,{useEmission:!e.vrDevice||this._emissionEnabled(),useTranslucency:this._translucencyEnabled()}),n.useEmission&&Object.assign(n,{emissionColorMap:this._isTextureAvailable("emissionColorMap"),emissionNormalized:this.emissionNormalized,emissionColorMapLinear:/*!!material.emissionColorMapLinear || */!!this.emissionColorMap&&this.emissionColorMap.hdr,emissionColorMulCoef:null!==this.emissionColorMulCoef,emissionColorAddCoef:null!==this.emissionColorAddCoef}),n.useTranslucency&&Object.assign(n,{translucencyMap:this._isTextureAvailable("translucencyMap"),translucencyMulCoef:null!==this.translucencyMulCoef,translucencyAddCoef:null!==this.translucencyAddCoef,translucencyColorMap:this._isTextureAvailable("translucencyColorMap"),translucencyColorMapLinear:!!this.translucencyColorMap&&this.translucencyColorMap.hdr,translucencyColorMulCoef:null!==this.translucencyColorMulCoef,translucencyColorAddCoef:null!==this.translucencyColorAddCoef})),(t||s||i)&&Object.assign(n,{normalScaleMap:this._isTextureAvailable("normalScaleMap"),normalMulCoef:null!==this.normalMulCoef,normalAddCoef:null!==this.normalAddCoef,normalScaleMulCoef:null!==this.normalScaleMulCoef,normalScaleAddCoef:null!==this.normalScaleAddCoef,bumpScaleMap:this._isTextureAvailable("bumpScaleMap"),bumpScaleMulCoef:null!==this.bumpScaleMulCoef,bumpScaleAddCoef:null!==this.bumpScaleAddCoef}),(t||a||i)&&Object.assign(n,{roughnessMap:this._isTextureAvailable("roughnessMap"),glossinessMap:!n.dspbr&&this._isTextureAvailable("glossinessMap"),glossinessMulCoef:!n.dspbr&&null!==this.glossinessMulCoef,glossinessAddCoef:!n.dspbr&&null!==this.glossinessAddCoef,roughnessMulCoef:null!==this.roughnessMulCoef,roughnessAddCoef:null!==this.roughnessAddCoef}),Object.assign(e,n)}_setMaterialShaderOptions(t,s,i,a,r,n){var o={};this._setCoreShaderOptions(o,s,i,a,r,n),o.thinWalled=this.thinWalled,this._thickness&&this._thickness.setMaterialShaderOptions(o),this._volume&&this._volume.setMaterialShaderOptions(o),this._displacement&&(o._isDecal=t._isDecal,this._displacement.setMaterialShaderOptions(o)),s&&(this._dspbrFlakes?this._dspbrFlakes.setMaterialShaderOptions(o):this._specGlossFlakes&&this._specGlossFlakes.setMaterialShaderOptions(o),this._clearCoat&&this._clearCoat.setMaterialShaderOptions(o),this._sheen&&this._sheen.setMaterialShaderOptions(o),this._anisotropy&&this._anisotropy.setMaterialShaderOptions(o),this._iridescence&&this._iridescence.setMaterialShaderOptions(o),o.useFlakes=o.dspbrFlakes||o.specGlossFlakes,(o.useFlakes||o.orangePeel)&&(o.needObjectSpaceData=!0,o.specGlossFlakes&&(o.advancedFlakesBlending=t.flakesMode<2,o.advancedPresenceNoise=t.flakesMode<2,o.flakesNormalPerturbation=t.flakesMode<1,o.pearlFlakesActivated=t.flakesMode<1),o.dspbrFlakes&&(o.dspbrFlakesFullGrid=0===t.flakesMode,o.dspbrFlakesThreeLayers=t.flakesMode<=1,o.dspbrFlakesTwoLayers=2===t.flakesMode,o.dspbrFlakesOneLayer=3===t.flakesMode,o.dspbrHemiFlakes=t.envMap||t.hasAreaLights)),o.subsurface&&(o.thickness?o.thicknessBasedTransmittance=!0:(t.maxDirIBLShadows=t._maxDirIBLShadows,t.maxShadows+=t._maxDirIBLShadows,t.shadowMapEnabled=t._shadowMapEnabled&&t.maxShadows>0),o.useMapTransmittance=t.shadowMapEnabled,o.useCubeTransmittance=t.shadowMapCubeEnabled,o.depthBasedTransmittance=o.useCubeTransmittance||o.useMapTransmittance,o.useTransmittance=o.thicknessBasedTransmittance||o.depthBasedTransmittance,o.useESMTransmittance=t.shadowMapType===e.ESMShadowMap||t.shadowMapType===e.ESMImprovedShadowMap,o.useIBLLights=t.maxDirIBLLights&&t.envMap&&o.useMapTransmittance),o.sheen&&(o.useSoftVelvet=o.sheenMode===e.SheenMode.VELVET_SOFT,o.useVelvet=o.sheenMode===e.SheenMode.VELVET,o.useSating=o.sheenMode===e.SheenMode.SATIN),this.__physicalMode>l.DSPBR&&(o.dspbrWithTranslucency=!!o.useTranslucency,o.dspbrWithClearCoatAboveEmissive=!0,o.dspbrWithSheenColorRoughness=!0,this.__physicalMode>l.DSPBR21x&&(o.dspbrWithFlipFlopColor=!!o.flipFlop,o.dspbrWithSquaredEstevezKullaRoughness=o.useSoftVelvet,o.dspbrWithNoSheenValue=!0,this.__physicalMode>l.DSPBR22x&&(o.dspbrWithTranslucencyColor=!!o.useTranslucency)))),Object.assign(t,o)}getOpacity(){var e=this._opacity;null===this.opacityAddCoef||null===this.opacityMulCoef||this.opacityMap||(e=this.opacityMulCoef*e+this.opacityAddCoef);var t=this.transparency;return null===this.transparencyAddCoef||null===this.transparencyMulCoef||this.transparencyMap||(t=this.transparencyMulCoef*t+this.transparencyAddCoef),1-Math.max(1-e,Math.min(t,.99))}_getTextures(e){var t=super._getTextures(e);return t=t.concat([this.map,this.specularMap,this.metalnessMap,this.specularContribMap,this.emissionColorMap,this.transparencyMap,this.opacityMap,this.translucencyMap,this.translucencyColorMap,this.normalScaleMap,this.bumpScaleMap,this.roughnessMap,this.glossinessMap,this.bumpMap,this.normalMap]),this._dspbrFlakes?t=t.concat(this._dspbrFlakes.getTextures()):this._specGlossFlakes&&(t=t.concat(this._specGlossFlakes.getTextures())),this._clearCoat&&(t=t.concat(this._clearCoat.getTextures())),this._volume&&!e&&(t=t.concat(this._volume.getTextures())),this._thickness&&(t=t.concat(this._thickness.getTextures())),this._sheen&&(t=t.concat(this._sheen.getTextures())),this._anisotropy&&(t=t.concat(this._anisotropy.getTextures())),this._displacement&&(t=t.concat(this._displacement.getTextures())),this._iridescence&&(t=t.concat(this._iridescence.getTextures())),t}clone(e){return e||(e=new $),e.__physicalMode=this.__physicalMode,super.clone(e),e.useLighting=this.useLighting,e.thinWalled=this.thinWalled,e.color.copy(this.color),e.map=this.map,e.diffuseUvSlot=this.diffuseUvSlot,e.diffuseUvTransform=this.diffuseUvTransform,e.diffuseMulCoef=this.diffuseMulCoef,e.diffuseAddCoef=this.diffuseAddCoef,S(this,e,"specular",!0),S(this,e,"metalness",!1),S(this,e,"specularContrib",!1),S(this,e,"emissionColor",!0),e.emissionValue=this.emissionValue,e.emissionNormalized=this.emissionNormalized,S(this,e,"transparency",!1),S(this,e,"opacity",!1),e.useAlphaFromDiffuseMap=this.useAlphaFromDiffuseMap,e.ior=this.ior,S(this,e,"roughness",!1),e.glossinessMap=this.glossinessMap,e.glossinessMulCoef=this.glossinessMulCoef,e.glossinessAddCoef=this.glossinessAddCoef,e.reflectionProbes=this.reflectionProbes,e.envMipMap=this.envMipMap,e.envMap=this.envMap,e.overrideIBL=null!==this.overrideIBL?this.overrideIBL.clone():null,S(this,e,"translucency",!1),S(this,e,"translucencyColor",!0),e.bumpMap=this.bumpMap,e.bumpUvSlot=this.bumpUvSlot,e.bumpUvTransform=this.bumpUvTransform,S(this,e,"bumpScale",!1),m(this,e,"normal"),e.normalMapFlipY=this.normalMapFlipY,S(this,e,"normalScale",!0),this._dspbrFlakes?e._dspbrFlakes=this._dspbrFlakes.clone(e):this._specGlossFlakes&&(e._specGlossFlakes=this._specGlossFlakes.clone(e)),this._clearCoat&&(e._clearCoat=this._clearCoat.clone(e)),this._volume&&(e._volume=this._volume.clone(e)),e._sheenData=null!==this._sheenData?this._sheenData.clone():null,this._sheen&&(e._sheen=this._sheen.clone(e)),this._anisotropy&&(e.anisotropy=this._anisotropy.clone(e)),this._displacement&&(e._displacement=this._displacement.clone(e)),this._iridescence&&(e._iridescence=this._iridescence.clone(e)),this._thickness&&(e._thickness=this._thickness.clone(e)),e.needTangent=this.needTangent,e.needTangentBinormal=this.needTangentBinormal,e.NRECompatibility=this.NRECompatibility,e.ambienceMatrix=this.ambienceMatrix,e.parallaxCorrectionParameters=this.parallaxCorrectionParameters,e.useFiniteEnvMap=this.useFiniteEnvMap,e._fromGLTF=this._fromGLTF,e}setOverrideIBL(e){this.overrideIBL=new o(e),null!==this._sheenData&&(this._sheenData.overrideIBL.hdr=this.overrideIBL.hdr,-1!==this._sheenData.overrideIBL.curID&&(i.decreaseUseCount(this._sheenData.overrideIBL.curID),this._sheenData.overrideIBL.curID=-1)),this.needsUpdate=!0}removeOverrideIBL(){this.overrideIBL&&(-1!==this.overrideIBL.curID&&(i.decreaseUseCount(this.overrideIBL.curID),this.overrideIBL.curID=-1),this.overrideIBL=null,null!==this._sheenData&&(this._sheenData.overrideIBL.hdr=null,-1!==this._sheenData.overrideIBL.curID&&(i.decreaseUseCount(this._sheenData.overrideIBL.curID),this._sheenData.overrideIBL.curID=-1)),this.needsUpdate=!0)}_needsIBLLightExtraction(){var e=this._volume&&this._volume.isEnabled(),t=this._thickness&&(this._thickness.thickness>0||!!this._thickness.thicknessMap);return e&&!t}_forceOpaqueShadowMapPass(){var e=this._volume&&this._volume.isEnabled(),t=this._thickness&&(this._thickness.thickness>0||!!this._thickness.thicknessMap);return e&&!t}setPhysicalProperties(e){this.setCore(e),this.setAnisotropy(e),this.setDisplacement(e),this.setIridescence(e),this.setThickness(e),this.setVolume(e),this.__physicalMode>=l.DSPBR?this.setDSPBRFlakes(e):this.setSpecGlossFlakes(e),this.setClearCoat(e),this.setSheen(e)}isPropertyTextured(e){switch(e){case"sheenColor":return!!this._sheen&&!!this._sheen.sheenColorMap;case"sheenRoughness":return!!this._sheen&&!!this._sheen.sheenRoughnessMap;case"sheen":return!!this._sheen&&!!this._sheen.sheenMap;case"clearCoatNormal":return!!this._clearCoat&&!!this._clearCoat.clearCoatNormalMap;case"clearCoatColor":return!!this._clearCoat&&!!this._clearCoat.clearCoatColorMap;case"coatingGlossiness":return!!this._clearCoat&&!!this._clearCoat.coatingGlossinessMap;case"clearCoatRoughness":return!!this._clearCoat&&!!this._clearCoat.clearCoatRoughnessMap;case"clearCoat":return!!this._clearCoat&&!!this._clearCoat.clearCoatMap;case"flipFlop":return!!this._dspbrFlakes&&!!this._dspbrFlakes.flipFlopMap;case"flipFlopColor":return!!this._dspbrFlakes&&!!this._dspbrFlakes.flipFlopColorMap;case"flakesSize":return!!this._dspbrFlakes&&!!this._dspbrFlakes.flakesSizeMap;case"flakesRoughness":return!!this._dspbrFlakes&&!!this._dspbrFlakes.flakesRoughnessMap;case"flakesColor":return!!this._dspbrFlakes&&!!this._dspbrFlakes.flakesColorMap;case"flakesCoverage":return!!this._dspbrFlakes&&!!this._dspbrFlakes.flakesCoverageMap;case"diffuse":case"albedo":return!!this.map;case"transparency":return!!this.transparencyMap;case"specularContribution":return!!this.specularContribMap;case"metalness":return!!this.metalnessMap;case"emissionColor":return!!this.emissionColorMap;case"roughness":return!!this.roughnessMap;case"glossiness":return!!this.glossinessMap;case"translucency":return!!this.translucencyMap;case"translucencyColor":return!!this.translucencyColorMap;case"normalScale":return!!this.normalScaleMap;case"bumpScale":return!!this.bumpScaleMap;case"anisotropy":return!!this._anisotropy&&!!this._anisotropy.anisotropyMap;case"anisotropyAngle":return!!this._anisotropy&&!!this._anisotropy.anisotropyAngleMap;case"displacement":return!!this._displacement&&!!this._displacement.displacementAngleMap;case"iridescence":return!!this._iridescence&&!!this._iridescence.iridescenceMap;case"iridescenceThickness":return!!this._iridescence&&!!this._iridescence.iridescenceThicknessMap;case"thickness":return!!this._thickness&&!!this._thickness.thicknessMap}return super.isPropertyTextured(e)}setCore(e){if(e&&0!==Object.keys(e).length&&!e.__initializing__){var t={};if(N.forEach(s=>{void 0!==e[s]&&(B[s]&&void 0===e[B[s]]?t[B[s]]=e[s]:t[s]=e[s])}),0!==Object.keys(t).length){var s={};if(this.needsUpdate||this._setCoreShaderOptions(s,!0,!1,!1,!1,!1),this.setValues(t),this._selectUvTransforms(),!this.needsUpdate){var i={};this._setCoreShaderOptions(i,!0,!1,!1,!1,!1);for(var a=Object.keys(s),r=0;r<a.length;r++)if(s[a[r]]!==i[a[r]]){this.needsUpdate=!0;break}}}}}setAnisotropy(e){if(e&&0!==Object.keys(e).length){var t={};F.forEach(s=>{void 0!==e[s]&&(t[s]=e[s])}),0!==Object.keys(t).length&&(this._anisotropy?this._anisotropy.setParameters(t):(t.anisotropyMap||t.anisotropy>0||!e.__initializing__)&&(this._anisotropy=new E(t,this),this.needsUpdate=!0))}}setDisplacement(e){if(e&&0!==Object.keys(e).length){var t={};I.forEach(s=>{void 0!==e[s]&&(t[s]=e[s])}),0!==Object.keys(t).length&&(this._displacement?this._displacement.setParameters(t):!t.displacementMap&&e.__initializing__||(this._displacement=new O(t,this),this.needsUpdate=!0))}}setIridescence(e){if(e&&0!==Object.keys(e).length){var t={};L.forEach(s=>{void 0!==e[s]&&(t[s]=e[s])}),0!==Object.keys(t).length&&(this._iridescence?this._iridescence.setParameters(t):(t.iridescence>0||t.iridescenceMap||!e.__initializing__)&&(this._iridescence=new w(t,this),this.needsUpdate=!0))}}setThickness(e){if(e&&0!==Object.keys(e).length){var t={};A.forEach(s=>{void 0!==e[s]&&(t[s]=e[s])}),0!==Object.keys(t).length&&(this._thickness?this._thickness.setParameters(t):(t.thicknessMap||t.thickness>0||!e.__initializing__)&&(this._thickness=new U(t,this),this.needsUpdate=!0))}}setVolume(e){if(e&&0!==Object.keys(e).length){var t={};if(b.forEach(s=>{void 0!==e[s]&&(t[s]=e[s])}),0!==Object.keys(t).length){var s=this.thinWalled;if(this.thinWalled=void 0!==t.thinWalled?!!t.thinWalled:this.thinWalled,this.ior=t.ior?t.ior:this.ior,this._volume)this._volume.setParameters(t);else{var i=void 0!==t.ior&&void 0!==t.thinWalled&&2===Object.keys(t).length;(i=(i=i||void 0!==t.ior&&1===Object.keys(t).length)||void 0!==t.thinWalled&&1===Object.keys(t).length)||!(t.subsurfacePreset||t.subsurfaceColor&&t.subsurfaceColor.getHex()>0||t.attenuationColor&&t.attenuationColor.getHex()<16711422)&&e.__initializing__||(this._volume=new x(t,this),this.needsUpdate=!0)}s!==this.thinWalled&&(this.needsUpdate=!0),this.needsUpdate&&this._volume&&(this._sendEvent("requestShadowMapUpdate"),this._invalidateDisplayRangeLists())}}}setDSPBRFlakes(e){if(e&&0!==Object.keys(e).length){var t={};v.forEach(s=>{void 0!==e[s]&&(t[s]=e[s])}),0!==Object.keys(t).length&&(null===this._dspbrFlakes?(t.flakesCoverageMap||t.flakesCoverage>0||!e.__initializing__)&&(this._dspbrFlakes=new g(t,this),this._specGlossFlakes&&(this._specGlossFlakes=null),this.needsUpdate=!0):this._dspbrFlakes.setParameters(t))}}setSpecGlossFlakes(e){if(!(!e||0===Object.keys(e).length||this._PDSFXData&&this._PDSFXData._extraDefines.dspbrFlakes)){var t={};P.forEach(s=>{void 0!==e[s]&&(t[s]=e[s])}),0!==Object.keys(t).length&&(null===this._specGlossFlakes?!t.flakes&&e.__initializing__||(this._specGlossFlakes=new D(t,this),this._dspbrFlakes&&(this._dspbrFlakes=null),this.needsUpdate=!0):this._specGlossFlakes.setParameters(t))}}setClearCoat(e){if(e&&0!==Object.keys(e).length){var t={};T.forEach(s=>{void 0!==e[s]&&(t[s]=e[s])}),0!==Object.keys(t).length&&(null===this._clearCoat?(t.clearCoat>0||t.clearCoatMap||!e.__initializing__)&&(this._clearCoat=new y(t,this),this.needsUpdate=!0):this._clearCoat.setParameters(t))}}setSheen(t){if(t&&0!==Object.keys(t).length){var s={};if(k.forEach(e=>{void 0!==t[e]&&(s[e]=t[e])}),0!==Object.keys(s).length){var i=!1;if(this.__physicalMode>=l.DSPBR22x?(delete s.sheen,delete s.sheenMap,delete s.sheenMulCoef,delete s.sheenAddCoef,delete s.sheenUvSlot,delete s.sheenUvTransform,!s.sheenColor||s.sheenColor instanceof e.Color||(s.sheenColor=new e.Color(s.sheenColor)),s.sheenColor&&s.sheenColor.getHex()>0||s.sheenColorMap?(s.sheen=1,i=!0):s.sheenColor&&0===s.sheenColor.getHex()&&(s.sheen=0)):(s.sheen>0||s.sheenMap)&&(i=!0),0!==Object.keys(s).length&&(this._sheen?this._sheen.setParameters(s):!i&&t.__initializing__||(this._sheen=new R(s,this),this.needsUpdate=!0),this._sheen&&this._sheen.isEnabled())){var a=this._sheen.sheenMode;if(a){var r=null;switch(null===this._sheenData?(null!==this.overrideIBL?(r=this.overrideIBL.clone()).mips=null:r=new o({}),this._sheenData=new u({overrideIBL:r})):(r=this._sheenData.overrideIBL,null!==this.overrideIBL&&(r.hdr=this.overrideIBL.hdr)),a){case h.VELVET:r.brdf=n.ASHIKMIN;break;case h.SATIN:r.brdf=n.BECKMANN;break;case h.VELVET_SOFT:r.brdf=n.ESTEVEZKULLA}}}}}}_updateSubsurfaceScattering(){var e=this._volume;if(a.manager){this.needsUpdate=this.needsUpdate||null===e._sssLUT;var t=e._sssLUT;if(1===e._updateSSS)t&&a.decreaseUseCount(t.id),e._sssLUT=null,e._translucencyDepth=null,t&&(this.needsUpdate=!0);else{var s={absorptionCoeffs:e._absorptionCoeffs,scatteringCoeffs:e._scatteringCoeffs,eta:this.ior,subsurfaceAnisotropy:e.subsurfaceAnisotropy,color:e.subsurfaceColor.toArray()},i=a.getTextures(s);e._sssLUT=i.sssLUT,e._translucencyDepth=i.translucencyDepth,null!==t&&t.id!==e._sssLUT.id&&a.decreaseUseCount(t.id)}e._updateSSS=0}else a.init()}activatePDSFX(e){e=e||{},this._PDSFXData=new s,this._PDSFXData.PDSFX=!0,this._setDefaultPDSFXOverridableFunctions(),this._PDSFXData._extraDefines={}}loadUniforms(e,t,s,i,a,r){if(e.loadUniformsCommon(t,this,s,i,a,r),e.loadUniformsNormalMap(t,this,s),s.reflectionColorTexture&&e.loadTexture(t,s.reflectionColorTexture,e._getReflectionColorBufferResult(!!this.overrideIBL)),s.refractionColorTexture&&e.loadTexture(t,s.refractionColorTexture,e._getRefractionColorBufferResult(!!this.overrideIBL)),s.normalMap&&(s.normalScale&&t.uniform2f(s.normalScale,this.normalScale.x,this.normalScale.y),s.normalScaleMap&&e.loadTexture(t,s.normalScaleMap,this.normalScaleMap),s.normalScaleAddCoef&&(t.uniform1f(s.normalScaleAddCoef,this.normalScaleAddCoef),t.uniform1f(s.normalScaleMulCoef,this.normalScaleMulCoef)),s.normalAddCoef&&(t.uniform3f(s.normalAddCoef,this.normalAddCoef.x,this.normalAddCoef.y,this.normalAddCoef.z),t.uniform3f(s.normalMulCoef,this.normalMulCoef.x,this.normalMulCoef.y,this.normalMulCoef.z))),s.bumpMap&&(s.bumpScale&&t.uniform1f(s.bumpScale,this.bumpScale),s.bumpScaleAddCoef&&(t.uniform1f(s.bumpScaleAddCoef,this.bumpScaleAddCoef),t.uniform1f(s.bumpScaleMulCoef,this.bumpScaleMulCoef)),s.bumpMap&&e.loadTexture(t,s.bumpMap,this.bumpMap),s.bumpScaleMap&&e.loadTexture(t,s.bumpScaleMap,this.bumpScaleMap)),s.diffuseAddCoef&&(t.uniform3f(s.diffuseAddCoef,this.diffuseAddCoef.x,this.diffuseAddCoef.y,this.diffuseAddCoef.z),t.uniform3f(s.diffuseMulCoef,this.diffuseMulCoef.x,this.diffuseMulCoef.y,this.diffuseMulCoef.z)),s.diffuseBorderColor){var n={r:(l=this.map.borderColor).x,g:l.y,b:l.z};e.gammaInput&&(n=f.copyToLinear(n,e.simpleGamma)),t.uniform4f(s.diffuseBorderColor,n.r,n.g,n.b,l.w)}if(s.specular){var o=this.specular;n=e.gammaInput?f.copyToLinear(o,e.simpleGamma):o,t.uniform3f(s.specular,n.r,n.g,n.b)}if(s.specularAddCoef&&(t.uniform3f(s.specularAddCoef,this.specularAddCoef.x,this.specularAddCoef.y,this.specularAddCoef.z),t.uniform3f(s.specularMulCoef,this.specularMulCoef.x,this.specularMulCoef.y,this.specularMulCoef.z)),s.metalness&&t.uniform1f(s.metalness,this.metalness),s.metalnessMap&&e.loadTexture(t,s.metalnessMap,this.metalnessMap),s.metalnessMulCoef&&(t.uniform1f(s.metalnessMulCoef,this.metalnessMulCoef),t.uniform1f(s.metalnessAddCoef,this.metalnessAddCoef)),s.specularContrib&&t.uniform1f(s.specularContrib,this.specularContrib),s.specularContribMap&&e.loadTexture(t,s.specularContribMap,this.specularContribMap),s.specularContribMulCoef&&(t.uniform1f(s.specularContribMulCoef,this.specularContribMulCoef),t.uniform1f(s.specularContribAddCoef,this.specularContribAddCoef)),s.emissionValue){if(t.uniform1f(s.emissionValue,this.emissionValue),s.emissionColor){n=this.emissionColor;e.gammaInput&&(n=f.copyToLinear(this.emissionColor,e.simpleGamma)),t.uniform3f(s.emissionColor,n.r,n.g,n.b)}s.emissionColorMap&&e.loadTexture(t,s.emissionColorMap,this.emissionColorMap),s.emissionColorAddCoef&&(t.uniform3f(s.emissionColorAddCoef,this.emissionColorAddCoef.x,this.emissionColorAddCoef.y,this.emissionColorAddCoef.z),t.uniform3f(s.emissionColorMulCoef,this.emissionColorMulCoef.x,this.emissionColorMulCoef.y,this.emissionColorMulCoef.z))}if(s.transparency&&t.uniform1f(s.transparency,this.transparency),s.transparencyMap&&e.loadTexture(t,s.transparencyMap,this.transparencyMap),s.transparencyMulCoef&&(t.uniform1f(s.transparencyMulCoef,this.transparencyMulCoef),t.uniform1f(s.transparencyAddCoef,this.transparencyAddCoef)),s.opacityMap&&(e.loadTexture(t,s.opacityMap,this.opacityMap),s.opacityBorderValue)){var l=this.opacityMap.borderColor;t.uniform1f(s.opacityBorderValue,l.x)}if(s.opacityMulCoef&&(t.uniform1f(s.opacityMulCoef,this.opacityMulCoef),t.uniform1f(s.opacityAddCoef,this.opacityAddCoef)),s.ior&&t.uniform1f(s.ior,this.ior),s.translucency&&t.uniform1f(s.translucency,this.translucency),s.translucencyMap&&e.loadTexture(t,s.translucencyMap,this.translucencyMap),s.translucencyMulCoef&&(t.uniform1f(s.translucencyMulCoef,this.translucencyMulCoef),t.uniform1f(s.translucencyAddCoef,this.translucencyAddCoef)),s.translucencyColor){n=this.translucencyColor;e.gammaInput&&(n=f.copyToLinear(this.translucencyColor,e.simpleGamma)),t.uniform3f(s.translucencyColor,n.r,n.g,n.b)}if(s.translucencyColorMap&&e.loadTexture(t,s.translucencyMap,this.translucencyMap),s.translucencyColorMulCoef&&(t.uniform3f(s.translucencyColorMulCoef,this.translucencyColorMulCoef.x,this.translucencyColorMulCoef.y,this.translucencyColorMulCoef.z),t.uniform3f(s.translucencyColorAddCoef,this.translucencyColorAddCoef.x,this.translucencyColorAddCoef.y,this.translucencyColorAddCoef.z)),s.roughness&&t.uniform1f(s.roughness,this.roughness),s.roughnessMap&&e.loadTexture(t,s.roughnessMap,this.roughnessMap),s.roughnessMulCoef&&(t.uniform1f(s.roughnessMulCoef,this.roughnessMulCoef),t.uniform1f(s.roughnessAddCoef,this.roughnessAddCoef)),s.glossinessMap&&e.loadTexture(t,s.glossinessMap,this.glossinessMap),s.glossinessMulCoef&&(t.uniform1f(s.glossinessMulCoef,this.glossinessMulCoef),t.uniform1f(s.glossinessAddCoef,this.glossinessAddCoef)),this.useFiniteEnvMap&&(s.sphereCenter&&t.uniform3f(s.sphereCenter,this.parallaxCorrectionParameters.sphereCenter.x,this.parallaxCorrectionParameters.sphereCenter.y,this.parallaxCorrectionParameters.sphereCenter.z),s.projectionCenter&&t.uniform3f(s.projectionCenter,this.parallaxCorrectionParameters.projectionCenter.x,this.parallaxCorrectionParameters.projectionCenter.y,this.parallaxCorrectionParameters.projectionCenter.z),s.sphereRadius&&t.uniform1f(s.sphereRadius,this.parallaxCorrectionParameters.sphereRadius)),this._dspbrFlakes?this._dspbrFlakes.loadUniforms(e,t,s,i):this._specGlossFlakes&&this._specGlossFlakes.loadUniforms(e,t,s,i),this._clearCoat&&this._clearCoat.loadUniforms(e,t,s,i),this._sheen&&this._sheen.loadUniforms(e,t,s,i,this),this._volume&&this._volume.loadUniforms(e,t,s,i),this._thickness&&this._thickness.loadUniforms(e,t,s,i),this._anisotropy&&this._anisotropy.loadUniforms(e,t,s,i),this._displacement&&this._displacement.loadUniforms(e,t,s,i,this),this._iridescence&&this._iridescence.loadUniforms(e,t,s,i),s.precomputedTexture){var h=e.precomputedTexture;e.loadTexture(t,s.precomputedTexture,h)}if(s.envMap&&this.envMipMap&&this.envMipMap[0]){var p=1,d=1;if(s.envMap&&e.loadTexture(t,s.envMap,this.envMipMap[0]),s.envMap2&&e.loadTexture(t,s.envMap2,this.envMipMap[1]),this.envMipMap[0].hdr&&s.envMapHDRSize&&(this.envMipMap[0].image?(p=parseInt(this.envMipMap[0].image.width),d=parseInt(this.envMipMap[0].image.height)):(p=parseInt(this.envMipMap[0].width),d=parseInt(this.envMipMap[0].height)),t.uniform2f(s.envMapHDRSize,p,d)),this.envMipMap[1]&&s.envMapHDRToMipsRatio){var u=1;u=this.envMipMap[1].image?parseInt(this.envMipMap[1].image.width)/p:parseInt(this.envMipMap[1].width)/p,t.uniform1f(s.envMapHDRToMipsRatio,u)}var c=this.envMipMap[0].envMapExposureSpecular,m=this.envMipMap[0].envMapExposureDiffuse;s.envMapExposureSpecular&&t.uniform1f(s.envMapExposureSpecular,c||0===c?c:1),s.envMapExposureDiffuse&&t.uniform1f(s.envMapExposureDiffuse,m||0===m?m:1),s.ambienceMatrix&&t.uniformMatrix4fv(s.ambienceMatrix,!1,e.float32Matrix4x4Temp.setDoubles(this.ambienceMatrix.elements))}s.reflectionProbePos&&this.reflectionProbes&&(s.reflectionProbePos&&t.uniform3f(s.reflectionProbePos,this.reflectionProbes.position.x,this.reflectionProbes.position.y,this.reflectionProbes.position.z),s.reflectionProbeProxyMin&&t.uniform3f(s.reflectionProbeProxyMin,this.reflectionProbes.box.min.x,this.reflectionProbes.box.min.y,this.reflectionProbes.box.min.z),s.reflectionProbeProxyMax&&t.uniform3f(s.reflectionProbeProxyMax,this.reflectionProbes.box.max.x,this.reflectionProbes.box.max.y,this.reflectionProbes.box.max.z),s.envMapHDRToMipsRatio&&t.uniform1f(s.envMapHDRToMipsRatio,1)),r&&r._mappingOperator||this._loadTextureInfo(this,this,e,t,s,!1)}_loadTextureInfo(e,t,s,i,a,r){var n=e,o=t;a.normalUvTransform&&(i.uniform1i(a.normalUvSlot,o.normalUvSlot),i.uniformMatrix3fv(a.normalUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.normalUvTransform.elements))),a.bumpUvTransform&&(i.uniform1i(a.bumpUvSlot,o.bumpUvSlot),i.uniformMatrix3fv(a.bumpUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.bumpUvTransform.elements))),a.bumpScaleUvTransform&&(i.uniform1i(a.bumpScaleUvSlot,o.bumpScaleUvSlot),i.uniformMatrix3fv(a.bumpScaleUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.bumpScaleUvTransform.elements))),a.normalScaleUvTransform&&(i.uniform1i(a.normalScaleUvSlot,o.normalScaleUvSlot),i.uniformMatrix3fv(a.normalScaleUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.normalScaleUvTransform.elements))),a.diffuseUvTransform&&(i.uniform1i(a.diffuseUvSlot,o.diffuseUvSlot),i.uniformMatrix3fv(a.diffuseUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.diffuseUvTransform.elements))),a.specularUvTransform&&(i.uniform1i(a.specularUvSlot,o.specularUvSlot),i.uniformMatrix3fv(a.specularUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.specularUvTransform.elements))),a.metalnessUvTransform&&(i.uniform1i(a.metalnessUvSlot,o.metalnessUvSlot),i.uniformMatrix3fv(a.metalnessUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.metalnessUvTransform.elements))),a.emissionColorUvTransform&&(i.uniform1i(a.emissionColorUvSlot,o.emissionColorUvSlot),i.uniformMatrix3fv(a.emissionColorUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.emissionColorUvTransform.elements))),a.specularContribUvTransform&&(i.uniform1i(a.specularContribUvSlot,o.specularContribUvSlot),i.uniformMatrix3fv(a.specularContribUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.specularContribUvTransform.elements))),a.transparencyUvTransform&&(i.uniform1i(a.transparencyUvSlot,o.transparencyUvSlot),i.uniformMatrix3fv(a.transparencyUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.transparencyUvTransform.elements))),a.opacityUvTransform&&(i.uniform1i(a.opacityUvSlot,o.opacityUvSlot),i.uniformMatrix3fv(a.opacityUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.opacityUvTransform.elements))),a.translucencyUvTransform&&(i.uniform1i(a.translucencyUvSlot,o.translucencyUvSlot),i.uniformMatrix3fv(a.translucencyUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.translucencyUvTransform.elements))),a.translucencyColorUvTransform&&(i.uniform1i(a.translucencyColorUvSlot,o.translucencyColorUvSlot),i.uniformMatrix3fv(a.translucencyColorUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.translucencyColorUvTransform.elements))),a.roughnessUvTransform&&(i.uniform1i(a.roughnessUvSlot,o.roughnessUvSlot),i.uniformMatrix3fv(a.roughnessUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.roughnessUvTransform.elements))),a.anisotropy&&(n=r?e:e._anisotropy,o=r?t:t._anisotropy,a.anisotropyUvTransform&&(i.uniform1i(a.anisotropyUvSlot,o.anisotropyUvSlot),i.uniformMatrix3fv(a.anisotropyUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.anisotropyUvTransform.elements))),a.anisotropyAngleUvTransform&&(i.uniform1i(a.anisotropyAngleUvSlot,o.anisotropyAngleUvSlot),i.uniformMatrix3fv(a.anisotropyAngleUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.anisotropyAngleUvTransform.elements)))),a.displacementUvTransform&&(n=r?e:e._displacement,o=r?t:t._displacement,i.uniform1i(a.displacementUvSlot,o.displacementUvSlot),i.uniformMatrix3fv(a.displacementUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.displacementUvTransform.elements))),a.iridescenceUvTransform&&(n=r?e:e._iridescence,o=r?t:t._iridescence,i.uniform1i(a.iridescenceUvSlot,o.iridescenceUvSlot),i.uniformMatrix3fv(a.iridescenceUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.iridescenceUvTransform.elements))),a.iridescenceThicknessUvTransform&&(n=r?e:e._iridescence,o=r?t:t._iridescence,i.uniform1i(a.iridescenceThicknessUvSlot,o.iridescenceThicknessUvSlot),i.uniformMatrix3fv(a.iridescenceThicknessUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.iridescenceThicknessUvTransform.elements))),(a.sheen||a.sheenMap||a.sheenColor||a.sheenColorMap)&&(n=r?e:e._sheen,o=r?t:t._sheen,a.sheenUvTransform&&(i.uniform1i(a.sheenUvSlot,o.sheenUvSlot),i.uniformMatrix3fv(a.sheenUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.sheenUvTransform.elements))),a.sheenRoughnessUvTransform&&(i.uniform1i(a.sheenRoughnessUvSlot,o.sheenRoughnessUvSlot),i.uniformMatrix3fv(a.sheenRoughnessUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.sheenRoughnessUvTransform.elements))),a.sheenColorUvTransform&&(i.uniform1i(a.sheenColorUvSlot,o.sheenColorUvSlot),i.uniformMatrix3fv(a.sheenColorUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.sheenColorUvTransform.elements)))),(a.clearCoat||a.clearCoatMap)&&(n=r?e:e._clearCoat,o=r?t:t._clearCoat,a.clearCoatRoughnessUvTransform&&(i.uniform1i(a.clearCoatRoughnessUvSlot,o.clearCoatRoughnessUvSlot),i.uniformMatrix3fv(a.clearCoatRoughnessUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.clearCoatRoughnessUvTransform.elements))),a.clearCoatUvTransform&&(i.uniform1i(a.clearCoatUvSlot,o.clearCoatUvSlot),i.uniformMatrix3fv(a.clearCoatUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.clearCoatUvTransform.elements))),a.clearCoatNormalUvTransform&&(i.uniform1i(a.clearCoatNormalUvSlot,o.clearCoatNormalUvSlot),i.uniformMatrix3fv(a.clearCoatNormalUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.clearCoatNormalUvTransform.elements))),a.clearCoatColorUvTransform&&(i.uniform1i(a.clearCoatColorUvSlot,o.clearCoatColorUvSlot),i.uniformMatrix3fv(a.clearCoatColorUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.clearCoatColorUvTransform.elements)))),a.thicknessUvTransform&&(n=r?e:e._thickness,o=r?t:t._thickness,i.uniform1i(a.thicknessUvSlot,o.thicknessUvSlot),i.uniformMatrix3fv(a.thicknessUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.thicknessUvTransform.elements))),(a.flakesCoverage||a.flakesCoverageMap)&&(n=r?e:e._dspbrFlakes,o=r?t:t._dspbrFlakes,a.flakesRoughnessUvTransform&&(i.uniform1i(a.flakesRoughnessUvSlot,o.flakesRoughnessUvSlot),i.uniformMatrix3fv(a.flakesRoughnessUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.flakesRoughnessUvTransform.elements))),a.flakesSizeUvTransform&&(i.uniform1i(a.flakesSizeUvSlot,o.flakesSizeUvSlot),i.uniformMatrix3fv(a.flakesSizeUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.flakesSizeUvTransform.elements))),a.flakesCoverageUvTransform&&(i.uniform1i(a.flakesCoverageUvSlot,o.flakesCoverageUvSlot),i.uniformMatrix3fv(a.flakesCoverageUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.flakesCoverageUvTransform.elements))),a.flakesColorUvTransform&&(i.uniform1i(a.flakesColorUvSlot,o.flakesColorUvSlot),i.uniformMatrix3fv(a.flakesColorUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.flakesColorUvTransform.elements))),a.flipFlopUvTransform&&(i.uniform1i(a.flipFlopUvSlot,o.flipFlopUvSlot),i.uniformMatrix3fv(a.flipFlopUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.flipFlopUvTransform.elements))),a.flipFlopColorUvTransform&&(i.uniform1i(a.flipFlopColorUvSlot,o.flipFlopColorUvSlot),i.uniformMatrix3fv(a.flipFlopColorUvTransform,!1,s.float32Matrix3x3Temp.setDoubles(n.flipFlopColorUvTransform.elements))))}areTexturesLoaded(){return!!super.areTexturesLoaded()&&(!(this.envMipMap&&this.envMipMap[0]&&!this.envMipMap[0]._canBeUsed())&&!(this.envMipMap&&this.envMipMap[1]&&!this.envMipMap[1]._canBeUsed()))}_computeAmbianceKeyAndProcessMaterial(e,t,s,a,o){super._computeAmbianceKeyAndProcessMaterial(e,t,s,a,o),this._volume&&this._volume._updateSSS>0&&this._updateSubsurfaceScattering();var l=a._pbrCheck;if(l&&(l.has=!0,l.hasTransparent||(l.hasTransparent=this.transparency>0||!!this.transparencyAddCoef||!!this.transparencyMulCoef||!!this.transparencyMap)),!e)return 0;const h=a.id;if(t.envMipMap.length>0&&t.envMipMap[0].hdr&&(null===t.envMipMap[1]||t.envMipMapID)){var p=t.envMipMap[0],d=t.id+"sm"+p.id,u=p.id;u+="-"+n.GGX,t.envMipMapID&&t.envMipMapID!==d&&i.decreaseUseCount(t.envMipMapID),t.envMipMapID=d,i.manager||i.init(0),t.envMipMap[1]=i.getAmbiance(u,!0,{hdr:p,brdf:n.GGX},d)}this.envMipMap=null,this.envMap=null,this.reflectionProbes=null,this.ambienceMatrix=r,this.useFiniteEnvMap=!1;var c=t.reflectionProbes,f=!!t.reflectionProbes,m=null!==this.overrideIBL&&this.overrideIBL._useCustom();if(t.envMipMap.length>0&&t.envMipMap[1]||m)if(m){f=!0,(g=this.overrideIBL).box&&(c={box:g.box,position:g.position});p=g.hdr,d=this.id+"mm"+p.id,u=p.id;u+="-"+g.name,u+="-"+n.GGX,g.curID&&g.curID!==d&&i.decreaseUseCount(g.curID),g.curID=d;var S=null;null!==g.mips?S=g.mips:(i.manager||i.init(0),S=i.getAmbiance(u,!g.direct,{hdr:p,brdf:n.GGX},d)),null!==S&&(this.envMap=p,this.envMipMap=[p,S])}else this.envMipMap=t.envMipMap,this.envMap=t.envMipMap[0],this.ambienceMatrix=t.ambienceMatrix;if(this._sheenData){var C=this._sheenData,_=null!==C.overrideIBL,M=_&&C._useCustom(),v=_&&!M&&t.envMipMap.length>0;if(_=M||v){var g=C.overrideIBL;if(v){p=t.envMipMap[0],d=t.id+"ss"+p.id;u=p.id;u+="-"+g.brdf,t.envMipMapSheenID&&t.envMipMapSheenID!==d&&i.decreaseUseCount(t.envMipMapSheenID),t.envMipMapSheenID=d}else{p=g.hdr,d=this.id+"ms"+p.id;u=p.id;u+="-"+g.name,u+="-"+g.brdf,g.curID&&g.curID!==d&&i.decreaseUseCount(g.curID),g.curID=d}S=null;i.manager||i.init(1),S=i.getAmbiance(u,!g.direct,{hdr:p,brdf:g.brdf},d),this._sheenData.envMipMap=S}}return c&&(this.reflectionProbes=t.reflectionProbes),this._needsIBLLightExtraction()&&this.envMap&&!f&&0===s.dirIBLLights&&this._sendEvent("requestIBLLightExtraction",{rendererID:h}),t.useFiniteEnvMap&&!f&&(this.useFiniteEnvMap=t.useFiniteEnvMap,this.parallaxCorrectionParameters=t.parallaxCorrectionParameters),(this.envMap?1:0)|(this.reflectionProbes?2:0)|(this._sheenData&&this._sheenData.envMipMap?4:0)|(this.useFiniteEnvMap?8:0)|(this.envMap&&this.envMap.rgbHdr?16:0)|(this.envMipMap&&this.envMipMap[1]&&this.envMipMap[1].hasDiffuse?32:0)}_defaultPDSFXOverridableFunctions(){var t=super._defaultPDSFXOverridableFunctions();return Object.assign(t.fragment,{ComputeViewNormal:e._ShaderChunk.PDSFXComputeViewNormal_FS,ComputeSpecularReflectance:e._ShaderChunk.PDSFXComputeSpecularReflectance_FS,ComputeEmissive:e._ShaderChunk.PDSFXComputeEmissive_FS,ComputeTranslucencyColor:e._ShaderChunk.PDSFXComputeTranslucencyColor_FS,ComputeClearcoatColor:e._ShaderChunk.PDSFXComputeClearcoatColor_FS,ComputeFlakeColor:e._ShaderChunk.PDSFXComputeFlakeColor_FS,ComputeFlipFlopColor:e._ShaderChunk.PDSFXComputeFlipFlopColor_FS,ComputeSheenColor:e._ShaderChunk.PDSFXComputeSheenColor_FS,ComputeRoughness:e._ShaderChunk.PDSFXComputeRoughness_FS,ComputeTransparency:e._ShaderChunk.PDSFXComputeTransparency_FS,ComputeClearcoatViewNormal:e._ShaderChunk.PDSFXComputeClearcoatViewNormal_FS,ComputeTranslucency:e._ShaderChunk.PDSFXComputeTranslucency_FS,ComputeThickness:e._ShaderChunk.PDSFXComputeThickness_FS,ComputeClearcoat:e._ShaderChunk.PDSFXComputeClearcoat_FS,ComputeClearcoatRoughness:e._ShaderChunk.PDSFXComputeClearcoatRoughness_FS,ComputeFlakeCoverage:e._ShaderChunk.PDSFXComputeFlakeCoverage_FS,ComputeFlakeRoughness:e._ShaderChunk.PDSFXComputeFlakeRoughness_FS,ComputeFlakeSize:e._ShaderChunk.PDSFXComputeFlakeSize_FS,ComputeFlipFlop:e._ShaderChunk.PDSFXComputeFlipFlop_FS,ComputeSheen:e._ShaderChunk.PDSFXComputeSheen_FS,ComputeSheenRoughness:e._ShaderChunk.PDSFXComputeSheenRoughness_FS,ComputeMetallic:e._ShaderChunk.PDSFXComputeMetallic_FS,ComputeSpecular:e._ShaderChunk.PDSFXComputeSpecular_FS,ComputeAnisotropy:e._ShaderChunk.PDSFXComputeAnisotropy_FS,ComputeAnisotropyRotation:e._ShaderChunk.PDSFXComputeAnisotropyRotation_FS,ComputeIridescence:e._ShaderChunk.PDSFXComputeIridescence_FS,ComputeIridescenceThickness:e._ShaderChunk.PDSFXComputeIridescenceThickness_FS}),t}setPDSFXOverridableFunctions(t,s){var i={};if(Object.assign(i,s),Object.assign(i,{ComputeTranslucencyColor:null,ComputeClearcoatColor:null,ComputeFlakeColor:null,ComputeFlipFlopColor:null,ComputeSheenColor:null,ComputeClearcoatViewNormal:null,ComputeTranslucency:null,ComputeThickness:null,ComputeClearcoat:null,ComputeClearcoatRoughness:null,ComputeFlakeCoverage:null,ComputeFlakeRoughness:null,ComputeFlakeSize:null,ComputeFlipFlop:null,ComputeSheen:null,ComputeSheenRoughness:null,ComputeMetallic:null,ComputeSpecular:null,ComputeAnisotropy:null,ComputeAnisotropyRotation:null,ComputeIridescence:null,ComputeIridescenceThickness:null}),super.setPDSFXOverridableFunctions(t,i),this._PDSFXData){var a=this._PDSFXData._extraDefines,r=this.__physicalMode>l.DSPBR21x;a.clearCoat=this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeClearcoat!==e._ShaderChunk.PDSFXComputeClearcoat_FS,a.clearCoat&&!this._clearCoat&&(this._clearCoat=new y({},this)),a.dspbrFlakes=this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeFlakeCoverage!==e._ShaderChunk.PDSFXComputeFlakeCoverage_FS,a.flipFlop=this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeFlipFlop!==e._ShaderChunk.PDSFXComputeFlipFlop_FS,a.dspbrFlakes&&!this._dspbrFlakes&&(this._dspbrFlakes=new g({},this),this._specGlossFlakes=null),a.sheen=!r&&this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeSheen!==e._ShaderChunk.PDSFXComputeSheen_FS||r&&this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeSheenColor!==e._ShaderChunk.PDSFXComputeSheenColor_FS,a.sheen&&!this._sheen&&(this._sheen=new R({},this)),a.anisotropy=this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeAnisotropy!==e._ShaderChunk.PDSFXComputeAnisotropy_FS,a.anisotropy&&!this._anisotropy&&(this._anisotropy=new E({},this)),a.thickness=this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeThickness!==e._ShaderChunk.PDSFXComputeThickness_FS,a.thickness&&!this._thickness&&(this._thickness=new U({},this)),a.iridescence=this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeIridescence!==e._ShaderChunk.PDSFXComputeIridescence_FS,a.iridescence&&!this._iridescence&&(this._iridescence=new w({},this)),a.translucency=this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeTranslucency!==e._ShaderChunk.PDSFXComputeTranslucency_FS,a.transparency=this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeTransparency!==e._ShaderChunk.PDSFXComputeTransparency_FS,a.emissionColor=this._PDSFXData.PDSFX_OverridableFunctions_FS.ComputeEmissive!==e._ShaderChunk.PDSFXComputeEmissive_FS,this.setSheen({})}}updateDeferredMaterials(t){super.updateDeferredMaterials(t),this._deferredMaterials[e.MaterialToUse.transparentShadowMaterial]=this}}return $.prototype.isPhysicalMaterial=!0,$.prototype._shaderID="physicalDS",$.prototype._autoForceSide=!0,$}),define("DS/Materials/DSPBR22x",["DS/Mesh/ThreeJS_Base","DS/Materials/PhysicalMaterial"],function(e,t){"use strict";const s=e.DSPBRSubTypes;class i extends t{constructor(e){e=e||{};var i={};Object.assign(i,e),t._setTypeParams(i),i.dspbr22x=!0,super(i),this._subtype=void 0!==i._subtype?i._subtype:s.Generic}clone(){var e=new i;return super.clone(e),e._subtype=this._subtype,e}getSubType(){switch(this._subtype){case s.Metal:return"Metal";case s.Glass:return"Glass";case s.Plastic:return"Plastic";case s.Textile:return"Textile";case s.Leather:return"Leather";case s["Car Paint"]:return"Car Paint";case s.Emissive:return"Emissive";case s.Basic:return"Basic";case s.Wood:return"Wood"}return"Generic"}}return i}),define("DS/Materials/DSPBR21x",["DS/Mesh/ThreeJS_Base","DS/Materials/PhysicalMaterial"],function(e,t){"use strict";class s extends t{constructor(e){e=e||{};var s={};Object.assign(s,e),t._setTypeParams(s),s.dspbr21x=!0,super(s)}clone(){var e=new s;return super.clone(e),e}}return s}),define("DS/Materials/DSPBR25x",["DS/Mesh/ThreeJS_Base","DS/Materials/PhysicalMaterial"],function(e,t){"use strict";const s=e.DSPBRSubTypes;class i extends t{constructor(e){e=e||{};var i={};Object.assign(i,e),t._setTypeParams(i),i.dspbr25x=!0,super(i),this._subtype=void 0!==i._subtype?i._subtype:s.Generic}clone(){var e=new i;return super.clone(e),e._subtype=this._subtype,e}getSubType(){switch(this._subtype){case s.Metal:return"Metal";case s.Glass:return"Glass";case s.Plastic:return"Plastic";case s.Textile:return"Textile";case s.Leather:return"Leather";case s["Car Paint"]:return"Car Paint";case s.Emissive:return"Emissive";case s.Basic:return"Basic";case s.Wood:return"Wood"}return"Generic"}}return i}),define("DS/Materials/MeshBasicMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/DeferrableMaterial","DS/Materials/PDSFXData","DS/Materials/DeferredCaches"],function(e,t,s,i){"use strict";class a extends t{constructor(t){super(),this.color=new e.Color(16777215),this.map=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this._depthValue=0,this._sceneGraphOrderMode=0,this.morphTargets=!1,this.morphNormals=!1,this.numSupportedMorphTargets=0,this.numSupportedMorphNormals=0,this.canvasNodeTextureSaveParams=null,this.setValues(t)}static call(e,t){console.warn("Old school inheritance on MeshBasicMaterial, please migrate to ES6 classes");var s=new a(t);Object.assign(e,s)}_getTextures(e){var t=super._getTextures(e);return t=t.concat([this.map])}getType(){return this._isFromGAS?"GASBasic":"Basic"}_dump(){var e=super._dump();return e.color=this.color.toArray(),this.map&&(e.color="textured"),e}_canUseLights(){return!1}_transparencyOnGPU(e){return super._transparencyOnGPU(e)||this.map&&this.transparent}getPredefinedMaterial(t,s,r){var n=this.getBaseId();switch(n+="NonLighted",n+="S"+this.side,n+="CP"+this.enableClipPlanes,n+="Type"+s,s){case e.DefaultAppearanceMode.__QA_AUTOMATION__:var o=this.map?new e.Color(11184810):this.color;if(n+="Col"+o.getHex(),n="id"+(n+="Op"+this._opacity).hashCode(),!i.PredefinedMaterials.has(n)){var l=new a({side:this.side,enableClipPlanes:this.enableClipPlanes,color:o,opacity:this._opacity});l._activatePDSFXMigrated(),l._PDSFXData._uniqueID="BasicQAAutomationPDSFX";l.setPDSFXOverridableFunctions({},{ProcessFinalColor:function(e,t){const s=e.variableHandler,i=e.pdsfxDefines,a=s.dereference()+t[0];return`\n                                    ${a} = ${(e=>s.vec4(e))()}(${e.vGetAlbedo()}, ${e.vGetOpacity()});\n                                    ${i.gammaOutput?`\n                                        ${a}.r = sqrt(${a}.r);\n                                        ${a}.g = sqrt(${a}.g);\n                                        ${a}.b = sqrt(${a}.b);\n                                        `:""}\n                                `}});var h=new i.DeferredMaterial(l);i.PredefinedMaterials.set(n,h)}break;default:return this}return i.PredefinedMaterials.get(n).get(this)}clone(e){return e||(e=new a),super.clone(e),e.color.copy(this.color),e.map=this.map,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e.numSupportedMorphTargets=this.numSupportedMorphTargets,e.numSupportedMorphNormals=this.numSupportedMorphNormals,e.canvasNodeTextureSize=this.canvasNodeTextureSize,e.canvasNodeTextureSaveParams=this.canvasNodeTextureSaveParams,e}activatePDSFX(e){e=e||{},this._PDSFXData=new s,this._PDSFXData.PDSFX=!0,this._setDefaultPDSFXOverridableFunctions()}loadUniforms(e,t,s,i,a,r){e.loadUniformsCommon(t,this,s,i,a,r),e.loadUniformsDepthLayer(t,this,s)}}return a.prototype._shaderID="basic",a}),define("DS/Materials/GridMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/MeshBasicMaterial"],function(e,t){"use strict";let s=function(e){const t=e.variableHandler;return`\n            ${(e=>t.float(e))("mixDistance")};\n        `},i=function(e,t){const s=e.variableHandler,i=t=>e.getUniform(t);return`\n            ${(e=>s.vec3(e))("vecDist")}  = ${e.vGetViewPosition()} - ${i("gridCenter")};\n            mixDistance = 16.0 * dot(vecDist, vecDist);\n            mixDistance /= (${i("gridSize")} * ${i("gridSize")});\n            mixDistance = clamp(mixDistance, 0.0, 1.0);\n        `},a=function(e,t){const s=e.variableHandler,i=e=>s.vec3(e);return`    \n            ${i("cCenter")}  = ${e.vGetAlbedo()}.rgb;\n            ${i("cBorder")}  = cCenter*cCenter;\n            return mix(cCenter, cBorder, mixDistance);\n        `};let r=function(e,t){const s=e.variableHandler,i=e.functionHandler,a=e.pdsfxDefines,r=t=>e.getUniform(t),n=e=>s.vec3(e),o=s.dereference()+t[0];return`\n            ${(e=>s.vec4(e))("texelColor")}  = ${i.sample2DTexture((t=>e.getTextureUniform(t))("gridTexture"),`${r("gridRepeat")} * ${e.vGetTexCoord0()}.xy + ${r("gridOffset")} `)};\n            ${n("cCenter")}  = ${e.vGetAlbedo()}.rgb * texelColor.rgb;\n            ${n("cBorder")}  = cCenter*cCenter;\n            ${o}.r = mix(cCenter.r, cBorder.r, mixDistance);\n            ${o}.g = mix(cCenter.g, cBorder.g, mixDistance);\n            ${o}.b = mix(cCenter.b, cBorder.b, mixDistance);\n            ${o}.a = texelColor.a * ${e.vGetOpacity()} * mix(${e.getUniform("attenuation")}, 0.0, mixDistance);\n            \n            ${a.gammaOutput?`\n                ${o}.r = sqrt(${o}.r);\n                ${o}.g = sqrt(${o}.g);\n                ${o}.b = sqrt(${o}.b);\n                `:""}\n        `},n=function(e,t){return`\n            return ${e.vGetOpacity()} * mix(${e.getUniform("attenuation")}, 0.0, mixDistance);\n        `};return class extends t{constructor(){super({}),this.useBlending=!0,this.side=e.DoubleSide,this.depthTest=!1,this.force=!0,this.opacity=1,this.transparent=!0,this.enableClipPlanes=!1,this.defines={GRID_USE_TEXTURE:!1},this._activatePDSFXMigrated("GridPDSFX");let t={gridCenter:{type:"v3",value:new e.Vector3},gridSize:{type:"f",value:1},attenuation:{type:"f",value:1},gridTexture:{type:"t2",value:null},gridOffset:{type:"v2",value:new e.Vector2},gridRepeat:{type:"v2",value:new e.Vector2}};this.setPDSFXUniforms(t),this.setPDSFXGlobalShaderCode(null,s),this.setPDSFXOverridableFunctions(null,{ComputeCommonValues:i,ComputeAlbedo:a,ComputeOpacity:n}),this._refreshPDSFXUniforms_private=function(e,t){var s=this.getPDSFXUniform("gridTexture").value;s&&(this.updatePDSFXUniform("gridOffset",s.offset),this.updatePDSFXUniform("gridRepeat",s.repeat))}}getType(){return"Grid"}setGridTexture(e){this.updatePDSFXUniform("gridTexture",e),this.needsUpdate=!0,e?(this.setPDSFXOverridableFunctions(null,{ComputeCommonValues:i,ProcessFinalColor:r}),this.defines.GRID_USE_TEXTURE=!0):(this.setPDSFXOverridableFunctions(null,{ComputeCommonValues:i,ComputeAlbedo:a,ComputeOpacity:n}),this.defines.GRID_USE_TEXTURE=!0)}_setMaterialShaderOptions(e,t,s,i,a,r){e.inlinedPostProActivated=!1,super._setMaterialShaderOptions(e,t,s,i,a,r)}getPredefinedMaterial(e,t,s){return this}updateDeferredMaterials(e){super.updateDeferredMaterials(e);for(let e=1;e<this._deferredMaterials.length;e++)this._deferredMaterials[e]=null}}}),define("DS/Materials/HatchingMaterials",["DS/Mesh/ThreeJS_Base","DS/Materials/MeshBasicMaterial"],function(e,t){"use strict";var s="undefined"!=typeof EXPERIENCE_PLAYER,i=window.SIMULATE_EXPERIENCE_PLAYER,a=null,r=null;if(s&&!EXPERIENCE_PLAYER||!s&&!i){class s extends t{constructor(t){super({side:e.FrontSide,vertexColors:e.VertexColorType.RGBA,force:!0}),this._activatePDSFXMigrated("HatchingMeshPDSFX");var s={planeU:{type:"v3",value:new e.Vector3(1,0,0)},planeV:{type:"v3",value:new e.Vector3(0,1,0)},hatchingDirection:{type:"v2",value:new e.Vector2(1,-1)},hatchingNormal:{type:"v2",value:new e.Vector2(-1,-1)},hatchingSpaceWidth:{type:"f",value:10},hatchingSpaceColor:{type:"v4",value:new e.Vector4(10,10,10,1)},hatchingLineWidth:{type:"f",value:1},hatchingLineColor:{type:"v4",value:new e.Vector4(0,0,0,1)}};this.setPDSFXUniforms(s);this.setPDSFXVaryings({_uv:{type:"v2"}});this.setPDSFXGlobalShaderCode(function(e){const t=e.variableHandler;return`\n                        ${(e=>t.vec4(e))("_mvPosition")};\n                    `},null);this.setPDSFXOverridableFunctions({ProcessViewTangentSpace:function(e,t){const s=e.variableHandler,i=s.dereference()+t[0];return`\n                            _mvPosition = ${(e=>s.vec4(e))()}(${i}.Position, 0.0);\n                        `},ComputeVaryingValues:function(e,t){const s=e.variableHandler,i=t=>e.getUniform(t),a=e=>s.vec2(e),r=e=>s.vec3(e),n=e=>s.vec4(e);return`                   \n                            ${(e=>s.mat4(e))("VM")}  = ${e.vGetViewMatrix()};\n                            ${r("mvPlaneU")}  = (VM * ${n()}(${i("planeU")}, 0.0)).xyz;\n                            ${r("mvPlaneV")}  = (VM * ${n()}(${i("planeV")}, 0.0)).xyz;\n                            ${(t=>e.getVarying(t))("_uv")} = ${a()}(dot(_mvPosition.xyz, mvPlaneU), dot(_mvPosition.xyz, mvPlaneV))-${a()}(dot(VM[3].xyz, mvPlaneU), dot(VM[3].xyz, mvPlaneV));\n                        `}},{ProcessFinalColor:function(e,t){const s=e.variableHandler,i=t=>e.getUniform(t),a=e=>s.float(e),r=e=>s.vec2(e),n=s.dereference()+t[0];return`\n                            ${r("norm")} = ${i("hatchingNormal")};\n                            ${r("uv")} = ${(t=>e.getVarying(t))("_uv")};\n                            ${a("eval")}  = norm.x*uv.x + norm.y*uv.y;\n                            ${a("k")} = mod(eval, ${i("hatchingSpaceWidth")});\n                            ${r("fwx")}  = dot(norm, dFdx(uv))*norm;\n                            ${r("fwy")}  = dot(norm, dFdy(uv))*norm;\n                            ${r("fw")}  = abs(fwx) + abs(fwy);\n                            ${a("fwlen")}  = length(fw);\n                            ${a("tol")}  = min( ${i("hatchingLineWidth")}*fwlen, ${i("hatchingSpaceWidth")} - fwlen);\n                            if (k < tol/2.0 || k > ${i("hatchingSpaceWidth")} - tol/2.0) {\n                                ${n} = ${i("hatchingLineColor")};\n                            } else {\n                                ${n} = ${i("hatchingSpaceColor")};\n                            }\n                        `}}),this.stripesDirection=new e.Vector2(1,1),this.spaceWidth=1,this.spaceColor=new e.Color(16777215),this.spaceOpacity=1,this.stripesWidth=1,this.stripesColor=new e.Color(0),this.stripesOpacity=1,this.autoSpaceColor=!1,this.autoStripesColor=!1,this.enableClipPlanes=!0,this._refreshPDSFXUniforms_private=function(t,s,i){var a=this._renderedClipPlane;if(a){var r=new e.Vector3;r.crossVectors(a.normal,a.upVector),r.normalize();var n=new e.Vector3;n.crossVectors(r,a.normal),this.updatePDSFXUniform("planeU",r),this.updatePDSFXUniform("planeV",n)}this.updatePDSFXUniform("hatchingDirection",this.stripesDirection.clone().normalize()),this.updatePDSFXUniform("hatchingNormal",new e.Vector2(this.stripesDirection.y,-this.stripesDirection.x).normalize()),this.updatePDSFXUniform("hatchingSpaceWidth",this.spaceWidth),this.updatePDSFXUniform("hatchingLineWidth",this.stripesWidth),t.gammaInput?(this.updatePDSFXUniform("hatchingSpaceColor",new e.Vector4(this.spaceColor.r*this.spaceColor.r,this.spaceColor.g*this.spaceColor.g,this.spaceColor.b*this.spaceColor.b,this.spaceOpacity)),this.updatePDSFXUniform("hatchingLineColor",new e.Vector4(this.stripesColor.r*this.stripesColor.r,this.stripesColor.g*this.stripesColor.g,this.stripesColor.b*this.stripesColor.b,this.stripesOpacity))):(this.updatePDSFXUniform("hatchingSpaceColor",new e.Vector4(this.spaceColor.r,this.spaceColor.g,this.spaceColor.b,this.spaceOpacity)),this.updatePDSFXUniform("hatchingLineColor",new e.Vector4(this.stripesColor.r,this.stripesColor.g,this.stripesColor.b,this.stripesOpacity)))},this.setValues(t)}clone(){var e=new s;return super.clone(e),e.stripesDirection=this.stripesDirection.clone(),e.spaceWidth=this.spaceWidth,e.spaceColor=this.spaceColor.clone(),e.spaceOpacity=this.spaceOpacity,e.stripesWidth=this.stripesWidth,e.stripesColor=this.stripesColor.clone(),e.stripesOpacity=this.stripesOpacity,e.autoStripesColor=this.autoStripesColor,e.autoSpaceColor=this.autoSpaceColor,e.updatePDSFXUniform("planeU",this.getPDSFXUniform("planeU").value.clone()),e.updatePDSFXUniform("planeV",this.getPDSFXUniform("planeV").value.clone()),e}getType(){return"Hatching"}}a=s;class i extends t{constructor(t){super({side:e.FrontSide,vertexColors:e.VertexColorType.RGBA,force:!0}),this._activatePDSFXMigrated("ScreenSizeHatchingMeshPDSFX");var s={hatchingNormal:{type:"v2",value:new e.Vector2(-1,-1)},hatchingSpaceWidth:{type:"f",value:10},hatchingSpaceColor:{type:"v4",value:new e.Vector4(10,10,10,1)},hatchingLineWidth:{type:"f",value:1},hatchingLineColor:{type:"v4",value:new e.Vector4(0,0,0,1)},screenSize:{type:"v2",value:new e.Vector2(10,10)}};this.setPDSFXUniforms(s);this.setPDSFXGlobalShaderCode(function(e){const t=e.variableHandler;return`\n                        ${(e=>t.vec4(e))("_mvPosition")};\n                    `},null);this.setPDSFXOverridableFunctions(null,{ProcessFinalColor:function(e,t){const s=e.variableHandler,i=t=>e.getUniform(t),a=e=>s.float(e),r=e=>s.vec2(e),n=s.dereference()+t[0];return`\n                            ${(e=>s.vec4(e))("clipPos")}  = ${e.vGetClipSpacePosition()};\n                            ${r("pixelPosition")}  = ${r()}(${i("screenSize")}.x*(1.0+clipPos.x/clipPos.w)/2.0, ${i("screenSize")}.y*(1.0+clipPos.y/clipPos.w)/2.0);\n                            ${a("m")} = mod(dot(pixelPosition, ${i("hatchingNormal")}), ${i("hatchingSpaceWidth")});\n                            // force m to be between 0 and hatchingSpaceWidth\n                            if (m < 0.0) {\n                                m += ${i("hatchingSpaceWidth")};\n                            }\n                            // compute distance to theoritical stripe\n                            m = abs(${i("hatchingSpaceWidth")}*0.5 - m);\n                            m -=  ${i("hatchingLineWidth")};\n                            ${a("k")} = 1.0;\n                            if (m < 0.0) {\n                                k = 0.0;\n                            } else if ( m < 1.0) {\n                                k = m;\n                            }\n                            ${n} = k*${i("hatchingSpaceColor")} + (1.0-k)*${i("hatchingLineColor")};\n                        `}}),this.stripesDirection=new e.Vector2(1,1),this.spaceWidth=1,this.spaceColor=new e.Color(16777215),this.spaceOpacity=1,this.stripesWidth=1,this.stripesColor=new e.Color(0),this.stripesOpacity=1,this.autoSpaceColor=!1,this.autoStripesColor=!1,this.enableClipPlanes=!0,this._refreshPDSFXUniforms_private=function(t,s,i){this.updatePDSFXUniform("screenSize",new e.Vector2(t.domElement.width,t.domElement.height)),this.updatePDSFXUniform("hatchingNormal",new e.Vector2(this.stripesDirection.y,-this.stripesDirection.x).normalize()),this.updatePDSFXUniform("hatchingSpaceWidth",this.spaceWidth),this.updatePDSFXUniform("hatchingLineWidth",this.stripesWidth/2),t.gammaInput?(this.updatePDSFXUniform("hatchingSpaceColor",new e.Vector4(this.spaceColor.r*this.spaceColor.r,this.spaceColor.g*this.spaceColor.g,this.spaceColor.b*this.spaceColor.b,this.stripesOpacity)),this.updatePDSFXUniform("hatchingLineColor",new e.Vector4(this.stripesColor.r*this.stripesColor.r,this.stripesColor.g*this.stripesColor.g,this.stripesColor.b*this.stripesColor.b,this.stripesOpacity))):(this.updatePDSFXUniform("hatchingSpaceColor",new e.Vector4(this.spaceColor.r,this.spaceColor.g,this.spaceColor.b,this.stripesOpacity)),this.updatePDSFXUniform("hatchingLineColor",new e.Vector4(this.stripesColor.r,this.stripesColor.g,this.stripesColor.b,this.stripesOpacity)))},this.setValues(t)}clone(){var e=new i;return super.clone(e),e.stripesDirection=this.stripesDirection.clone(),e.spaceWidth=this.spaceWidth,e.spaceColor=this.spaceColor.clone(),e.spaceOpacity=this.spaceOpacity,e.stripesWidth=this.stripesWidth,e.stripesColor=this.stripesColor.clone(),e.stripesOpacity=this.stripesOpacity,e.autoStripesColor=this.autoStripesColor,e.autoSpaceColor=this.autoSpaceColor,e}getType(){return"ScreenSizeHatching"}}r=i}return{HatchingMeshMaterial:a,ScreenSizeHatchingMeshMaterial:r}}),define("DS/Materials/OutlineMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/MeshBasicMaterial","DS/ShaderBuilders/ShaderUtils/FunctionUtils"],function(e,t,s){"use strict";const i=(e,t,i)=>s.FunctionHandler.callFunction(e,t,i),a=function(e,t){const s=e.functionHandler,i=e.userDefines;return`\n                occluded = ${s.cF("correctZFighting",null,[])};           \n                ${i.OUTLINES_SHOW_OCCLUDED?`\n                    if (occluded) {\n                        ${e.vSetFragDepth("0.001")};\n                    } else {\n                        ${e.vSetFragDepth("0.0")};\n                    }\n                    `:""}\n            `},r=function(e,t){const s=e.variableHandler,a=e.functionHandler,r=(e.pdsfxDefines,e.userDefines),n=r.NB_OUTLINE_MAPS,o=r.LAST_OUTLINE_MAP_SIZE_X,l=r.LAST_OUTLINE_MAP_SIZE_Y,h=r.MAX_OUTLINE_MAP_SIZE,p=(e,t,i)=>a.cF("sampleOutlineMaps","v4",[a.prmF(e),a.prmV2(`${s.vec2()}(${t}, ${i})`)]);function d(e){const t="_"+e;return`\n                ${s.float("dx"+t)} ;\n                ${s.float("dy"+t)} ;  \n                ${s.float("x"+t)} ; \n                ${s.float("y"+t)} ; \n                if (texIds[4 - ${e}] == ${n} - 1) {\n                    dx${t} = 1.0 / ${o};\n                    dy${t} = 1.0 / ${l};\n                    y${t} = floor(idInTexture${t}/${o});\n                    x${t} = idInTexture${t} - y${t}*${o};\n                } else {\n                    dx${t} = 1.0 / ${h};\n                    dy${t} = 1.0 / ${h};\n                    y${t} = floor(idInTexture${t}/${h});\n                    x${t} = idInTexture${t} - y${t}*${h};\n                }\n                `}return`      \n                ${s.vec3("_position")} = ${e.vGetAttribPosition()};\n                ${s.vec3("_normal")}  = ${e.vGetAttribNormal()};\n\n                ${s.vec4("texShiftMul")}  = ${s.vec4()}(65536.0, 4096.0, 256.0, 16.0);\n                ${s.vec4("texShiftDiv")}  = ${s.vec4()}(1.0/4096.0, 1.0/256.0, 1.0/16.0, 1.0);\n                ${s.ivec4("texIds")}  = ${s.ivec4()}(floor(mod(${s.vec4()}(_normal.z), texShiftMul) * texShiftDiv));\n\n                ${s.float("idInTexture_1")}  = _position.x;\n                ${s.float("idInTexture_2")}  = _position.y;\n                ${s.float("idInTexture_3")}  = _position.z;\n                ${s.float("idInTexture_4")}  = _normal.x;\n\n                ${d(1)}\n                ${d(2)}\n                ${d(3)}\n                ${d(4)}\n\n                ${s.vec3("current")}  = ${p("texIds.w","dx_1 * ( x_1 + 0.5 )","dy_1 * ( y_1 + 0.5 )")}.xyz;\n                ${s.vec3("opposite")}  = ${p("texIds.z","dx_2 * ( x_2 + 0.5 )","dy_2 * ( y_2 + 0.5 ) ")}.xyz;\n                ${s.vec3("firstSide")}  = ${p("texIds.y","dx_3 * ( x_3 + 0.5 )","dy_3 * ( y_3 + 0.5 )")}.xyz;\n                ${s.vec3("secondSide")}  = ${p("texIds.x","dx_4 * ( x_4 + 0.5 )","dy_4 * ( y_4 + 0.5 )")}.xyz;\n\n                ${s.mat4("PM")}  = ${e.vGetProjectionMatrix()};\n\n                ${s.vec4("mv_current")}  = ${i("computeModelViewPosition","v4",[a.prmV3("current")])};\n                ${s.vec4("mv_opposite")}  = ${i("computeModelViewPosition","v4",[a.prmV3("opposite")])};\n                ${s.vec4("mv_firstSide")}  = ${i("computeModelViewPosition","v4",[a.prmV3("firstSide")])};\n                ${s.vec4("mv_secondSide")}  = ${i("computeModelViewPosition","v4",[a.prmV3("secondSide")])};\n                viewCurrent = mv_current.xyz / mv_current.w;\n                viewOpposite = mv_opposite.xyz / mv_opposite.w;\n                ${s.vec3("viewFirst")}  = mv_firstSide.xyz / mv_firstSide.w;\n                ${s.vec3("viewSecond")}  = mv_secondSide.xyz / mv_secondSide.w;\n\n                isPersp = PM[2][3] == -1.0;\n\n                newViewPosition = ${s.vec4()}(viewCurrent, 1.0);\n\n                ${s.vec3("mv_firstNormal")}  = normalize(cross(viewOpposite - viewCurrent, viewFirst - viewCurrent));\n                ${s.vec3("mv_secondNormal")}  = normalize(cross(viewSecond - viewCurrent, viewOpposite - viewCurrent));\n\n                isOutline=false;\n                if (isPersp) {\n                    isOutline = ${a.cF("isOutlinePerspective","b",[a.prmV3("viewCurrent"),a.prmV3("viewOpposite"),a.prmV3("viewFirst"),a.prmV3("viewSecond"),a.prmV3("mv_firstNormal"),a.prmV3("mv_secondNormal")])};\n                } else {\n                    isOutline = ${a.cF("isOutlineOrthographic","b",[a.prmV3("mv_firstNormal"),a.prmV3("mv_secondNormal")])};\n                }\n            `},n=function(e,t){const s=t[0],i=e.variableHandler;e.functionHandler;return`         \n                ${i.float("far")} = ${e.vGetNearFarLogFactor()}.y;\n                if (isPersp) {\n                    if (!isOutline) {\n                        //if both side normals are on the same side with respect to the camera plan\n                        newViewPosition.xyz*=(1000000000.0*far);\n                    }\n                } else {\n                    if (!isOutline) {\n                        //if both side normals are on the same side with respect to the camera plan\n                        newViewPosition.z = 1000000000.0*far; \n                    }\n                }\n                ${i.dereference()}${s}.Position = newViewPosition.xyz;\n            `},o={VS_global:function(e){const t=e.variableHandler,s=e.functionHandler,i=(e.pdsfxDefines,t=>e.getTextureUniform(t)),a=e.userDefines.NB_OUTLINE_MAPS;let r="";for(let e=0;e<a;e++)r=`\n                        ${r}\n                        if (idInTextureArray == ${e}) {\n                            return ${s.sample2DTexture(i("outlinePositionMaps")+`[${e}]`,"texCoords")};\n                        }\n                    `;return`\n                    ${t.bool("isOutline")};\n                    ${t.vec4("newViewPosition")};\n                    ${t.vec3("viewCurrent")};\n                    ${t.vec3("viewOpposite")};\n                    ${t.float("far")};\n                    ${t.float("near")};\n                    ${t.bool("isPersp")};\n\n                    ${s.dF("isOutlinePerspective","b",[s.prmV3("viewCurrent"),s.prmV3("viewOpposite"),s.prmV3("viewFirstSide"),s.prmV3("viewSecondSide"),s.prmV3("mv_firstNormal"),s.prmV3("mv_secondNormal")])} {\n                        ${t.vec3("viewRayCurrent")} = normalize(viewCurrent);\n                        ${t.vec3("viewRayOpposite")} = normalize(viewOpposite);\n                        ${t.vec3("viewRayFirst")} = normalize(viewFirstSide);\n                        ${t.vec3("viewRaySecond")} = normalize(viewSecondSide);\n\n                        //first triangle\n                        ${t.float("dot_curr_first")}  = dot(viewRayCurrent,mv_firstNormal);\n                        ${t.float("dot_opp_first")}  = dot(viewRayOpposite,mv_firstNormal);\n                        ${t.float("dot_first_first")}  = dot(viewRayFirst,mv_firstNormal);\n        \n                        //second triangle\n                        ${t.float("dot_curr_second")}  = dot(viewRayCurrent,mv_secondNormal);\n                        ${t.float("dot_opp_second")}  = dot(viewRayOpposite,mv_secondNormal);\n                        ${t.float("dot_second_second")}  = dot(viewRaySecond,mv_secondNormal);\n        \n                        if (dot_curr_first*dot_opp_first > 0.0\n                            && dot_curr_first*dot_first_first > 0.0\n                            && dot_curr_second*dot_opp_second > 0.0\n                            && dot_curr_second*dot_second_second > 0.0)\n                        {\n                            if (dot_first_first*dot_second_second < 0.0) {\n                                return true;\n                            }\n                        }\n        \n                        return false;\n                    }\n\n                    ${s.dF("isOutlineOrthographic","b",[s.prmV3("mv_firstNormal"),s.prmV3("mv_secondNormal")])} {\n                        return mv_firstNormal.z*mv_secondNormal.z < 0.0;\n                    }\n\n                    ${s.dF("sampleOutlineMaps","v4",[s.prmI("idInTextureArray"),s.prmV2("texCoords")])} {\n                        ${r}\n                        return ${t.vec4()}(0.0, 0.0, 0.0, 0.0);\n                    }\n                `},FS_global:function(e){const t=e.variableHandler,s=e.functionHandler,a=e.pdsfxDefines,r=(e.userDefines,t=>e.getTextureUniform(t)),n=t=>e.getUniform(t);let o="";o=a.renderToFloatTexture?`\n                        ${s.dF("getNormalDepth","v4",[s.prmV2("coord")])} {\n                            ${t.vec4("res")}  = ${s.sample2DTexture(r("depthBuffer"),"coord")};\n                            ${t.vec3("normal")}  = normalize(2.0 * res.xyz - 1.0);\n                            ${t.float("depth")}  = res.w;\n                            if (depth < 0.01) {\n                                depth = 1.0;\n                            }\n                            return ${t.vec4()}(normal,depth);\n                        }\n\n                        ${s.dF("getPolygonOffset","f",[s.prmV2("coord"),s.prmV3("vN"),s.prmF("depth")])} {\n                            ${t.mat4("P")} = ${e.vGetProjectionMatrix()};\n                            ${t.bool("isPersp")}  = P[2][3] == -1.0;\n\n                            ${t.float("slopeFactor")} = 0.1;\n                            if (isPersp) {\n                                slopeFactor = 1.0;\n                            }\n\n                            ${t.vec2("sr")}  = 2.0 / ${n("depthMapSize")};\n                            ${t.vec2("vC")}  = (${e.vGetFragCoord()}.xy - 0.5) / ${n("depthMapSize")};\n                            vC = 2.0*vC - 1.0;\n\n                            ${t.float("K")}  = dot(${t.vec3()}(P[1][1] * (vC.x + P[2][0]), P[0][0] * (vC.y + P[2][1]), -P[0][0] * P[1][1]), vN);\n                            ${t.vec2("offset")}  = ${t.vec2()}(P[1][1] * vN.x*sr.x, P[0][0] * vN.y*sr.y);\n\n                            ${t.float("factor")}  = (-depth - 0.5 * (P[2][2] - 1.0)) / K;\n                            ${t.float("dFdxOfZ")}  = abs(offset.x * factor);\n                            ${t.float("dFdyOfZ")}  = abs(offset.y * factor);\n\n                            ${t.float("slope")}  = max(dFdxOfZ, dFdyOfZ);\n                            slope = min(max(slope, 1e-6), 1e-3);\n\n                            return (slope * slopeFactor) + (DEPTH_PRECISION * 1.5);\n                        }\n\n                        ${s.dF("getDepth","f",[s.prmV2("coord")])} {\n                            ${t.vec4("nDepth")}  = ${s.cF("getNormalDepth","v4",[s.prmV2("coord")])};\n                            ${t.float("offset")}  =  ${s.cF("getPolygonOffset","f",[s.prmV2("coord"),s.prmV3("nDepth.xyz"),s.prmF("nDepth.w")])};\n\n                            return nDepth.w + offset;\n                        }\n                    `:`\n                        ${s.dF("getDepth","f",[s.prmV2("coord")])} {\n                            ${t.vec4("rgba_depth")}  = ${s.sample2DTexture(r("depthBuffer"),"coord")};\n        \n                            ${t.float("depth")}  = ${i("unpackRGBA","f",[s.prmV4("rgba_depth")])};\n                            if (depth > 1e-6) {\n                                return depth + DEPTH_PRECISION;\n                            }\n                            return 1.0;\n        \n                        }\n                    `;const l=e.getVarying("cP");let h="";for(let e=-1;e<=1;e++)for(let i=-1;i<=1;i++)h=`\n                            ${h}\n                            coordtoUse = coord + ${t.vec2()}(${t.float()}(${e}), ${t.float()}(${i})) * ${t.vec2()}(dx, dy);\n                            test += ${s.cF("depthSampleTest","f",[s.prmV2("coordtoUse"),s.prmF("delta"),s.prmF("depth")])};\n                        `;return`               \n                    ${t.bool("occluded")};\n                    ${o}\n        \n                    ${s.dF("depthSampleTest","f",[s.prmV2("coord"),s.prmF("delta"),s.prmF("depth")])} {\n                        ${t.float("fDepth")}  = ${s.cF("getDepth","f",[s.prmV2("coord")])};\n                        if ( fDepth < depth ) {\n                            return delta;\n                        }\n                        return 0.0;\n                    }\n                    ${s.dF("correctZFighting","b",[])}{\n\n                        ${t.vec2("coord")}  = 0.5 + 0.5*${l}.xy/${l}.w;\n                        ${t.vec2("coordtoUse")};\n                        ${t.float("depth")}  = 0.5 + 0.5 * ${l}.z / ${l}.w;\n                        ${t.float("delta")}  = 1.0/9.0;\n                        ${t.float("test")}  = 0.0;\n        \n                        ${t.float("dx")}  = 0.5/${n("depthMapSize")}.x;\n                        ${t.float("dy")}  = 0.5/${n("depthMapSize")}.y;\n        \n                        ${h}\n                        // if at this point 80% of the tests failed, discard\n                        if (test > 0.8) {\n                            return true;\n                        }\n                        return false;\n                    }\n                `},SimpleOutlinesShader:{VS_overridables:{ComputeCommonValues:r,ProcessViewTangentSpace:n,ProcessClipSpacePosition:function(e,t){const s=e.variableHandler,i=t[0];return`\n                            ${e.getVarying("cP")} = ${s.dereference()}${i};\n                        `}},FS_overridables:{ComputeCommonValues:a,ComputeAlbedo:function(e,t){return`\n                            return ${e.vGetAlbedo()};\n                        `},ComputeDiscard:function(e,t){return`        \n                            ${e.userDefines.OUTLINES_SHOW_OCCLUDED?"\n                                return false;\n                                ":"\n                                return occluded;\n                                "}\n                        `},ComputeOpacity:function(e,t){const s=e.variableHandler,i=e.userDefines;return`        \n                            ${s.float("op")} = ${e.vGetOpacity()};\n                            ${i.OUTLINES_SHOW_OCCLUDED?"\n                                if (occluded) {\n                                    return 0.3 * op;\n                                }\n                                ":""}\n                            return op;\n                        `}}},WideOutlinesShader:{VS_overridables:{ComputeCommonValues:r,ProcessViewTangentSpace:n,ProcessClipSpacePosition:function(e,t){const s=e.variableHandler,i=(e.userDefines,t[0]),a=t=>e.getUniform(t);return`\n                            ${s.mat4("PM")} = ${e.vGetProjectionMatrix()};\n                            if (isOutline) {\n                                ${s.float("sideExtrusion")}  = ${e.vGetAttribNormal()}.y;\n                                ${s.bool("isOpposite")}  = mod(abs(sideExtrusion), 2.0) == 0.0;\n\n                                ${s.vec4("mvpCurr")}  = PM*${s.vec4()}(viewCurrent,1.0);\n                                ${s.vec4("mvpOpp")}  = PM*${s.vec4()}(viewOpposite,1.0);\n\n                                //from wideLineClip chunk: in case curr or opp have a negative w component (i.e. behind the camera)\n                                ${s.vec2("testClip")}  = ${s.vec2()}(sign(mvpCurr.w + mvpCurr.z), sign(mvpOpp.w + mvpOpp.z));\n                                if ( testClip.x * testClip.y < 0.0 ){\n                                        ${s.float("a")} = (mvpCurr.w + mvpCurr.z)/((mvpCurr.w + mvpCurr.z) - (mvpOpp.w + mvpOpp.z));\n                                        if (testClip.y < 0.0) {\n                                            mvpOpp = (1.0 - a) * mvpCurr + a * mvpOpp;\n                                        } else {\n                                            mvpCurr = (1.0 - a) * mvpCurr + a * mvpOpp;\n                                        }\n                                    }\n\n                                //curr and opp in real pixel\n                                // in [0,w]x[0,h] in pixel\n                                ${e.getVarying("screenCurr")} = (mvpCurr.xy / mvpCurr.w + 1.0) / ${a("pixelSize")}; \n                                // in [0,w]x[0,h] in pixel\n                                ${e.getVarying("screenOpp")} = (mvpOpp.xy / mvpOpp.w + 1.0) / ${a("pixelSize")}; \n\n                                //extrusion of the wide outline quad + computing the z so the quad is flat\n                                ${s.vec3("ndcCurr")}  = mvpCurr.xyz/mvpCurr.w;\n                                ${s.vec3("ndcOpp")}  = mvpOpp.xyz/mvpOpp.w;\n\n                                ${s.float("offset")} = sign(sideExtrusion) * ${a("outlineHalfWidth")};\n                                ${s.vec2("line")}  = normalize(${e.getVarying("screenOpp")} - ${e.getVarying("screenCurr")});\n                                ${s.vec2("lineNormal")}  = ${s.vec2()}(-line.y, line.x);\n\n                                ${s.vec2("px_pos")}  = ${e.getVarying("screenCurr")} + offset*lineNormal - ${a("outlineHalfWidth")}*line;\n\n                                ${s.vec3("ndcPos")}  = ${s.vec3()}((px_pos*pixelSize - 1.0), mvpCurr.z/mvpCurr.w);\n\n\n                                //so the 4 vertices of the outline have the same curr and opp for fragment shader treatment\n                                if (isOpposite) {\n                                    vec2 tmp = ${e.getVarying("screenCurr")};\n                                    ${e.getVarying("screenCurr")} = ${e.getVarying("screenOpp")};\n                                    ${e.getVarying("screenOpp")} = tmp;\n                                }\n\n                                //Final position\n                                ${s.vec4("clipSpacePos")}  = ${s.vec4()}(ndcPos*mvpCurr.w, mvpCurr.w);\n                                ${s.dereference()}${i} = clipSpacePos;\n                                ${e.getVarying("cP")} = mvpCurr;\n\n                            } else {\n                                ${s.dereference()}${i}  = PM*newViewPosition;\n                            }\n                        `}},FS_overridables:{ComputeCommonValues:a,ComputeAlbedo:function(e,t){return`\n                            return ${e.vGetAlbedo()};\n                        `},ComputeDiscard:function(e,t){const s=e.variableHandler;return`        \n                            ${e.userDefines.OUTLINES_SHOW_OCCLUDED?"\n                                return false;\n                                ":`\n                                if (occluded) {\n                                    return true;\n                                }\n                                ${s.bool("toDiscard")} = false;\n                                ${s.vec2("fCoord")}  = ${e.vGetFragCoord()}.xy;\n\n                                ${s.vec2("currOpp")}  = ${e.getVarying("screenOpp")} - ${e.getVarying("screenCurr")};\n                                ${s.vec2("currFcoord")}  = fCoord - ${e.getVarying("screenCurr")};\n                                ${s.vec2("oppFcoord")}  = fCoord - ${e.getVarying("screenOpp")};\n\n                                //round caps so each individual line can nicely connect to its neighbour\n                                if (dot(currOpp, currFcoord ) < 0.0) {\n                                    if (length(currFcoord) > ${e.getUniform("outlineHalfWidth")}) {\n                                        toDiscard = true;\n                                    }\n                                } else if (dot(-currOpp, oppFcoord ) < 0.0) {\n                                    if (length(oppFcoord) > ${e.getUniform("outlineHalfWidth")}) {\n                                        toDiscard = true;\n                                    }\n                                }\n                                return toDiscard;\n                                `}\n                        `},ComputeOpacity:function(e,t){const s=e.variableHandler,i=e.userDefines;return`        \n                            ${s.float("op")} = ${e.vGetOpacity()};\n                            ${i.OUTLINES_SHOW_OCCLUDED?"\n                                if (occluded) {\n                                    return 0.3 * op;\n                                }\n                                ":""}\n                            return op;\n                        `}}}};class l extends t{constructor(){super(),this._activatePDSFXMigrated(),this._PDSFXData._uniqueID=this.getType(),this.enableClipPlanes=!0,this.depthTest=!1,this.force=!0,this.color=new e.Color(0),this.occludedColor=new e.Color(11184810),this.showHidden=!1,this.transparent=!0}getPredefinedMaterial(e,t,s){return this}setShowHiddenOutlines(e){this.showHidden!==!!e&&(this.showHidden=!!e,this.showHidden?this.defines.OUTLINES_SHOW_OCCLUDED=1:delete this.defines.OUTLINES_SHOW_OCCLUDED,this.depthTest=this.showHidden,this.needsUpdate=!0)}}l.prototype.__dimension=1;class h extends l{constructor(t,s){if(super(),this.setPDSFXGlobalShaderCode(o.VS_global,o.FS_global),this.setPDSFXOverridableFunctions(o.SimpleOutlinesShader.VS_overridables,o.SimpleOutlinesShader.FS_overridables),t){this.defines={NB_OUTLINE_MAPS:t.NB_OUTLINE_MAPS,MAX_OUTLINE_MAP_SIZE:t.MAX_OUTLINE_MAP_SIZE,LAST_OUTLINE_MAP_SIZE_X:t.LAST_OUTLINE_MAP_SIZE_X,LAST_OUTLINE_MAP_SIZE_Y:t.LAST_OUTLINE_MAP_SIZE_Y};var i={occludedColor:{type:"v3",value:new e.Vector3(this.occludedColor.r,this.occludedColor.g,this.occludedColor.b)},outlinePositionMaps:{type:"t2v",value:s,length:this.defines.NB_OUTLINE_MAPS},depthBuffer:{type:"t2",value:null},depthMapSize:{type:"v2",value:new e.Vector2(.01,.01)}};this.setPDSFXUniforms(i)}else this.defines={NB_OUTLINE_MAPS:0,MAX_OUTLINE_MAP_SIZE:0,LAST_OUTLINE_MAP_SIZE_X:0,LAST_OUTLINE_MAP_SIZE_Y:0};this.setPDSFXVaryings({cP:{type:"v4"}}),this._refreshPDSFXUniforms_private=function(t,s){this.updatePDSFXUniform("occludedColor",new e.Vector3(this.occludedColor.r,this.occludedColor.g,this.occludedColor.b)),t.requestRealDepthBuffer(),t.dBuffer&&(this.updatePDSFXUniform("depthBuffer",t.dBuffer),this.updatePDSFXUniform("depthMapSize",new e.Vector2(t.dBuffer.width,t.dBuffer.height)))}}getType(){return"Outline"}clone(){let e=new h;return super.clone(e),e}}class p extends l{constructor(t,s,i){if(super(),this.forceSide=!0,this.side=e.DoubleSide,this.setPDSFXGlobalShaderCode(o.VS_global,o.FS_global),this.setPDSFXOverridableFunctions(o.WideOutlinesShader.VS_overridables,o.WideOutlinesShader.FS_overridables),t){this.defines={NB_OUTLINE_MAPS:t.NB_OUTLINE_MAPS,MAX_OUTLINE_MAP_SIZE:t.MAX_OUTLINE_MAP_SIZE,LAST_OUTLINE_MAP_SIZE_X:t.LAST_OUTLINE_MAP_SIZE_X,LAST_OUTLINE_MAP_SIZE_Y:t.LAST_OUTLINE_MAP_SIZE_Y};var a={occludedColor:{type:"v3",value:new e.Vector3(this.occludedColor.r,this.occludedColor.g,this.occludedColor.b)},outlinePositionMaps:{type:"t2v",value:s,length:this.defines.NB_OUTLINE_MAPS},depthBuffer:{type:"t2",value:null},depthMapSize:{type:"v2",value:new e.Vector2(.01,.01)},outlineHalfWidth:{type:"f",value:i},pixelSize:{type:"v2",value:new e.Vector2}};this.setPDSFXUniforms(a)}else this.defines={NB_OUTLINE_MAPS:0,MAX_OUTLINE_MAP_SIZE:0,LAST_OUTLINE_MAP_SIZE_X:0,LAST_OUTLINE_MAP_SIZE_Y:0};this.setPDSFXVaryings({screenCurr:{type:"v2"},screenOpp:{type:"v2"},cP:{type:"v4"}}),this._refreshPDSFXUniforms_private=function(t,s){this.updatePDSFXUniform("occludedColor",new e.Vector3(this.occludedColor.r,this.occludedColor.g,this.occludedColor.b)),this.updatePDSFXUniform("pixelSize",new e.Vector2(2/t.domElement.width,2/t.domElement.height)),t.requestRealDepthBuffer(),t.dBuffer&&(this.updatePDSFXUniform("depthBuffer",t.dBuffer),this.updatePDSFXUniform("depthMapSize",new e.Vector2(t.dBuffer.width,t.dBuffer.height)))}}getType(){return"WideOutline"}clone(){let e=new p;return super.clone(e),e}}return{_OutlineMaterial:h,_WideOutlineMaterial:p}}),define("DS/Materials/SectionBuilderMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/MeshBasicMaterial"],function(e,t){"use strict";var s={};s.VS_global=["#define SECTION_BUILDER","vec4 getClipPlaneEquation(const in int index);","float getDist(vec4 pos) {","  vec4 clipPlaneEquation = getClipPlaneEquation(currentClipPlane);","  float dist = dot( pos.xyz, clipPlaneEquation.xyz ) + clipPlaneEquation.w;","  return dist;","}","vec4 getIntersection( vec4 M, vec4 N) {","  vec4 clipPlaneEquation = getClipPlaneEquation(currentClipPlane);","  vec3 direction = vec3(N.x - M.x, N.y - M.y, N.z - M.z);","  vec4 result;","  float t;","  float denominator = dot(direction, clipPlaneEquation.xyz);","  if(denominator == 0.0) {","    return M;","  } else {","    t = -(dot(M.xyz, clipPlaneEquation.xyz) + clipPlaneEquation.w) / denominator;","    result = vec4(t*direction+M.xyz, 1.0);","    return result;","  }","}","float far;","float near;","bool hide;","vec4 mvCurrInter;","vec4 mvOtherInter;","float linearizeNDC(in float iNonLinearNDC) {","\tfloat z01 = 0.5*iNonLinearNDC + 0.5;","\tfloat res = 2.0*near/(far + near - z01*(far - near));","\tres = res *2.0 - 1.0;","\treturn res;","}"].join("\n"),s.FS_global="#define SECTION_BUILDER";var i=["vec3 _position = vGetAttribPosition();","float i1 = _position.x;","float i2 = _position.y;","float i3 = _position.z;","float maxMapTotalSize = MAX_OUTLINE_MAP_SIZE*MAX_OUTLINE_MAP_SIZE;","int texId_1 = int(floor(i1/maxMapTotalSize));","int texId_2 = int(floor(i2/maxMapTotalSize));","int texId_3 = int(floor(i3/maxMapTotalSize));","float dx_1, dx_2, dx_3;","float dy_1, dy_2, dy_3;","float x_1, x_2, x_3;","float y_1, y_2, y_3;","float idInTexture_1 = i1 - float(texId_1)*maxMapTotalSize;","float idInTexture_2 = i2 - float(texId_2)*maxMapTotalSize;","float idInTexture_3 = i3 - float(texId_3)*maxMapTotalSize;","if (texId_1 == NB_OUTLINE_MAPS - 1) {","dx_1 = 1.0 / LAST_OUTLINE_MAP_SIZE_X;","dy_1 = 1.0 / LAST_OUTLINE_MAP_SIZE_Y;","y_1 = floor(idInTexture_1/LAST_OUTLINE_MAP_SIZE_X);","x_1 = idInTexture_1 - y_1*LAST_OUTLINE_MAP_SIZE_X;","} else {","dx_1 = 1.0 / MAX_OUTLINE_MAP_SIZE;","dy_1 = 1.0 / MAX_OUTLINE_MAP_SIZE;","y_1 = floor(idInTexture_1/MAX_OUTLINE_MAP_SIZE);","x_1 = idInTexture_1 - y_1*MAX_OUTLINE_MAP_SIZE;","}","if (texId_2 == NB_OUTLINE_MAPS - 1) {","dx_2 = 1.0 / LAST_OUTLINE_MAP_SIZE_X;","dy_2 = 1.0 / LAST_OUTLINE_MAP_SIZE_Y;","y_2 = floor(idInTexture_2/LAST_OUTLINE_MAP_SIZE_X);","x_2 = idInTexture_2 - y_2*LAST_OUTLINE_MAP_SIZE_X;","} else {","dx_2 = 1.0 / MAX_OUTLINE_MAP_SIZE;","dy_2 = 1.0 / MAX_OUTLINE_MAP_SIZE;","y_2 = floor(idInTexture_2/MAX_OUTLINE_MAP_SIZE);","x_2 = idInTexture_2 - y_2*MAX_OUTLINE_MAP_SIZE;","}","if (texId_3 == NB_OUTLINE_MAPS - 1) {","dx_3 = 1.0 / LAST_OUTLINE_MAP_SIZE_X;","dy_3 = 1.0 / LAST_OUTLINE_MAP_SIZE_Y;","y_3 = floor(idInTexture_3/LAST_OUTLINE_MAP_SIZE_X);","x_3 = idInTexture_3 - y_3*LAST_OUTLINE_MAP_SIZE_X;","} else {","dx_3 = 1.0 / MAX_OUTLINE_MAP_SIZE;","dy_3 = 1.0 / MAX_OUTLINE_MAP_SIZE;","y_3 = floor(idInTexture_3/MAX_OUTLINE_MAP_SIZE);","x_3 = idInTexture_3 - y_3*MAX_OUTLINE_MAP_SIZE;","}","vec3 P = texture2D( outlinePositionMaps[texId_1], vec2( dx_1 * ( x_1 + 0.5 ), dy_1 * ( y_1 + 0.5 ) ) ).xyz;","vec3 M = texture2D( outlinePositionMaps[texId_2], vec2( dx_2 * ( x_2 + 0.5 ), dy_2 * ( y_2 + 0.5 ) ) ).xyz;","vec3 N = texture2D( outlinePositionMaps[texId_3], vec2( dx_3 * ( x_3 + 0.5 ), dy_3 * ( y_3 + 0.5 ) ) ).xyz;","mat4 PM = vGetProjectionMatrix();","float m22 = PM[2][2];","float m32 = PM[3][2];","bool isPersp = PM[2][3] == -1.0;","if (isPersp) {","near = m32 / (m22 - 1.0);","far = ((m22 - 1.0)*near)/(m22 + 1.0);","} else {","near = (m32+1.0)/m22;","far = near - 2.0/m22;","}","vec4 mvP = computeModelViewPosition(vec4(P, 1.0));","vec4 mvM = computeModelViewPosition(vec4(M, 1.0));","vec4 mvN = computeModelViewPosition(vec4(N, 1.0));","mvCurrInter = mvP;","mvOtherInter = mvM;","hide = true;"].join("\n");s.SimpleSectionShader={VS_overridables:{ComputeCommonValues:["void ComputeCommonValues() {",i,"if (vGetAttribTexCoord0().x > 0.0 && getDist(mvP) > 0.0 && getDist(mvM) < 0.0) {","  mvCurrInter = getIntersection(mvP, mvM);","  hide = false;","}","if (vGetAttribTexCoord0().x < 0.0 && getDist(mvP) < 0.0 && getDist(mvN) > 0.0) {","  if(getDist(mvM) < 0.0) {","    mvCurrInter = getIntersection(mvM, mvN);","  } else {","    mvCurrInter = getIntersection(mvM, mvP);","  }","  hide = false;","}","}"].join("\n"),ProcessViewTangentSpace:["void ProcessViewTangentSpace(inout TangentSpace ioWorldViewTS) {","ioWorldViewTS.Position = mvCurrInter.xyz;","}"].join("\n"),ProcessClipSpacePosition:["void ProcessClipSpacePosition(inout vec4 ioPosition) {","if (hide) ioPosition.z = 10000000.0 * far;","}"].join("\n")},FS_overridables:{}},s.WideSectionShader={VS_overridables:{ComputeCommonValues:["void ComputeCommonValues() {",i,"if (vGetAttribTexCoord0().x > 0.0 && getDist(mvP) > 0.0 && getDist(mvM) < 0.0) {","  mvCurrInter = getIntersection(mvP, mvM);","  if(getDist(mvN) > 0.0) {","    mvOtherInter = getIntersection(mvM, mvN);","  } else {","    mvOtherInter = getIntersection(mvN, mvP);","  }","  hide = false;","}","if (vGetAttribTexCoord0().x < 0.0 && getDist(mvP) < 0.0 && getDist(mvN) > 0.0) {","  if(getDist(mvM) < 0.0) {","    mvCurrInter = getIntersection(mvM, mvN);","  } else {","    mvCurrInter = getIntersection(mvM, mvP);","  }","  mvOtherInter = getIntersection(mvN, mvP);","  hide = false;","}","}"].join("\n"),ProcessViewTangentSpace:["void ProcessViewTangentSpace(inout TangentSpace ioWorldViewTS) {","ioWorldViewTS.Position = mvCurrInter.xyz;","}"].join("\n"),ProcessClipSpacePosition:["void ProcessClipSpacePosition(inout vec4 ioPosition) {","mat4 PM = vGetProjectionMatrix();","vec4 mvpCurr = PM*vec4(mvCurrInter.xyz,1.0);","vec4 mvpOpp = PM*vec4(mvOtherInter.xyz,1.0);","screenCurr = (mvpCurr.xy / mvpCurr.w + 1.0) / pixelSize;","screenOpp = (mvpOpp.xy / mvpOpp.w + 1.0) / pixelSize;","vec3 ndcCurr = mvpCurr.xyz/mvpCurr.w;","vec3 ndcOpp = mvpOpp.xyz/mvpOpp.w;","float sideExtrusion = vGetAttribTexCoord0().y * vGetAttribTexCoord0().x;","float offset = sign(sideExtrusion) * sectionLineHalfWidth;","vec2 line = normalize(screenOpp - screenCurr);","vec2 lineNormal = vec2(-line.y, line.x);","vec2 ptAlongLine = screenCurr - sectionLineHalfWidth*line;","vec2 ndcPtAlongLine = ptAlongLine*pixelSize - 1.0;","float ndcD = length(ndcCurr.xy - ndcPtAlongLine);","float lengthCurrOpp = length(ndcCurr.xy - ndcOpp.xy);","float ndcZDelta = ndcD*abs(ndcCurr.z-ndcOpp.z)/lengthCurrOpp;","float ndcZDeltaLin = ndcD*abs(linearizeNDC(ndcCurr.z)-linearizeNDC(ndcOpp.z))/lengthCurrOpp;","vec2 px_pos;","if (ndcZDeltaLin > 0.7*ndcD) {","px_pos = screenCurr + offset*lineNormal;","ndcZDelta = 0.0;","} else {","px_pos = screenCurr + offset*lineNormal - sectionLineHalfWidth*line;","}","ndcZDelta *= sign(ndcCurr.z - ndcOpp.z);","float ndcFinalZ = mvpCurr.z/mvpCurr.w + ndcZDelta;","vec3 ndcPos = vec3((px_pos*pixelSize - 1.0), ndcFinalZ);","if (vGetAttribTexCoord0().x < 0.0) {","vec2 tmp = screenCurr;","screenCurr = screenOpp;","screenOpp = tmp;","}","vec4 clipSpacePos = vec4(ndcPos*mvpCurr.w, mvpCurr.w);","ioPosition = clipSpacePos;","if (hide) ioPosition.z = 10000000.0 * far;","}"].join("\n")},FS_overridables:{ComputeDiscard:["bool ComputeDiscard() { ","vec2 fCoord = vGetFragCoord().xy;","vec2 currOpp = screenOpp - screenCurr;","vec2 currFcoord = fCoord - screenCurr;","vec2 oppFcoord = fCoord - screenOpp;","bool toDiscard = false;","if (dot(currOpp, currFcoord ) < 0.0) {","if (length(currFcoord) > sectionLineHalfWidth) toDiscard = true;","} else if (dot(-currOpp, oppFcoord ) < 0.0) {","if (length(oppFcoord) > sectionLineHalfWidth) toDiscard = true;","}","return toDiscard;","}"].join("\n")}};class a extends t{constructor(){super(),this.activatePDSFX(),this.force=!0,this.enableClipPlanes=!0,this.side=e.DoubleSide,this.polygonOffset=!0,this.clipPlaneIndex=0}getPredefinedMaterial(e,t,s){return this}}a.prototype.__dimension=1,a.prototype.__isSectionLine=!0;class r extends a{constructor(e,t){if(super(),this.setPDSFXGlobalShaderCode(s.VS_global,s.FS_global),this.setPDSFXOverridableFunctions(s.SimpleSectionShader.VS_overridables,s.SimpleSectionShader.FS_overridables),e){this.defines={NB_OUTLINE_MAPS:e.NB_OUTLINE_MAPS,MAX_OUTLINE_MAP_SIZE:e.MAX_OUTLINE_MAP_SIZE,LAST_OUTLINE_MAP_SIZE_X:e.LAST_OUTLINE_MAP_SIZE_X,LAST_OUTLINE_MAP_SIZE_Y:e.LAST_OUTLINE_MAP_SIZE_Y};var i={outlinePositionMaps:{type:"t2v",value:t,length:this.defines.NB_OUTLINE_MAPS},currentClipPlane:{type:"i",value:0}};this.setPDSFXUniforms(i)}else this.defines={NB_OUTLINE_MAPS:0,MAX_OUTLINE_MAP_SIZE:0,LAST_OUTLINE_MAP_SIZE_X:0,LAST_OUTLINE_MAP_SIZE_Y:0};this.refreshPDSFXUniforms=function(){this.updatePDSFXUniform("currentClipPlane",this.clipPlaneIndex-1)}}getType(){return"Section"}clone(){var e=new r;return super.clone(e),e}}class n extends a{constructor(t,i,a){if(super(),this.forceSide=!0,this.side=e.DoubleSide,this.setPDSFXGlobalShaderCode(s.VS_global,s.FS_global),this.setPDSFXOverridableFunctions(s.WideSectionShader.VS_overridables,s.WideSectionShader.FS_overridables),t){this.defines={NB_OUTLINE_MAPS:t.NB_OUTLINE_MAPS,MAX_OUTLINE_MAP_SIZE:t.MAX_OUTLINE_MAP_SIZE,LAST_OUTLINE_MAP_SIZE_X:t.LAST_OUTLINE_MAP_SIZE_X,LAST_OUTLINE_MAP_SIZE_Y:t.LAST_OUTLINE_MAP_SIZE_Y};var r={outlinePositionMaps:{type:"t2v",value:i,length:this.defines.NB_OUTLINE_MAPS},currentClipPlane:{type:"i",value:0},sectionLineHalfWidth:{type:"f",value:a},pixelSize:{type:"v2",value:new e.Vector2}};this.setPDSFXUniforms(r)}else this.defines={NB_OUTLINE_MAPS:0,MAX_OUTLINE_MAP_SIZE:0,LAST_OUTLINE_MAP_SIZE_X:0,LAST_OUTLINE_MAP_SIZE_Y:0};this.setPDSFXVaryings({screenCurr:{type:"v2"},screenOpp:{type:"v2"}}),this._refreshPDSFXUniforms_private=function(t,s){this.updatePDSFXUniform("pixelSize",new e.Vector2(2/t.domElement.width,2/t.domElement.height)),this.updatePDSFXUniform("currentClipPlane",this.clipPlaneIndex-1)}}getType(){return"WideSection"}clone(){var e=new n;return super.clone(e),e}}return{_SectionMaterial:r,_WideSectionMaterial:n}}),define("DS/Materials/DSPBR19x",["DS/Mesh/ThreeJS_Base","DS/Materials/PhysicalMaterial"],function(e,t){"use strict";class s extends t{constructor(e){e=e||{};var s={};Object.assign(s,e),t._setTypeParams(s),s.dspbr19x=!0,super(s)}clone(e){return e||(e=new s),super.clone(e),e}}return s}),define("DS/Materials/SmallPlaneMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/DSPBR19x"],function(e,t){"use strict";const s="";return class extends t{constructor(){super({specularContrib:0,metalness:0,ior:1,transparency:0,opacity:1,color:new e.Color(16777215)}),this.useLighting=!0,this.transparent=!1,this.useBlending=!0,this.blending=e.GroundShadowBlending,this.depthWrite=!1,this.side=e.DoubleSide,this.force=!0,this.polygonOffset=!0,this.polygonOffsetFactor=2,this.polygonOffsetUnits=1,this.enableClipPlanes=!1,this.defines={GROUND_SHADOW:0,INVISIBLE_PLANE_MATERIAL:!0},this._activatePDSFXMigrated("PDSFXSmallPlaneMaterial"),this.setPDSFXUniforms({groundShadow:{type:"t2",value:null},smallPlaneSSAO:{type:"f",value:1}}),this.setPDSFXOverridableFunctions({},{ComputeDiscard:function(e,t){const s=e.variableHandler,i=(e.functionHandler,e.pdsfxDefines,e.userDefines,e=>s.vec3(e));return`\n                    ${i("I")} = ${i()}(0.0,0.0,1.0);\n                    if (!(${e.vGetProjectionMatrix()}[3][3] > 0.0)) {\n                        I = normalize(-${e.vGetViewPosition()});\n                    }\n                    return dot(I, ${e.vGetViewNormal()}) < 0.0;\n                    `},ProcessFinalColor:function(e,t){const i=e.variableHandler,a=(e.functionHandler,e.pdsfxDefines),r=e.userDefines,n=e=>i.float(e),o=e=>i.vec2(e),l=e=>i.vec3(e),h=i.dereference()+t[0];return`\n                        ${l("finalColor")} = clamp(${h}.rgb, ${l()}(0.0),  ${l()}(1.0));\n                        ${a.gammaOutput?"\n                            finalColor *= finalColor;\n                            ":s}\n                        ${o("uv")} = vGetTexCoord0().xy;\n                        ${r.GROUND_SHADOW?"\n                            finalColor *= texture2D(groundShadow, uv).x;\n                            ":s}\n                        ${o("toCenter")}  = 2.0 * (${o()}(0.5) - uv);\n                        ${n("distToCenter")}  = min(1.0, dot(toCenter, toCenter));\n                        ${n("alpha")}  = 1.0-max(finalColor.x,max(finalColor.y,finalColor.z));\n                        finalColor = mix(finalColor, ${l()}(1.0), distToCenter);\n                        ${a.gammaOutput?"\n                            finalColor = sqrt(finalColor);\n                            ":s}\n                        finalColor = clamp(finalColor, ${l()}(0.0), ${l()}(1.0));\n                        ${h}.r = finalColor.r;\n                        ${h}.g = finalColor.g;\n                        ${h}.b = finalColor.b;\n                        ${h}.a = alpha;\n                    `}})}getType(){return"Small Plane"}getPredefinedMaterial(e,t,s){return this}_setMaterialShaderOptions(e,t,s,i,a,r){e.useOIT=!1,e.inlinedPostProActivated=!1,e.invisiblePlaneMaterial=!0,e.maxDirIBLLights=0,e.maxDirPhongLights=0,e.maxSphereLights=0,e.maxTubeLights=0,e.maxDiskLights=0,e.maxRectangleLights=0,e.maxIESLights=0,super._setMaterialShaderOptions(e,t,s,i,a,r)}areTexturesLoaded(){return!0}updateDeferredMaterials(t){super.updateDeferredMaterials(t),this._deferredMaterials[e.MaterialToUse.transparentShadowMaterial]=null,this._deferredMaterials[e.MaterialToUse.pickingMaterial]=null,this._deferredMaterials[e.MaterialToUse.depthMaterial]=null,this._deferredMaterials[e.MaterialToUse.normalMaterial]=null,this._deferredMaterials[e.MaterialToUse.highlightMaterial]=null,this._deferredMaterials[e.MaterialToUse.decalNormalStencilDepth]=null,this._deferredMaterials[e.MaterialToUse.oitAccumMaterial]=null,this._deferredMaterials[e.MaterialToUse.oitRevealMaterial]=null}}}),define("DS/Materials/CATGraphicalMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/DSPBR19x"],function(e,t){"use strict";var s={User:0,ObjectLinearPlanar:1,EyeLinearPlanar:2,Environment:3},i={VisuBasic_diffuseTexCoord:{type:"v4"}},a=[null,["vec4 VisuBasic_ComputeDiffuseTexCoord() {","vec4 res = vec4(0.0);","vec4 pos = vec4(vGetAttribPosition(), 1.0);","res.s = dot(VisuBasic_ProjectionPlaneS, pos);","res.t = dot(VisuBasic_ProjectionPlaneT, pos);","return res;","}"].join("\n"),["mat4 VisuBasic_Transpose(in mat4 m) {","mat4 mT;","mT[0] = vec4(m[0][0], m[1][0], m[2][0], m[3][0]);","mT[1] = vec4(m[0][1], m[1][1], m[2][1], m[3][1]);","mT[2] = vec4(m[0][2], m[1][2], m[2][2], m[3][2]);","mT[3] = vec4(m[0][3], m[1][3], m[2][3], m[3][3]);","return mT;","}","vec4 VisuBasic_ComputeDiffuseTexCoord() {","vec4 res = vec4(0.0);","vec4 pos = vec4(vGetAttribPosition(), 1.0);","pos = computeModelViewPosition(pos);","mat4 modelViewInv = VisuBasic_Transpose(vGetViewInverseTransposeMatrix() * vGetWorldInverseTransposeMatrix()); ","res.s = dot(modelViewInv*VisuBasic_ProjectionPlaneS, pos);","res.t = dot(modelViewInv*VisuBasic_ProjectionPlaneT, pos);","return res;","}"].join("\n"),["vec4 VisuBasic_ComputeDiffuseTexCoord() {","vec4 res = vec4(0.0);","vec4 pos = vec4(vGetAttribPosition(), 1.0);","pos = computeModelViewPosition(pos);","res.xyz = normalize(pos.xyz);","return res;","}"].join("\n")],r=["VisuBasic_diffuseTexCoord = VisuBasic_ComputeDiffuseTexCoord();"].join("\n"),n=["#define _VISUBASIC_FORCE_PHYSICAL_DIFFUSE_UV","vec2 VisuBasic_diffuseTexUvToUse;","vec2 VisuBasic_ComputeSphereMapCoord(in vec3 r)","{","r.z+=1.0;","float m = 0.5/sqrt(dot(r,r));","return vec2(r.x*m+0.5, r.y*m+0.5);","}"].join("\n"),o=["VisuBasic_diffuseTexUvToUse = VisuBasic_diffuseTexCoord.xy;"].join("\n"),l=[null,o,o,["vec3 VisuBasic_orientedViewNormal = vGetViewNormal();","vec3 VisuBasic_dir = reflect(VisuBasic_diffuseTexCoord.xyz, VisuBasic_orientedViewNormal);","VisuBasic_diffuseTexUvToUse = VisuBasic_ComputeSphereMapCoord(VisuBasic_dir).st;"].join("\n")];const h=e.TextureBlendOperations;class p extends t{constructor(t){t=t||{};var o={};Object.assign(o,t),o.textureMapping=t.textureMapping||"User",o.sheen=0,o.flakesCoverage=0,o.specularContrib=1,o.clearCoat=0,o.thinWalled=!0,super(o),this.reflectivity=void 0!==o.reflectivity?o.reflectivity:1,this.reflectivityEnvMap=void 0!==o.reflectivityEnvMap?o.reflectivityEnvMap:null,this.combine=void 0!==o.combine?o.combine:e.MultiplyOperation,this.textureBlending=void 0!==o.textureBlending?o.textureBlending:h.KEEP_DEFAULT;var p=s[o.textureMapping],d=a[p];if(this._internalPDSFXData=null,null!==d){var u={VisuBasic_ProjectionPlaneS:{type:"v4",value:new e.Vector4(1,0,0,0)},VisuBasic_ProjectionPlaneT:{type:"v4",value:new e.Vector4(0,1,0,0)}};if(void 0!==o.projectionPlaneS){var c=o.projectionPlaneS;u.VisuBasic_ProjectionPlaneS.value.x=c[0],u.VisuBasic_ProjectionPlaneS.value.y=c[1],u.VisuBasic_ProjectionPlaneS.value.z=c[2],u.VisuBasic_ProjectionPlaneS.value.w=c[3]}if(void 0!==o.projectionPlaneT){c=o.projectionPlaneT;u.VisuBasic_ProjectionPlaneT.value.x=c[0],u.VisuBasic_ProjectionPlaneT.value.y=c[1],u.VisuBasic_ProjectionPlaneT.value.z=c[2],u.VisuBasic_ProjectionPlaneT.value.w=c[3]}this._internalPDSFXData={uniforms:u,varyings:i,VS_global:d,FS_global:n,ComputeVaryingValuesVSBody:r,ComputeCommonValuesFSBody:l[p]},s.Environment,this.activatePDSFX(),this.setPDSFXUniforms(null),this.setPDSFXVaryings(null),this.setPDSFXGlobalShaderCode(null,null),this.setPDSFXOverridableFunctions(null,null)}}clone(){var e=new p;return super.clone(e),e.reflectivity=this.reflectivity,e.reflectivityEnvMap=this.reflectivityEnvMap,e.combine=this.combine,e.textureBlending=this.textureBlending,e._internalPDSFXData=this._internalPDSFXData,e}setPDSFXUniforms(e){this._internalPDSFXData&&(e||(e={}),Object.assign(e,this._internalPDSFXData.uniforms)),super.setPDSFXUniforms(e)}setPDSFXVaryings(e){this._internalPDSFXData&&(e||(e={}),Object.assign(e,this._internalPDSFXData.varyings)),super.setPDSFXVaryings(e)}setPDSFXGlobalShaderCode(e,t){this._internalPDSFXData&&(e||(e=""),t||(t=""),t+="\n"+this._internalPDSFXData.FS_global,e+="\n"+this._internalPDSFXData.VS_global),super.setPDSFXGlobalShaderCode(e,t)}setPDSFXOverridableFunctions(e,t){if(this._internalPDSFXData){var s;if(e||(e={}),t||(t={}),e.ComputeVaryingValues){if(-1!==(s=e.ComputeVaryingValues.lastIndexOf("}"))){var i=e.ComputeVaryingValues;e.ComputeVaryingValues=i.substring(0,s)+"\n"+this._internalPDSFXData.ComputeVaryingValuesVSBody+"\n"+i.substring(s)}}else e.ComputeVaryingValues=["void ComputeVaryingValues() {",this._internalPDSFXData.ComputeVaryingValuesVSBody,"}"].join("\n");if(t.ComputeCommonValues){if(-1!==(s=t.ComputeCommonValues.lastIndexOf("}"))){i=t.ComputeCommonValues;t.ComputeCommonValues=i.substring(0,s)+"\n"+this._internalPDSFXData.ComputeCommonValuesFSBody+"\n"+i.substring(s)}}else t.ComputeCommonValues=["void ComputeCommonValues() {",this._internalPDSFXData.ComputeCommonValuesFSBody,"}"].join("\n")}super.setPDSFXOverridableFunctions(e,t)}getSubType(){return"CATGraphicalMaterial"}getType(){return"CATGraphicalMaterial"}setPhysicalProperties(){}setCore(){}setAnisotropy(){}setDisplacement(){}setIridescence(){}setThickness(){}setVolume(){}setDSPBRFlakes(){}setSpecGlossFlakes(){}setClearCoat(){}setSheen(){}_canUseLights(){return(!this.map||this.textureBlending!==h.REPLACE)&&super._canUseLights()}_setMaterialShaderOptions(e,t,s,i,a,r){super._setMaterialShaderOptions(e,t,s,i,a,r),this.isPDSFX()&&null!==this._internalPDSFXData&&(e.visuBasicForceDiffuseUV=!0)}_transparencyOnGPU(e){return super._transparencyOnGPU(e)||this.map&&(this.textureBlending===h.BLEND||this.textureBlending===h.MODULATE||this.textureBlending===h.REPLACE&&1021===this.map.format)}_getTextures(e){var t=super._getTextures(e);return e||(t=t.concat([this.reflectivityEnvMap])),t}}return p}),define("DS/Materials/GASPBR",["DS/Mesh/ThreeJS_Base","DS/Materials/DSPBR19x"],function(e,t){"use strict";class s extends t{constructor(e,t){if(!t)throw"Missing low quality material";super(e),this._phongFallbackMaterial=t,t._isFromGAS=!0,this._isFromGAS=!0,t._isGASFallback=!0}clone(){var e=new s(null,this._phongFallbackMaterial);return super.clone(e),e}getSubType(){return"GASPBR"}getType(){return"GASPBR"}}return s}),define("DS/Materials/MeshPhongMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/DeferrableMaterial","DS/Materials/PDSFXData"],function(e,t,s){"use strict";const i=e.TextureBlendOperations;var a=new e.Color;class r extends t{constructor(t){super(),this.color=new e.Color(16777215),this.ambient=new e.Color(16777215),this.emissive=new e.Color(0),this.specular=new e.Color(1118481),this.shininess=30,this.shininessInSpecMap=!1,this.metal=!1,this.wrapAround=!1,this.wrapRGB=new e.Vector3(1,1,1),this._isGASFallback=!1,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new e.Vector2(1,1),this._firstDirOnly=!1,this.specularMap=null,this.envMap=null,this.combine=e.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.refractionRatioMap=null,this.shading=e.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.textureBlending=i.KEEP_DEFAULT,this.lights=!0,this.numSupportedMorphTargets=0,this.numSupportedMorphNormals=0,this._usePhongLighting=!0,this.setValues(t)}_transparencyOnGPU(e){return super._transparencyOnGPU(e)||this.map&&(this.textureBlending===i.KEEP_DEFAULT||this.textureBlending===i.BLEND||this.textureBlending===i.MODULATE)}_getTextures(e){var t=super._getTextures(e);return t=t.concat([this.map,this.specularMap,this.bumpMap,this.normalMap,this.refractionRatioMap])}isPropertyTextured(e){switch(e){case"refractionRatio":return!!this.refractionRatioMap}return super.isPropertyTextured(e)}_dump(){var e=super._dump();return e.color=this.color.toArray(),this.map&&(e.color="textured"),e.specular=this.specular.toArray(),this.specularMap&&(e.specular="textured"),e.shininess=this.shininess,e}areTexturesLoaded(){return!!super.areTexturesLoaded()&&!(this.envMap&&!this.envMap._canBeUsed())}clone(){var e=new r;return super.clone(e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.shininessInSpecMap=this.shininessInSpecMap,e.metal=this.metal,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.refractionRatioMap=this.refractionRatioMap,e.shading=this.shading,e._firstDirOnly=this._firstDirOnly,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e.textureBlending=this.textureBlending,e.numSupportedMorphTargets=this.numSupportedMorphTargets,e.numSupportedMorphNormals=this.numSupportedMorphNormals,e._isGASFallback=this._isGASFallback,e}getType(){return this._isFromGAS?"GASPhong":"Phong"}activatePDSFX(e){e=e||{},this._PDSFXData=new s,this._PDSFXData.PDSFX=!0,this._setDefaultPDSFXOverridableFunctions()}_defaultPDSFXOverridableFunctions(){var t=super._defaultPDSFXOverridableFunctions();return Object.assign(t.fragment,{ComputeEmissive:e._ShaderChunk.PDSFXComputeEmissive_FS,ComputeSpecularReflectance:e._ShaderChunk.PDSFXComputeSpecularReflectance_FS}),t}_setMaterialShaderOptions(e,t,s,i,a,r){super._setMaterialShaderOptions(e,t,s,i,a,r),e.phongFirstDir=this._firstDirOnly,e.phong=!0,t&&Object.assign(e,{refractionRatioMap:this._isTextureAvailable("refractionRatioMap")})}loadUniforms(e,t,s,i,r,n){var o;s.ambient&&(o=this.ambient,this._isGASFallback&&(o=this.color,i&&i.getColor()&&(o=a.set(i.getColor()))),e.gammaInput&&(o=a.copyToLinear(o,e.simpleGamma)),t.uniform3f(s.ambient,o.r,o.g,o.b)),s.emissive&&(o=e.gammaInput?a.copyToLinear(this.emissive,e.simpleGamma):this.emissive,t.uniform3f(s.emissive,o.r,o.g,o.b)),s.specular&&(o=e.gammaInput?a.copyToLinear(this.specular,e.simpleGamma):this.specular,t.uniform3f(s.specular,o.r,o.g,o.b)),s.shininess&&t.uniform1f(s.shininess,Math.max(this.shininess,1e-6)),s.shininessInSpecMap&&t.uniform1i(s.shininessInSpecMap,this.shininessInSpecMap),s.wrapRGB&&this.wrapAround&&t.uniform3f(s.wrapRGB,this.wrapRGB.x,this.wrapRGB.y,this.wrapRGB.z),e.loadUniformsCommon(t,this,s,i,r,n),e.loadUniformsBump(t,this,s),e.loadUniformsNormalMap(t,this,s)}}return r.prototype._shaderID="phong",r.prototype._autoForceSide=!0,r}),define("DS/Materials/PlaneMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/MeshPhongMaterial","DS/ShaderBuilders/ShaderUtils/FunctionUtils"],function(e,t,s){"use strict";let i=function(e){const t=e.variableHandler,s=(e.functionHandler,e.pdsfxDefines,e.userDefines),i=e=>t.float(e),a=e=>t.floatC(e),r=e=>t.vec4(e),n=!!s.PDSFX_PLANE_MAP;return!!s.PDSFX_PLANE_V2?`\n            ${i("stepFactor")};\n            ${r("borderColor")};\n            ${i("fresnelFactor")};\n            ${r("gridCol")};\n            ${i("planeAlpha")};\n\n            ${a("alphaSlope")}  = 0.66666666667;\n            ${a("alphaSlope2")}  = 0.44444444444;\n            ${a("edgeSize")}  = 0.01;\n            ${a("stepSize")}  = 0.001;\n            ${a("small2GridWidth")}  = 0.0005;\n            ${a("smallGridWidth")}  = 0.0005;\n            ${a("bigGridWidth")}  = 0.0005;\n\n            ${n?`\n                ${r("planeMapColor")};\n                `:""}\n        `:`\n                ${i("fresnelFactor")};\n                ${(e=>t.bool(e))("discardPlane")};       \n            `},a=function(e,t){const s=e.variableHandler,i=e.functionHandler,a=(e.pdsfxDefines,e.userDefines),r=t=>e.getTextureUniform(t),n=t=>e.getUniform(t),o=e=>s.float(e),l=e=>s.vec2(e),h=e=>s.vec3(e),p=e=>s.vec4(e),d=!!a.PDSFX_PLANE_MAP,u=!!a.PDSFX_PLANE_V2;let c=`           \n            ${h("I")} = ${h()}(0.0,0.0,1.0);\n            if (!(${e.vGetProjectionMatrix()}[3][3] > 0.0)) {\n                I = normalize(-${e.vGetViewPosition()});\n            }\n            fresnelFactor = dot(I, ${e.vGetViewNormal()});\n        `;return u?`\n            ${c}\n\n            ${l("planeUV")}  = vGetTexCoord0().xy * 2.0 - 1.0;\n            stepFactor = length(planeUV);\n            ${o("borderMask")}  = ${n("planeBorder")} * smoothstep(1.0 - 2.0 * edgeSize, 1.0 - 2.0 * edgeSize + stepSize, stepFactor) * smoothstep(1.0 - edgeSize + stepSize, 1.0 - edgeSize, stepFactor);\n            borderColor = ${p()}(${n("border")}, borderMask);\n\n            ${o("gridCf")} = ${n("gridCoeff")};\n            ${o("a2")}  = max(1.0 - alphaSlope2 * (1.0 + gridCf) * (1.0 + gridCf), 0.0);\n            ${o("a1")}  = 1.0 - alphaSlope2 * gridCf * gridCf;\n            ${o("a0")}  = 1.0 - alphaSlope2 * (1.0 - gridCf) * (1.0 - gridCf);\n            ${o("a00")}  = max(1.0 - alphaSlope2 * (2.0 - gridCf) * (2.0 - gridCf), 0.0);\n            ${l("div")}  = 0.5 * ${n("planeSize")} * planeUV + ${n("gridOffset")};\n            ${l("big2Div")}  = (1.0 / (${n("nbSteps")} * ${n("nbSteps")})) * div / ${n("gridUnit")};\n            ${l("bigDiv")}  = (1.0 / ${n("nbSteps")}) * div / ${n("gridUnit")};\n            ${l("smallDiv")}  = div / ${n("gridUnit")};\n            ${l("small2Div")}  = ${n("nbSteps")} * div / ${n("gridUnit")};\n\n            ${o("gridAlpha")}  = ${i.sample2DTexture(r("gridTexture"),"small2Div")}.a;\n            gridAlpha *= a2;\n            gridAlpha += a1 * ${i.sample2DTexture(r("gridTexture2"),"smallDiv")}.a;\n            gridAlpha += a0 * ${i.sample2DTexture(r("gridTexture3"),"bigDiv")}.a;\n            gridAlpha += a00 * ${i.sample2DTexture(r("gridTexture4"),"big2Div")}.a;\n            gridAlpha = min(1.0, gridAlpha);\n\n            planeAlpha = 1.0001 - smoothstep(${n("planeFalloff")}, 1.0, stepFactor);\n            gridAlpha *= 1.0001 - smoothstep(${n("gridFalloff")}, 1.0, stepFactor);\n\n            planeAlpha *= ${n("planeOpacity")} * step(0.0, fresnelFactor) * ${n("displayPlane")};\n            gridAlpha *= step(-${n("gridFromBelow")}, fresnelFactor) * ${n("displayGrid")};\n\n            gridCol = ${p()}(${n("gridColor")} * ${n("gridColor")}, gridAlpha);\n            ${d?`\n                ${p("planeMapColor")}  = ${i.sample2DTexture(r("planeMap"),`${e.vGetTexCoord0()}.xy * ${n("uvScale")}`)};\n                `:""}\n        `:`\n                ${c}\n\n                discardPlane = fresnelFactor < 0.0;\n                if (${n("attenuation")} == 0) {\n                    fresnelFactor = 1.0;\n                }\n            `},r=function(e,t){const i=e.variableHandler,a=(e.functionHandler,e.pdsfxDefines),r=e.userDefines,n=t=>e.getUniform(t),o=e=>i.float(e),l=e=>i.vec3(e),h=e=>i.vec4(e),p=!!r.PDSFX_PLANE_MAP,d=!!r.PDSFX_PLANE_V2,u=i.dereference()+t[0];let c=`         \n            ${a.gammaOutput?`\n                ${u}.r *= ${u}.r;\n                ${u}.g *= ${u}.g;\n                ${u}.b *= ${u}.b;\n                `:""}\n        `;return`\n            ${c=d?`\n                ${c}\n                ${l("cCenter")}  = ${u}.xyz * (1.0 - ${n("onlyDiffuse")}) + ${n("onlyDiffuse")} * ${e.vGetAlbedo()};\n                ${p?`\n                    ${a.gammaInput?`\n                        ${l("convertedColor")} = ${((e,t,i)=>s.FunctionHandler.callFunction(e,t,i))("convertToLinear","v3",[prmV3("planeMapColor.xyz")])};\n                        planeMapColor.x = convertedColor.x;\n                        planeMapColor.y = convertedColor.y;\n                        planeMapColor.z = convertedColor.z;\n                        `:""}\n                    cCenter = mix(cCenter, planeMapColor.xyz, planeMapColor.a);\n                    `:""}\n                ${h("planeCol")}  = ${h()}(mix(mix(cCenter, ${n("border")}, ${n("planeBorder")}), cCenter, ${n("planeAlpha")}), mix(${n("planeAlpha")}, 1.0, ${n("planeBorder")}));\n                ${h("gridOverPlaneColor")}  = ${h()}((gridCol.xyz * gridCol.a + planeCol.xyz * planeCol.a * (1.0 - gridCol.a)) / (0.0001 + gridCol.a + planeCol.a * (1.0 - gridCol.a)), gridCol.a + planeCol.a * (1.0 - gridCol.a));\n                ${u} = mix(gridOverPlaneColor, ${n("borderColor")}, step(1.0 - 2.0 * edgeSize, stepFactor));\n            `:`\n                ${c}\n                ${(e=>i.vec2(e))("dUV")}  = 2.0 * (${e.vGetTexCoord0()}.xy * 2.0 - 1.0);\n                ${o("dist")}  = dot(dUV, dUV);\n                ${o("dist2")}  = clamp(dist * dist, 0.0, 1.0);\n                dist = clamp(dist, 0.0, 1.0);\n                ${u} = ${h()}(mix(${u}.rgb, mix(${u}.rgb, ${n("border")}.rgb, ${n("borderAlpha")}), dist), fresnelFactor*(1.0 - dist2));\n            `}\n            ${a.gammaOutput?`\n                ${u}.r = sqrt(${u}.r);\n                ${u}.g = sqrt(${u}.g);\n                ${u}.b = sqrt(${u}.b);\n                `:""}\n        `},n=function(e,t){return"\n            return discardPlane;\n        "};return class extends t{constructor(){super({ambient:328965,specular:1118481}),this.lights=!0,this._usePhongLighting=!0,this.useBlending=!0,this.depthTest=!1,this.depthWrite=!1,this.side=e.DoubleSide,this.force=!0,this.enableClipPlanes=!1,this._activatePDSFXMigrated("PDSFXPlaneMaterial");let t={border:{type:"c",value:new e.Color(516)},borderAlpha:{type:"f",value:1},attenuation:{type:"i",value:0,stage:e.FragmentStage},displayGrid:{type:"f",value:1},displayPlane:{type:"f",value:1},gridFromBelow:{type:"f",value:1},planeMap:{type:"t2",value:null},gridTexture:{type:"t2",value:null},gridTexture2:{type:"t2",value:null},gridTexture3:{type:"t2",value:null},gridTexture4:{type:"t2",value:null},nbSteps:{type:"f",value:5},gridUnit:{type:"f",value:1},gridOffset:{type:"v2",value:new e.Vector2},gridCoeff:{type:"f",value:0},gridColor:{type:"c",value:new e.Color(16777215)},planeSize:{type:"f",value:100},planeBorder:{type:"f",value:1},planeFalloff:{type:"f",value:0},onlyDiffuse:{type:"f",value:0},gridFalloff:{type:"f",value:0},uvScale:{type:"f",value:1},planeOpacity:{type:"f",value:1}};this._v2Plane=!0,this.setPDSFXUniforms(t),this.setPlaneV2(!1)}getType(){return"Plane"}setPlaneV2(e){if(this._v2Plane===e)return;this._v2Plane=e,this.setPDSFXGlobalShaderCode(null,i);let t={ComputeCommonValues:a,ProcessFinalColor:r};this.defines=this.defines||{},this.defines.PDSFX_PLANE_MAP=this.getPDSFXUniform("planeMap").value?1:0,this.defines.PDSFX_PLANE_V2=!!e,t.ComputeDiscard=e?null:n,this.setPDSFXOverridableFunctions(null,t),this.needsUpdate=!0}setPlaneTexture(e){(this.getPDSFXUniform("planeMap").value?!e:e)&&(this.defines=this.defines||{},this.updatePDSFXUniform("planeMap",e),e&&this._v2Plane?this.defines.PDSFX_PLANE_MAP=1:this.defines.PDSFX_PLANE_MAP=0,this.needsUpdate=!0)}getPredefinedMaterial(e,t,s){return this}_setMaterialShaderOptions(e,t,s,i,a,r){e.useOIT=!1,super._setMaterialShaderOptions(e,t,s,i,a,r)}updateDeferredMaterials(t){super.updateDeferredMaterials(t),this._deferredMaterials[e.MaterialToUse.transparentShadowMaterial]=null,this._deferredMaterials[e.MaterialToUse.pickingMaterial]=null,this._deferredMaterials[e.MaterialToUse.depthMaterial]=null,this._deferredMaterials[e.MaterialToUse.normalMaterial]=null,this._deferredMaterials[e.MaterialToUse.highlightMaterial]=null,this._deferredMaterials[e.MaterialToUse.decalNormalStencilDepth]=null,this._deferredMaterials[e.MaterialToUse.oitAccumMaterial]=null,this._deferredMaterials[e.MaterialToUse.oitRevealMaterial]=null}}}),define("DS/Materials/OldInfraMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/Material","DS/Materials/DeferredCaches"],function(e,t,s){"use strict";class i extends t{constructor(){super()}_setMaterialShaderOptions(e,t,s,i,a,r){super._setMaterialShaderOptions(e,t,s,i,a,r)}clone(e){return void 0===e&&(e=new i),super.clone(e),e}}return i}),define("DS/Materials/LineDSMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/DeferrableMaterial","DS/Materials/PDSFXData","DS/Materials/DeferredCaches"],function(e,t,s,i){"use strict";class a extends t{constructor(t){super(),this.color=new e.Color(16777215),this.scale=6.66666,this.dashSize=0,this.gapSize=0,this.dashPattern=new Float32Array(2),this._dashPatternInternal=null,this.dashType="None",this.patternOffset=0,this.linecap="square",this.linejoin="miter",this.lineWidth=1,this.pixelSize=new e.Vector2(.001,.001),this.side=e.Constants.DoubleSide,this.setValues(t),this._invertedPattern=t&&!!t.invertedPattern,"None"!==this.dashType&&(this.dashSize=this.gapSize=-1,this._setDashPatternType()),this.dashSize>0&&this.gapSize>0&&(console.error("DEPRECATED: Usage of dashSize and gapSize is deprecated, use dashPattern instead."),this.dashPattern[0]=this.dashSize,this.dashPattern[1]=this.gapSize,this.dashSize=-1,this.gapSize=-1),this._updateDashPattern(),this.isDashedLine&&"None"===this.dashType&&(this.dashType="Custom")}_updateDashPattern(){for(var e=this.isDashedLine,t=this.dashPattern,s=1;s<t.length;s++)t[s]+=t[s-1];this.isDashedLine=this._invertedPattern?t[0]>0:t[1]>0,e!==this.isDashedLine&&(this.needsUpdate=!0,this._invalidateDisplayRangeLists(),this.updateDeferredMaterials())}clone(e){return void 0===e&&(e=new a),super.clone(e),e.color.copy(this.color),e.scale=this.scale,e.dashPattern=new Float32Array(this.dashPattern),e.dashType=this.dashType,e.patternOffset=this.patternOffset,e.lineWidth=this.lineWidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.pixelSize=this.pixelSize,e.side=this.side,e._invertedPattern=this._invertedPattern,e}_dump(){var e=super._dump();return e.color=this.color.toArray(),e.dashPattern=Array.from(this.dashPattern),e.lineWidth=this.lineWidth,e}_canUseLights(){return!1}_setMaterialShaderOptions(e,t,s,i,a,r){super._setMaterialShaderOptions(e,t,s,i,a,r);var n={};r||Object.assign(n,{dashedLine:this.isDashedLine,patternSize:this.isDashedLine&&this.dashPattern?this.dashPattern.length:0,invertedPattern:this._invertedPattern}),Object.assign(n,{wideLine:this.isWideLine||this.is2DLine,linejoin:this.linejoin,linecap:this.linecap}),Object.assign(e,n)}setPatternOffset(e){this.patternOffset=e}setScale(e){this.scale=e}setDashPatternArray(e){e&&0!==e.length||(e=[0,0]),e.length<=1&&(e=[e[0],0]),this.dashPattern=new Float32Array(e),this.dashType="Custom",this._updateDashPattern()}_setDashPatternType(){this._invertedPattern=!1;var e=null;switch(this.dashType){case 1:this.dashType="Solid";case"Solid":(e=new Float32Array(2))[0]=-1,e[1]=-1;break;case 2:this.dashType="Dotted";case"Dotted":(e=new Float32Array(2))[0]=2,e[1]=2;break;case 3:this.dashType="Dashed";case"Dashed":(e=new Float32Array(2))[0]=3,e[1]=1;break;case 4:this.dashType="Dot-Dashed";case"Dot-Dashed":(e=new Float32Array(4))[0]=3,e[1]=2,e[2]=1,e[3]=2;break;case 5:this.dashType="Phantom";case"Phantom":(e=new Float32Array(6))[0]=6,e[1]=2,e[2]=2,e[3]=2,e[4]=2,e[5]=2;break;case 6:this.dashType="Small-Dotted";case"Small-Dotted":(e=new Float32Array(2))[0]=1,e[1]=1,this._invertedPattern=!0;break;case 7:this.dashType="JIS Axis";case"JIS Axis":(e=new Float32Array(4))[0]=2,e[1]=1,e[2]=12,e[3]=1;break;default:this.dashType="None",(e=new Float32Array(2))[0]=-1,e[1]=-1}this.dashPattern=e}setDashPatternType(e){this.dashType=e,this._setDashPatternType(),this._updateDashPattern()}setInvertedPattern(e){var t=this._invertedPattern;this._invertedPattern=e,this._updateDashPattern(),this._invertedPattern!==t&&(this.needsUpdate=!0,this._invalidateDisplayRangeLists(),this.updateDeferredMaterials())}activatePDSFX(e){e=e||{},this._PDSFXData=new s,this._PDSFXData.PDSFX=!0,this._setDefaultPDSFXOverridableFunctions()}loadUniforms(e,t,s,i,a,r){e.loadGASUniforms(t,this,s,i,null),s.pixelSize&&t.uniform2f(s.pixelSize,this.pixelSize.x,this.pixelSize.y),this.isDashedLine&&(s.dashPattern&&t.uniform4fv(s.dashPattern,this._dashPatternInternal),s.totalSize&&t.uniform1f(s.totalSize,this._dashPatternInternal[this.dashPattern.length-1]),s.patternOffset&&t.uniform1f(s.patternOffset,this.patternOffset))}getPredefinedMaterial(t,s,a){var r=this.getBaseId();switch(r+="Line",r+="S"+this.side,r+="CP"+this.enableClipPlanes,r+="Type"+s,s){case e.DefaultAppearanceMode.__QA_AUTOMATION__:if(r+="Col"+this.color.getHex(),r="id"+(r+="Op"+this._opacity).hashCode(),!i.PredefinedMaterials.has(r)){var n=new e.LineBasicMaterial({side:this.side,enableClipPlanes:this.enableClipPlanes,color:this.color,opacity:this._opacity});n._activatePDSFXMigrated(),n._PDSFXData._uniqueID="LineQAAutomationPDSFX";n.setPDSFXOverridableFunctions({},{ProcessFinalColor:function(e,t){const s=e.variableHandler,i=e.pdsfxDefines,a=s.dereference()+t[0];return`\n                                    ${a} = ${(e=>s.vec4(e))()}(${e.vGetAlbedo()}, ${e.vGetOpacity()});\n                                    ${i.gammaOutput?`\n                                        ${a}.r = sqrt(${a}.r);\n                                        ${a}.g = sqrt(${a}.g);\n                                        ${a}.b = sqrt(${a}.b);\n                                        `:""}\n                                `}});var o=new i.DeferredMaterial(n);i.PredefinedMaterials.set(r,o)}break;default:return this}return i.PredefinedMaterials.get(r).get(this)}getZOnlyMaterial(){return this}_defaultPDSFXOverridableFunctions(){var t=super._defaultPDSFXOverridableFunctions();return Object.assign(t.vertex,{ComputeObjectFollowingPosition:e._ShaderChunk.PDSFXComputeObjectFollowingPosition_VS,ComputeObjectPreviousPosition:e._ShaderChunk.PDSFXComputeObjectPreviousPosition_VS,ProcessLineDistance:e._ShaderChunk.PDSFXProcessLineDistance_VS,ComputeHalfWidth:e._ShaderChunk.PDSFXComputeHalfWidth_VS}),Object.assign(t.fragment,{ComputeHalfWidth:e._ShaderChunk.PDSFXComputeHalfWidth_FS,ProcessLinePattern:e._ShaderChunk.PDSFXProcessLinePattern_FS}),t}_getBodyEdgeMaterial(){return this}updateDeferredMaterials(t){super.updateDeferredMaterials(t),this._deferredMaterials[e.MaterialToUse.shadowMapDepthMaterial]=null,this._deferredMaterials[e.MaterialToUse.normalDepthIoRRoughnessMaterial]=null,this._deferredMaterials[e.MaterialToUse.normalDepthMaterial]=null,this._deferredMaterials[e.MaterialToUse.texCoordMaterial]=null}_computeAmbianceKeyAndProcessMaterial(e,t,s,i,a){if(super._computeAmbianceKeyAndProcessMaterial(e,t,s,i,a),this.pixelSize.x=i._pixelSize.x,this.pixelSize.y=i._pixelSize.y,this.isDashedLine){var r=this.dashPattern;this._dashPatternInternal&&this._dashPatternInternal.length===4*Math.ceil(r.length/4)||(this._dashPatternInternal=new Float32Array(4*Math.ceil(r.length/4)));for(var n=0;n<r.length;n++)this._dashPatternInternal[n]=r[n]}else this._dashPatternInternal=null;return 0}}return a.prototype.targetPrimitiveType="LINES",a.prototype.__dimension=1,a}),define("DS/Materials/LineBasicMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/LineDSMaterial","DS/Materials/DeferredCaches","DS/Mesh/Mesh","DS/CoreEvents/Events"],function(e,t,s,i,a){"use strict";const r={createDiskXY:function(t,s=.5){const a=new Uint16Array(3*t),r=new Float32Array(3*(t+1));r[0]=0,r[1]=0,r[2]=s;for(let e=0;e<t;e++){let i=2*Math.PI*e/t;r[3*(e+1)+0]=Math.cos(i),r[3*(e+1)+1]=Math.sin(i),r[3*(e+1)+2]=s,a[3*e+0]=0,a[3*e+1]=e+1,a[3*e+2]=e+1==t?1:e+2}let n=new e.BufferGeometryDS;n.vertexIndexArray=a,n.vertexPositionArray=r;const o=new i.DrawingGroup(null,null,4,0,a.length);return o.geometry=n,n.drawingGroups=[o],n},homogeneousDistance:function(e,t){const s=e.x/e.w-t.x/t.w,i=e.y/e.w-t.y/t.w,a=e.z/e.w-t.z/t.w;return Math.sqrt(s*s+i*i+a*a)},screenDistance:function(t,s,i=NaN){function a(e,t){const s=e.x/e.w-t.x/t.w,i=e.y/e.w-t.y/t.w;return Math.sqrt(s*s+i*i)}const r=Math.abs(t.z)>Math.abs(t.w),n=Math.abs(s.z)>Math.abs(s.w);if(!r&&!n)return a(t,s);if(r&&n)return i;const o=-(t.w+t.z)/(s.z-t.z+(s.w-t.w)),l=new e.Vector4(t.x+o*(s.x-t.x),t.y+o*(s.y-t.y),t.z+o*(s.z-t.z),t.w+o*(s.w-t.w));return r?a(l,s):a(t,l)}},n=new e.Matrix4,o=new e.Color,l={createMaterial:function({is_triangle_mesh:t,upright:s}){const i={linePointsTexture:{type:"t2",value:null},linePointsTextureSize:{type:"f",value:1},lineShapeColor:{type:"v3",value:new e.Vector3(1,1,1)},lineScreenSpace:{type:"b",value:!0},lineShapeThickness:{type:"f",value:1},lineCurvilinearScale:{type:"f",value:1},lineShapeTransform:{type:"m4",value:new e.Matrix4}};let a=new(t?e.MeshBasicMaterial:e.LineBasicMaterial)({color:16777215,force:!0});return a.defines={UPRIGHT_LINETYPES:!1},a._activatePDSFXMigrated(),a._PDSFXData._uniqueID="AdvancedLineTypesPDSFX",a.setPDSFXUniforms(i),a.setPDSFXVaryings({curvilinear:{type:"v3"}}),a.setPDSFXGlobalShaderCode(function(e){const t=e.variableHandler,s=e.functionHandler,i=(e.pdsfxDefines,t=>e.getUniform(t)),a=e=>t.bool(e),r=e=>t.float(e),n=e=>t.vec2(e),o=e=>t.vec3(e),l=e=>t.vec4(e),h=e=>t.mat4(e),p=e.userDefines.UPRIGHT_LINETYPES;return`\n                    ${s.dF("transpose","m4",[s.prmM4("m")])}\n                    {\n                        ${h("n")};\n                        n[0] = ${l()}(m[0][0], m[1][0], m[2][0], m[3][0]);\n                        n[1] = ${l()}(m[0][1], m[1][1], m[2][1], m[3][1]);\n                        n[2] = ${l()}(m[0][2], m[1][2], m[2][2], m[3][2]);\n                        n[3] = ${l()}(m[0][3], m[1][3], m[2][3], m[3][3]);\n                        return n;\n                    }\n\n                    ${p?`\n                        ${h("uprightTransform")}  = ${h()}(\n                            -1.0, 0.0, 0.0, 0.0,\n                            0.0, -1.0, 0.0, 0.0,\n                            0.0, 0.0, 1.0, 0.0,\n                            1.0, 0.0, 0.0, 1.0\n                        );\n                        `:""}                 \n                    // Utility: transform matrix (clip space -> screen space)\n                    ${s.dF("GetClip2Screen","m4",[])} {\n                        ${n("v")} = ${n()}(${e.vGetViewportSize()}) / 2.0;\n                        return ${h()}(\n                        \tv.x, 0.0, 0.0, 0.0,\n                        \t0.0, v.y, 0.0, 0.0,\n                        \t0.0, 0.0, 1.0, 0.0,\n                        \tv.x, v.y, 0.0, 1.0\n                        );\n                    }\n\n                    // Utility: transform matrix (screen space -> clip space)\n                    ${s.dF("GetScreen2Clip","m4",[])}{\n                        ${n("v")} = ${n()}(${e.vGetViewportSize()}) / 2.0;\n                        return ${h()}(\n                        \t1.0/v.x,     0.0, 0.0, 0.0,\n                        \t    0.0, 1.0/v.y, 0.0, 0.0,\n                        \t    0.0,     0.0, 1.0, 0.0,\n                        \t   -1.0,    -1.0, 0.0, 1.0\n                        );\n                    }\n                        \n                    ${s.dF("GetPoint","v4",[s.prmF("index")])} {\n                        ${r("i")} = floor((index + 0.5) / ${i("linePointsTextureSize")});\n                        ${r("j")} = index - i * ${i("linePointsTextureSize")};\n                        ${r("v")} = (i + 0.5) / (${i("linePointsTextureSize")});\n                        ${r("u")} = (j + 0.5) / (${i("linePointsTextureSize")});\n                        ${n("uv")} = ${n()}(u, v);\n                        return ${s.sample2DTexture((t=>e.getTextureUniform(t))("linePointsTexture"),"uv")};\n                    }\n                    // TODO: check on Apple devices, int cast might be a problem\n                    ${s.dF("GetLinePtRangeBegin","f",[])}{\n                        return lineShapeSegment.z; \n                    }\n                    ${s.dF("GetLinePtRangeEnd","f",[])}{\n                        return lineShapeSegment.w; \n                    }\n                    ${s.dF("GetLineMaxDistance","f",[])}{\n                        ${r("index")} = ${s.cF("GetLinePtRangeEnd","f",[])} - 1.0;\n                        return ${s.cF("GetPoint","v4",[s.prmF("index")])}.w / ${i("lineCurvilinearScale")}; \n                    }\n                    /// Return the segment [i, i+1] to consider for the given curvilinear coord\n                    // The returned value is always valid, however that means that the first segment\n                    // is returned for lx <= 0 and the last segment is returned for lx >= total_distance\n                    ${s.dF("GetLineSegment","f",[s.prmF("lx")])}{\n                        ${r("begin")} = ${s.cF("GetLinePtRangeBegin","f",[])};\n                        ${r("end")}   = ${s.cF("GetLinePtRangeEnd","f",[])};\n                        ${r("i")} = begin + 1.0;\n                        // Hacky unroll\n                        for(${(e=>t.int(e))("aux")} =0; aux<64; aux++)\n                        {\n                            if(i >= end) {\n                                break;\n                            }\n                            ${l("pt")} = ${s.cF("GetPoint","v4",[s.prmF("i")])};\n                            if(lx <= ${s.cF("GetPoint","v4",[s.prmF("i")])}.w / ${i("lineCurvilinearScale")}) {\n                                return i - 1.0;\n                            }\n                            i++;\n                        }\n                        return end - 2.0;\n                    }\n                    /// Return a transformation from base space to clip space on the segment [Pi, Pj]\n                    // @param  lx  Curvilinear abscissa (screen-space) of where to position the frame\n                    // @param  Pi  Clip coords in XYZ, line distance in W\n                    // @param  Pj  Clip coords in XYZ, line distance in W\n                    // @note The returned matrix is normalized curvilinearly; you need to scale the X axis with the\n                    //       length of the shape (in curvilinear units); you can scale Y with the same factor (to\n                    //       keep the aspect ratio of the shape) or you can directly set the norm of the Y axis (to\n                    //       have a fixed thickness, this will break the aspect ratio).\n                    // @note The returned matrix is not invertible (input Z not used).\n                    ${s.dF("GetLineBase2Clip","m4",[s.prmF("lx"),s.prmV4("Pi"),s.prmV4("Pj")])}{\n                        ${n("half_screen")} = ${n()}(${e.vGetViewportSize()}) / 2.0;\n    \n                        // D.XY = screen delta, D.Z = clip depth delta, D.W = curvilinear delta\n                        ${l("D")}  = Pj - Pi;\n                        D.x *= half_screen.x;\n                        D.y *= half_screen.y;\n    \n                        // Curvilinear normalizations + going back to clip-space\n                        ${r("t")}  = (lx - Pi.w) / D.w;\n                        ${n("sXY")} = ${n()}(length(D.xy) / D.w) / half_screen;\n                        ${r("sZ")} = D.z / D.w;\n\n                        ${h("frame")};\n                        frame[0] = ${l()}(sXY * normalize(${n()}(D.x,  D.y)), sZ, 0.0);\n                        frame[1] = ${l()}(sXY * normalize(${n()}(-D.y, D.x)), 0.0, 0.0);\n                        frame[2] = ${l()}(0.0);\n                        frame[3] = ${l()}(Pi.xy + t * D.xy / half_screen, Pi.z + t * D.z, 1.0);\n                        return frame;\n                    }\n                    /// Return a transformation from base space to model space on the segment [Pi, Pj]\n                    // @param  lx  Curvilinear abscissa of where to position the frame\n                    // @param  Pi  Model coords in XYZ, line distance in W\n                    // @param  Pj  Model coords in XYZ, line distance in W\n                    // @note The returned matrix is normalized curvilinearly; you need to scale the X axis with the\n                    //       length of the shape (in curvilinear units); you can scale Y with the same factor (to\n                    //       keep the aspect ratio of the shape) or you can directly set the norm of the Y axis (to\n                    //       have a fixed thickness, this will break the aspect ratio).\n                    // @note The returned matrix is not invertible (input Z not used).\n                    ${s.dF("GetLineBase2Model","m4",[s.prmF("lx"),s.prmV4("Pi"),s.prmV4("Pj")])}{\n                        ${l("D")} = Pj - Pi;\n                        ${o("N")} = normalize(cross(${o()}(0.0, 0.0, 1.0), D.xyz));\n                        if(dot(N, N) < 0.9) {\n                            N = ${o()}(0.0, 1.0, 0.0);\n                        } \n    \n                        ${r("t")} = (lx - Pi.w) / D.w;\n                        ${r("len")} = length(D.xyz);\n    \n                        ${h("frame")};\n                        frame[0] = ${l()}(D.xyz / D.w, 0.0);\n                        frame[1] = ${l()}(N * len / D.w, 0.0);\n                        frame[2] = ${l()}(0.0);\n                        frame[3] = ${l()}(Pi.xyz + t * D.xyz, 1.0);\n                        return frame;\n                    }\n                    /// Determine the endpoints of the specified segment\n                    ${s.dF("GetLineEndpoints",null,[s.prmF("segment"),s.prmIOV4("Pi"),s.prmIOV4("Pj")])}{\n                        ${r("i")} = segment; \n                        ${r("j")} = segment + 1.0;\n                        ${t.dereference()}Pi = ${s.cF("GetPoint","v4",[s.prmF("i")])};\n                        ${t.dereference()}Pi.w /= ${i("lineCurvilinearScale")};\n                        ${t.dereference()}Pj = ${s.cF("GetPoint","v4",[s.prmF("j")])};\n                        ${t.dereference()}Pj.w /= ${i("lineCurvilinearScale")};\n                    }\n                    /// Clip the endpoints of the specified segment following the given projection\n                    // @return Whether the whole segment is clipped (ie, to discard)\n                    ${s.dF("ClipLineSegment","b",[s.prmIOV4("Pi"),s.prmIOV4("Pj"),s.prmM4("obj2clip")])}{\n                        ${l("P")} = obj2clip * ${l()}(${t.dereference()}Pi.xyz, 1.0);\n                        ${l("Q")} = obj2clip * ${l()}(${t.dereference()}Pj.xyz, 1.0);\n                        ${r("distP")}  = ${t.dereference()}Pi.w;\n                        ${r("distQ")}  = ${t.dereference()}Pj.w;\n    \n                        // If both points are clipped, just return that we can discard the segment\n                        ${a("clipP")}  = abs(P.z) > abs(P.w);\n                        ${a("clipQ")}  = abs(Q.z) > abs(Q.w);\n                        if(clipP && clipQ) {\n                            return true;\n                        }\n    \n                        // Only 1 point is clipped, reproject the other on the near plane and recompute the curvilinear abcissa\n                        if(clipP != clipQ)\n                        {\n                            ${n("half_screen")} = ${n()}(${e.vGetViewportSize()}) / 2.0;\n                            ${r("t")} = -(P.w + P.z) / (Q.z - P.z + (Q.w - P.w));\n                            ${l("R")} = P + t * (Q - P);\n                            if(clipQ) {\n                                P = R;\n                            } else { \n                                Q = R;\n                            }\n                            ${r("new_delta")}  = length((Q.xy / Q.w - P.xy / P.w) * half_screen) / ${i("lineCurvilinearScale")};\n                            if(clipP) {\n                                distP = distQ - new_delta;\n                            } else {\n                                distQ = distP + new_delta;\n                            }\n                        }\n    \n                        ${t.dereference()}Pi = ${l()}(P.xyz / P.w, distP);\n                        ${t.dereference()}Pj = ${l()}(Q.xyz / Q.w, distQ);\n                        return false;\n                    }\n                    /// Compute the final (model-space) position from a vertex position\n                    // This function applies the correct transform for the instance.\n                    ${s.dF("ComputeModelPosition","v3",[s.prmV3("input_position"),s.prmIOV3("curvilinear")])} {\n                        // These could be uniforms but are put here for better optimizations from the GLSL compiler\n                        ${(e=>t.intC(e))("lineKeepShapeAspect")}  = 1;\n    \n                        // Curvilinear abcissa\n                        // 'curvilinear' is the actual abcissa of the vertex and is needed to correctly discard pixels outside of the line\n                        // 'cx' is the curvilinear abscissa we use to recover the frame in which to position our vertex\n                        ${l("base")} = ${i("lineShapeTransform")} * ${l()}(input_position, 1.0);\n                        base /= base.w;\n                        ${r("inst_cx")}  = lineShapeSegment.x;\n                        ${t.dereference()}curvilinear = ${o()}(inst_cx + base.x * lineShapeSegment.y, base.y, ${s.cF("GetLineMaxDistance","f",[])});\n                        ${r("cx")} = inst_cx + base.z * lineShapeSegment.y;\n                        base.x -= base.z;\n    \n                        // Get the segment on where this curvilinear X lies\n                        ${l("Pi")};\n                        ${l("Pj")};\n                        ${r("lineSeg")} = ${s.cF("GetLineSegment","f",[s.prmF("cx")])};\n                        ${s.cF("GetLineEndpoints",null,[s.prmF("lineSeg"),s.prmRefV4("Pi"),s.prmRefV4("Pj")])};\n                                              \n                        \n                        ${p?`                \n                                ${l("Pimv")}  = ${e.vGetWorldViewMatrix()} * ${l()}( Pi.xyz, 1.0) ;\n                                ${l("Pjmv")}  = ${e.vGetWorldViewMatrix()} * ${l()}( Pj.xyz, 1.0) ;\n                                ${r("dotValue")}  = dot(normalize(Pjmv.xy - Pimv.xy), ${n()}(1.0, 0.0));\n                                if (dotValue < 0.0) {\n                                    base = ${i("lineShapeOriginalTransform")} * uprightTransform * ${i("lineShapeBaseTransform")} * ${l()}(input_position, 1.0);\n                                    base /= base.w;\n                                    ${t.dereference()}curvilinear = ${o()}(inst_cx + base.x * lineShapeSegment.y, base.y, ${s.cF("GetLineMaxDistance","f",[])};\n                                    cx = inst_cx + base.z * lineShapeSegment.y;\n                                    base.x -= base.z;\n                                    lineSeg= ${s.cF("GetLineSegment","f",[s.prmF("cx")])};\n                                    ${s.cF("GetLineEndpoints",null,[s.prmF("lineSeg"),s.prmRefV4("Pi"),s.prmRefV4("Pj")])};\n                                }\n                            `:""}\n                        if(lineScreenSpace && ${s.cF("ClipLineSegment","b",[s.prmRefV4("Pi"),s.prmRefV4("Pj"),s.prmM4(`${e.vGetProjectionMatrix()} * ${e.vGetWorldViewMatrix()}`)])}){\n                            curvilinear.x = -1e12;\n                            return ${o()}(0.0 / 0.0);\n                        }\n    \n                        if(lineScreenSpace)\n                        {\n                            // Base -> Clip, from the position on the line\n                            ${h("base2Clip")}  = ${s.cF("GetLineBase2Clip","m4",[s.prmF("cx"),s.prmV4("Pi"),s.prmV4("Pj")])};\n                            base2Clip[0].x *= lineShapeSegment.y;\n                            base2Clip[0].y *= lineShapeSegment.y;\n                            base2Clip[0].z *= lineShapeSegment.y;\n                            if(lineKeepShapeAspect != 0) {\n                                base2Clip[1].x *= lineShapeSegment.y;\n                                base2Clip[1].y *= lineShapeSegment.y;\n                                base2Clip[1].z *= lineShapeSegment.y;\n                            } else {\n                                base2Clip[1] = ${s.cF("GetScreen2Clip","m4",[])} * normalize(${s.cF("GetClip2Screen","m4",[])} * base2Clip[1]) * ${i("lineShapeThickness")};\n                            }\n    \n                            // Final position\n                            ${l("clip")}  = base2Clip * base;\n    \n                            // Hack because PDSFX does not allow to directly return clip coordinates\n                            ${h("clip2obj")}  = ${s.cF("transpose","m4",[s.prmM4(e.vGetWorldViewInvTranspMatrix())])} * ${e.vGetProjectionInvMatrix()};\n                            ${l("model")}  = clip2obj * clip;\n                            return model.xyz / model.w;\n                        }\n                        else\n                        {\n                            // Base -> Model, from the position on the line\n                            ${h("base2Model")}  = ${s.cF("GetLineBase2Model","m4",[s.prmF("cx"),s.prmV4("Pi"),s.prmV4("Pj")])};\n                            base2Model[0].x *= lineShapeSegment.y;\n                            base2Model[0].y *= lineShapeSegment.y;\n                            base2Model[0].z *= lineShapeSegment.y;\n                            base2Model[1].x *= lineShapeSegment.y;\n                            base2Model[1].y *= lineShapeSegment.y;\n                            base2Model[1].z *= lineShapeSegment.y;\n    \n                            // Final position\n                            ${l("model")}  = base2Model * base;\n                            return model.xyz / model.w;\n                        }\n                    }\n                `},null),a.setPDSFXOverridableFunctions({ComputeObjectPosition:function(e,t){e.variableHandler;const s=e.functionHandler;return`\n                        return ${s.cF("ComputeModelPosition","v3",[s.prmV3(e.vGetAttribPosition()),s.prmRefV3(e.getVarying("curvilinear"))])};\n                    `},ComputeObjectFollowingPosition:function(e,t){const s=e.variableHandler,i=e.functionHandler;return`\n                        ${(e=>s.vec3(e))("tmp")};\n                        return ${i.cF("ComputeModelPosition","v3",[i.prmV3(e.vGetAttribFollowingPosition()),i.prmRefV3("tmp")])};\n                    `},ComputeObjectPreviousPosition:function(e,t){const s=e.variableHandler,i=e.functionHandler;return`\n                        ${(e=>s.vec3(e))("tmp")};\n                        return ${i.cF("ComputeModelPosition","v3",[i.prmV3(e.vGetAttribPreviousPosition()),i.prmRefV3("tmp")])};\n                    `}},{ComputeViewNormal:function(e,t){const s=e.variableHandler;return`\n                        if (!(${e.vGetProjectionMatrix()}[3][3] > 0.0)) {\n                            return -normalize(${e.vGetViewPosition()});\n                        }\n                        return ${(e=>s.vec3(e))()}(0.0, 0.0, -1.0); \n                    `},ComputeAlbedo:function(e,t){const s=t=>e.getUniform(t);return`\n                        return ${s("lineShapeColor")} * ${s("lineShapeColor")};\n                    `},ComputeDiscard:function(e,t){const s=t=>e.getVarying(t);return`\n                        return ${s("curvilinear")}.x > ${s("curvilinear")}.z || ${s("curvilinear")}.x < 0.0;\n                    `}}),a.side=e.Constants.DoubleSide,a},updateMaterial:function(t,s){void 0!==s.color&&t.updatePDSFXUniform("lineShapeColor",new e.Vector3(s.color.r,s.color.g,s.color.b)),void 0!==s.thickness&&(t.updatePDSFXUniform("lineShapeThickness",s.thickness),t.setLineWidth&&t.setLineWidth(s.thickness)),void 0!==s.patternScale&&t.updatePDSFXUniform("lineCurvilinearScale",s.patternScale),void 0!==s.screenSpace&&t.updatePDSFXUniform("lineScreenSpace",s.screenSpace),void 0!==s.shapeTransform&&t.updatePDSFXUniform("lineShapeTransform",s.shapeTransform),void 0!==s.shapeOriginalTransform&&t.updatePDSFXUniform("lineShapeOriginalTransform",s.shapeOriginalTransform),void 0!==s.shapeBaseTransform&&t.updatePDSFXUniform("lineShapeBaseTransform",s.shapeBaseTransform),void 0!==s.pointsTexture&&(t.updatePDSFXUniform("linePointsTexture",s.pointsTexture),t.updatePDSFXUniform("linePointsTextureSize",s.pointsTexture.image.width)),void 0!==s.opacity&&(t.opacity=s.opacity)}};let h;class p{constructor(e){this.storage=e,this.updateKeys={vertexTransformMatrix:n,patternScale:1,patternOffset:0,start:0,count:0,color:o,opacity:1,thickness:1},this.drawingGroups=null,this.pattern=null,this.patternShapes=null}dispose(){if(this.drawingGroups)for(let e=0;e<this.drawingGroups.length;e++)this.drawingGroups[e].material.dispose(),this.drawingGroups[e].geometry.dispose();this.drawingGroups=null,this.pattern=null,this.patternShapes=null,this.updateKeys={vertexTransformMatrix:n,patternScale:1,patternOffset:0,start:0,count:0,color:o,opacity:1,thickness:1}}_needsUpdate(e,t,s,i){var a=this.updateKeys;this.updateKeys={vertexTransformMatrix:s,patternScale:e.scale/i,patternOffset:0,start:t.start,count:t.count,color:e.color,opacity:e._opacity,thickness:e.lineWidth};var r=this.updateKeys;return a.patternOffset!==r.patternOffset||a.patternScale!==r.patternOffset||a.start!==r.start||a.count!==r.count||a.opacity!==r.opacity||a.thickness!==r.thickness||(!a.color.equals(r.color)||!a.vertexTransformMatrix.equals(r.vertexTransformMatrix))}matches(e){return this.pattern===e._pattern&&this.patternShapes===e._patternShapes}updateMaterials(e,t,s,i){if(this._needsUpdate(e,t,s,i)){const a=!e._worldSizePattern,n=h.computeInstancePlacements({pattern:e._pattern,stride:e._patternStride,patternScale:e.scale/i,subDG:this,interval:t,pointTransform:s,distanceFunction:a?r.screenDistance:r.homogeneousDistance,initial_dist:this.updateKeys.patternOffset,wholePatternsOnly:e._wholePatternsOnly});n.dashes&&e.setDashPatternArray(n.dashes);for(let t=0;t<n.instances.length;t++){const s=this.drawingGroups[t],r=n.instances[t];s.setInstancingParameters(r.count(),[r.attrib],"mesh"),l.updateMaterial(s.material,{pointsTexture:this.storage.geometryData.texture,color:e.color,patternScale:e.scale/i,thickness:e.lineWidth,opacity:e.opacity,screenSpace:a,shapeTransform:r.transform,shapeOriginalTransform:r.origTransform,shapeBaseTransform:r.baseTransform});const o=s.geometry.wideLinesLinker&&s.geometry.wideLinesLinker.originalDGToWideDG.get(s);o&&o.setInstancingParameters(r.count(),[r.attrib],"mesh")}}return this.drawingGroups}}class d{constructor(e){this.storage=new Map,this.dg=e,this.geometry=e.geometry,this._invalidator=null,this.geometryData={nbPoints:0,texture:null,starts:null,ids:null,pointTransfo:n,distanceOffset:0}}any(){return this.storage.size>0}checkIfNeedsDGUpdateOrDisposed(e){if(!e._isLineWithShapes||!e._pattern||0===e._patternShapes.length)return this.dispose(e),!0;if(!this.storage.has(e))return!1;return this.storage.get(e).matches(e)||this.dispose(e),!1}dispose(e=null){e?this.storage.has(e)&&(this.storage.get(e).dispose(),this.storage.delete(e)):(this.storage.forEach((e,t)=>e.dispose()),this.storage.clear()),!this.any()&&this._invalidator&&(a.unsubscribe(this._invalidator),this._invalidator=null,this.geometryData.texture&&this.geometryData.texture.dispose(),this.geometryData={nbPoints:0,texture:null,starts:null,ids:null,pointTransfo:n,distanceOffset:0})}needsDGs(e){return!this.storage.has(e)||null===this.storage.get(e).drawingGroups}updateShapes(e,t,s){if(!this._invalidator){const e=this;this._invalidator=a.subscribe({event:"/VISU/_LINESHAPES_DG_UPDATE"},function(t){t.extraData.geometry===e.geometry&&e.dispose()})}let i=this.storage.get(e);i||(i=new p(this),this.storage.set(e,i)),i.drawingGroups=t;for(let e=0;e<t.length;e++)t[e]._updateLineWithShapes=s;i.pattern=e._pattern,i.patternShapes=e._patternShapes}updateMaterials(e,t,s,i){return this.storage.has(e)?this.storage.get(e).updateMaterials(e,t,s,i):[]}_needsGeomUpdate(){return!this.geometryData.texture}_needsDistanceUpdate(e,t){return this.geometryData.distanceOffset!==t||!this.geometryData.pointTransfo.equals(e)}_setGeometryData(t,s,i,a,r){const n=t.length/4,o=Math.ceil(Math.sqrt(n));var l=new Float32Array(4*o*o);for(let e=0;e<t.length;e++)l[e]=t[e];var h=new e.DataTexture(l,o,o,e.RGBAFormat,e.FloatType);h.minFilter=h.magFilter=e.NearestFilter,h.flipY=!1,h.needsUpdate=!0,this.geometryData={nbPoints:n,texture:h,starts:s,ids:i,pointTransfo:a,distanceOffset:r}}}const u={isValidPattern:e=>Array.isArray(e)||ArrayBuffer.isView(e),isDashPatternArray:e=>e.length>0&&"number"==typeof e[0],segmentIsDash:e=>e.length>0&&(void 0===e.shape||null===e.shape),segmentIsShape:e=>e.length>0&&void 0!==e.shape&&null!==e.shape,segmentIsNotOnLineShape:e=>e.length>0&&void 0!==e.shape&&null!==e.shape&&!e.onSolidLine,segmentIsPoint:e=>0===e.length,collapseSameSign:function(e){if(0===e.length)return e;let t=0;for(let s=1;s<e.length;s++){const i=e[s];Math.sign(e[t])*Math.sign(i)>-.5?e[t]+=i:++t!==s&&(e[t]=i)}return e.length=t+1,e},instantiatePatternPoints:function(e,t,s,i){let a=!1;for(let r=0;r<e.length;r++){let n=e[r];this.segmentIsPoint(n)&&(n.length=s/i,n.shape=t.length,a=!0)}return a&&t.push(r.createDiskXY(31).drawingGroups[0]),a},extractDashPattern:function(e){const t=this.collapseSameSign(e.map(e=>this.segmentIsNotOnLineShape(e)?-e.length:e.length));return Float32Array.from(t,Math.abs)},trimUnusedShapes:function(e,t){let s=new Set(e.filter(this.segmentIsShape).map(e=>e.shape));if(0===(s=[...s].sort((e,t)=>e-t)).length)return[];if(s[s.length-1]>=t.length)return console.error(`Complex line pattern requires shape n°${s[s.length-1]}, but only ${t.length} were specified. No shapes will be used.`),[];for(let t=0;t<e.length;t++){let i=e[t];this.segmentIsShape(i)&&(i.shape=s.indexOf(i.shape))}return s.map(e=>t[e])},setSegmentTransforms4x4:function(t){for(let s=0;s<t.length;s++){const i=t[s];if(i.matrix)if(16!==i.matrix.elements.length){let t=i.matrix.elements;i.matrix=new e.Matrix4,i.matrix.elements=[t[0],t[1],0,t[2],t[3],t[4],0,t[5],0,0,1,0,t[6],t[7],0,t[8]]}else if(!(i.matrix instanceof e.Matrix4)){const t=i.matrix.elements;i.matrix=new e.Matrix4,i.matrix.elements=t}}},computeOffsetsAndStride:function(e){let t=0;for(let s=0;s<e.length;s++){let i=e[s];i.offset=t,t+=Math.abs(i.length)}return t},computeBaseTransform:function(t){const s=1/t.size().x,i=new e.Vector3(-s*t.min.x,-s*(t.min.y+t.max.y)/2,0);let a=(new e.Matrix4).makeScale(s,s,1);return a.setPosition(i),a},normalizeSegments:function(t,s){for(let i=0;i<t.length;i++){let a=t[i];if(!this.segmentIsShape(a))continue;const r=s[a.shape],o=r.start,l=r.start+r.count,h=new e.Box3,p=new e.Vector3;for(let e=o;e<l;e++)r.geometry.getVertexPosition(r.geometry.vertexIndexArray[e],p),h.expandByPoint(p);const d=this.computeBaseTransform(h);a.upright&&(a.originalMatrix=a.matrix?a.matrix:n,a.toBaseMatrix=d),a.matrix?a.matrix.multiply(d):a.matrix=d}}};function c(e,t,s){var i=e.getBaseId();if(i+="GT-Edge"+t+"S"+e.side+"CP"+e.enableClipPlanes+"TR"+(e.transparent||e.getOpacity()<1)+"LW"+e.lineWidth,i+="PBM"+e.polygonBorderMode,i+="LC"+e.linecap+"LJ"+e.linejoin,i+="O"+e.opacity,e.isDashedLine){i+="SC"+e.scale,i+="IP"+e._invertedPattern+"WS"+e._worldSizePattern+"CPU"+e.isCPUPattern;for(var a=0;a<e.dashPattern.length;a++){i+=a+"p"+e.dashPattern[a]}}return i="id"+(i+=s||"").hashCode()}function f(t,s){var i={color:s||new e.Color,opacity:t.opacity,side:t.side,lineWidth:t.lineWidth,enableClipPlanes:t.enableClipPlanes,linejoin:t.linejoin,linecap:t.linecap,scale:t.scale,pixelSize:t.pixelSize,isCPUPattern:t.isCPUPattern,patternOffset:t.patternOffset,transparent:t.transparent||t.getOpacity()<1,polygonBorderMode:t.polygonBorderMode,invertedPattern:t._invertedPattern,_worldSizePattern:t._worldSizePattern};if(t.isDashedLine){i.dashPattern=new Float32Array(t.dashPattern);for(var a=i.dashPattern.length-1;a>0;a--)i.dashPattern[a]-=i.dashPattern[a-1]}return i}h={distanceOnly({dgStorage:t,pointTransform:s,distanceFunction:i,initial_dist:a=0}){const r=t.dg,n=t.geometry,o=n.vertexIndexArray,l=r.start,h=r.count;let p=t.geometryData.texture.image.data,d=new e.Vector4,u=new e.Vector4,c=new e.Vector3,f=new e.Vector3,m=0;for(var S=0;S<h;S++){const e=S+l;if(S>0){const t=o[e],r=o[e-1];if(t===r)continue;n.getVertexPosition(t,c),n.getVertexPosition(r,f);const l=c.distanceTo(f);if(Math.abs(l)>1e-6)if(S%2==0)p[4*m+3]=a,m++;else{u.set(c.x,c.y,c.z,1).applyMatrix4(s),d.set(f.x,f.y,f.z,1).applyMatrix4(s);let e=i(d,u);const t=p[4*m-1];p[4*m+3]=t+e,m++}}else p[4*m+3]=a,m++}},stripsDistanceAndSubStrips({dgStorage:t,pointTransform:s,distanceFunction:i,initial_dist:a=0}){const r=t.dg,n=t.geometry,o=n.vertexIndexArray,l=r.start,h=r.count;let p=[],d=[],u=[],c=new e.Vector4,f=new e.Vector4,m=new e.Vector3,S=new e.Vector3,C=0;for(var _=0;_<h;_++){const e=_+l;if(_>0){const t=o[e],r=o[e-1];if(t===r)continue;n.getVertexPosition(t,m),n.getVertexPosition(r,S);const l=m.distanceTo(S);if(Math.abs(l)>1e-6)if(_%2==0)d.push(C),C++,p.push(m.x),p.push(m.y),p.push(m.z),p.push(a),u.push(e);else{f.set(m.x,m.y,m.z,1).applyMatrix4(s),c.set(S.x,S.y,S.z,1).applyMatrix4(s);let t=i(c,f);const a=p[4*C-1];C++,p.push(m.x),p.push(m.y),p.push(m.z),p.push(a+t),u.push(e)}else u[C]=e}else{const t=o[e];n.getVertexPosition(t,m),d.push(C),C++,p.push(m.x),p.push(m.y),p.push(m.z),p.push(a),u.push(e)}}return{points:p,starts:d,ids:u}},computeInstancePlacements:function({pattern:e,stride:t,patternScale:s,subDG:i,interval:a,pointTransform:r,distanceFunction:n,initial_dist:o=0,wholePatternsOnly:l=!1}){const h=i.storage;if(h._needsGeomUpdate()){const e=this.stripsDistanceAndSubStrips({dgStorage:h,pointTransform:r,distanceFunction:n,initial_dist:o});h._setGeometryData(e.points,e.starts,e.ids,r,o)}else h._needsDistanceUpdate(r,o)&&(this.distanceOnly({dgStorage:h,pointTransform:r,distanceFunction:n,initial_dist:o}),h.geometryData.texture.needsUpdate=!0,h.geometryData.distanceOffset=o,h.geometryData.pointTransfo=r);let p=h.geometryData,d=e.map(e=>Number.isInteger(e.shape)?{count:function(){return this.attrib.data.length/4},transform:e.matrix,origTransform:e.upright?e.originalMatrix:void 0,baseTransform:e.upright?e.toBaseMatrix:void 0,attrib:{attribName:"lineShapeSegment",type:"v4",isFlattened:!0,data:[]}}:null);function c(s,i,a,r,n=0){if(s>i)return;const o=Math.floor(s/t),l=Math.ceil(i/t);for(let h=o;h<l;h++){const o=h*t;for(let t=0;t<e.length;t++){if(null===d[t])continue;const l=e[t],h=o+l.offset;h<s||h>=i||d[t].attrib.data.push(h+n,l.length,a,r)}}}function f(s,i,a){const r=t*Math.floor(s/t);for(let t=0;t<e.length;t++){if(null===d[t])continue;const n=e[t],o=r+n.offset,l=o+n.length;o>=s||l<=s||d[t].attrib.data.push(o,n.length,i,a)}}function m(e){for(let t=0;t<d.length;t++){if(null===d[t])continue;const s=d[t].count();if(s<1)continue;let i=d[t].attrib;const a=i.data[4*(s-1)+3];(a<0||a>e)&&(i.data[4*(s-1)+3]=e)}}const S=p.nbPoints,C=p.starts,_=p.starts.length;function M(e){return p.texture.image.data[4*e+3]/s}const v=p.ids,g=a.start,P=a.start+a.count;function D(e){return e>=g&&e<P}for(let e=0;e<_;e++){const s=C[e],i=e+1<_?C[e+1]:S;if(l){const e=M(s),a=M(i-1)-e,r=t*Math.floor(a/t),n=e+(a-r)/2;for(let t=s;t+1<i;t++)D(v[t])&&c(M(t)-e,Math.min(M(t+1)-e,r),t,-1,n)}else{D(v[s])&&f(M(s),s,-1);for(let e=s;e+1<i;e++)D(v[e])&&c(M(e),M(e+1),e,-1)}m(i)}for(let e=0;e<d.length;e++){if(null===d[e])continue;const t=d[e].count();let s=d[e].attrib;if(t<1)continue;let i=S;for(let e=t-1;e>=0;e--){let t=s.data[4*e+3];t>=0&&t<i&&(i=t),t=s.data[4*e+2];const a=Math.max(s.data[4*e+0],s.data[4*e+0]+s.data[4*e+1]);for(;a>M(t)&&t<i;)t++;t<i&&t++,s.data[4*e+3]=t,t<i&&(i=t)}}let T=null;if(l){T=[];const s=u.collapseSameSign(e.map(e=>u.segmentIsShape(e)?-e.length:e.length));for(let e=0;e<_;e++){const i=C[e],a=e+1<_?C[e+1]:S,r=M(i),n=M(a-1)-r,o=Math.floor(n/t);if(o<1){T.push(n+2*r);continue}const l=r+(n-t*o)/2;T.push(l);for(let e=0;e<s.length*o;e++)T.push(s[e%s.length]);T.push(l)}T=Float32Array.from(u.collapseSameSign(T),Math.abs)}return{distances:M,instances:d.filter(e=>null!==e),dashes:T}},createShapeDrawingGroup:function(e,t){let s=l.createMaterial({is_triangle_mesh:4===e.glType,upright:t});const a=new i.DrawingGroup(void 0,s,e.glType,e.start,e.count);return a._primitives=[{group:a,start:a.start,count:a.count}],a.geometry=e.geometry,a},computeDependentDGs:function(e,t,s,i,a){let r={needProjectionMatrix:!s._worldSizePattern,cb:(i,a)=>this.computeDependentDGs(e,t,s,i,a)},n=e._dependentDGs;if(n||(n=e._dependentDGs=new d(e)),n.checkIfNeedsDGUpdateOrDisposed(s)||!e.geometry.vertexIndexArray)return n.any()||(e._dependentDGs=null),[];if(n.needsDGs(s)){const e=s._pattern.map(e=>Number.isInteger(e.shape)?{geometry:s._patternShapes[e.shape],upright:e.upright}:null).filter(e=>null!==e).map(e=>this.createShapeDrawingGroup(e.geometry,e.upright));n.updateShapes(s,e,r)}return n.updateMaterials(s,t,i,a,this)}};class m extends t{constructor(e){e&&e.lineWidth&&(e.lineWidth=Math.round(e.lineWidth)),super(e),this._isLineWithShapes=!1,this._isBidimLine=!1,this._pattern=null,this._patternShapes=[],this._patternStride=NaN,this._worldSizePattern=e&&!!e._worldSizePattern,this._wholePatternsOnly=e&&!!e._wholePatternsOnly,this.polygonBorderMode=e&&!!e.polygonBorderMode,this._worldSizePattern&&(this.backMaterial&&this.backMaterial._worldSizePattern!==this._worldSizePattern&&this.setBackMaterial(null),this.isCPUPattern&&this.setCPUPattern(!1),this.linecap="butt"),this.isWideLine=this.lineWidth>1||this.isCPUPattern&&this.isDashedLine,this.backMaterial&&(this.backMaterial.isWideLine=this.backMaterial.lineWidth>1||this.isCPUPattern&&this.backMaterial.isDashedLine),this.polygonBorderMode&&(this.polygonOffset=this.polygonOffset?this.polygonOffset:this.lineWidth>1,this.polygonOffsetFactor=this.polygonOffsetFactor?this.polygonOffsetFactor:-1,this.polygonOffsetUnits=this.polygonOffsetUnits?this.polygonOffsetUnits:-10),e&&e.pattern&&this.setPattern({pattern:e.pattern,shapes:e.patternShapes}),this._wholePatternsOnly&&(this._isBidimLine=!1,this._invertedPattern=!1)}clone(){var e=new m;return super.clone(e),e.polygonBorderMode=this.polygonBorderMode,e._isBidimLine=this._isBidimLine,e._isLineWithShapes=this._isLineWithShapes,e._pattern=this._pattern,e._patternShapes=this._patternShapes,e._patternStride=this._patternStride,e}_setMaterialShaderOptions(e,t,s,i,a,r){super._setMaterialShaderOptions(e,t,s,i,a,r);var n={};r||Object.assign(n,{worldSizePattern:this._worldSizePattern,cpuPattern:this.isCPUPattern}),Object.assign(n,{polygonBorderMode:this.polygonBorderMode}),this._pattern&&(n.linecap="butt"),Object.assign(e,n)}setPattern(e){if(!e||!e.pattern)return this._isLineWithShapes=!1,this._isBidimLine=!1,this._pattern=null,this._patternShapes=[],this._patternStride=NaN,this.setDashPatternArray([]),this._invalidateDisplayRangeLists(),void this.updateDeferredMaterials();if(!u.isValidPattern(e.pattern))return void console.error("Invalid pattern: expected an array (of numbers or of segments), got: ",e.pattern);if(u.isDashPatternArray(e.pattern))return void this.setDashPatternArray(e.pattern);let t=JSON.parse(JSON.stringify(e.pattern)),s=(e.shapes||[]).slice();u.setSegmentTransforms4x4(t),u.instantiatePatternPoints(t,s,this.lineWidth,this.scale),this.setInvertedPattern(!u.segmentIsDash(t[0])),this.setDashPatternArray(u.extractDashPattern(t)),0!==(s=u.trimUnusedShapes(t,s)).length&&(this.setCPUPattern(!0),u.normalizeSegments(t,s),this._pattern=t,this._patternShapes=s,this._patternStride=u.computeOffsetsAndStride(this._pattern),this._isLineWithShapes=!0,this._isBidimLine=!this._pattern.some(u.segmentIsDash),this._invalidateDisplayRangeLists(),this.updateDeferredMaterials())}loadUniforms(e,t,s,i,a,r){if(super.loadUniforms(e,t,s,i,a,r),s.halfWidth&&t.uniform1f(s.halfWidth,this.lineWidth?e._renderScale*this.lineWidth/2:.5),s.scale){var n=this._worldSizePattern?1:e._renderScale;t.uniform1f(s.scale,this.scale?n*this.scale:.15)}this._pattern&&s.patternOffset&&t.uniform1f(s.patternOffset,0)}getType(){return this._isFromGAS?"GASLine":"Line"}_computeDependentDGs(e,t,s){return h.computeDependentDGs(e,t,this,s)}setLineWidth(e){e<1&&(e=1);var t=Math.round(e);if(Math.abs(this.lineWidth-t)>1e-6){var s=this.isWideLine;this.lineWidth=t,this.polygonBorderMode&&(this.polygonOffset=this.polygonOffset?this.polygonOffset:this.lineWidth>1,this.polygonOffsetFactor=this.polygonOffsetFactor?this.polygonOffsetFactor:-1,this.polygonOffsetUnits=this.polygonOffsetUnits?this.polygonOffsetUnits:-10),this.isWideLine=this.lineWidth>1||this.isCPUPattern&&this.isDashedLine,s!==this.isWideLine&&(this.needsUpdate=!0,this._invalidateDisplayRangeLists(),this.updateDeferredMaterials())}}getGeomTypeDeferredMaterial(t,s){return t&e.GeomTypeEnum.BOUNDARY_EDGE?this._getBoundaryEdgeMaterial(s.boundaryEdge):t&e.GeomTypeEnum.SMOOTH_EDGE?this._getSmoothEdgeMaterial(s.smoothEdge):this}setBackMaterial(e){e&&e._worldSizePattern!==this._worldSizePattern?console.error("Non matching pattern units in back material"):(super.setBackMaterial(e),this.backMaterial&&(this.backMaterial.isWideLine=this.backMaterial.lineWidth>1||this.isCPUPattern&&this.backMaterial.isDashedLine),this.updateDeferredMaterials())}setDashPatternArray(e){super.setDashPatternArray(e),this.needsUpdate&&(this.isWideLine=this.lineWidth>1||this.isCPUPattern&&this.isDashedLine,this._invalidateDisplayRangeLists(),this.updateDeferredMaterials())}setCPUPattern(e){this._worldSizePattern&&e&&(e=!1),this.isCPUPattern!==e&&(this.isCPUPattern=e,this.needsUpdate=!0,this.isWideLine=this.lineWidth>1||this.isCPUPattern&&this.isDashedLine,null!==this.backMaterial&&(this.backMaterial.isCPUPattern=this.isCPUPattern,this.backMaterial.isWideLine=this.backMaterial.lineWidth>1||this.isCPUPattern&&this.backMaterial.isDashedLine,this.backMaterial.needsUpdate=!0,this.backMaterial._invalidateDisplayRangeLists(),this.backMaterial.updateDeferredMaterials()),this._invalidateDisplayRangeLists(),this.updateDeferredMaterials())}_getBoundaryEdgeMaterial(t){if(!t.enabled)return this;var i=c(this,e.GeomTypeEnum.BOUNDARY_EDGE);if(s.GeomTypeMaterials.has(i))return s.GeomTypeMaterials.get(i).get(this);var a=f(this,null),r=new m(a);r.color=t.color;var n=new s.DeferredMaterial(r);return s.GeomTypeMaterials.set(i,n),n.get(this)}_getSmoothEdgeMaterial(t){if(!t)return this;var i=c(this,e.GeomTypeEnum.SMOOTH_EDGE,"Col"+this.color.getHex());if(s.GeomTypeMaterials.has(i))return s.GeomTypeMaterials.get(i).get(this);var a=f(this,this.color);a.opacity*=.5;var r=new m(a),n=new s.DeferredMaterial(r);return s.GeomTypeMaterials.set(i,n),n.get(this)}_getBodyEdgeMaterial(){var e="BodyEdgeM"+this.id;if(e="id"+e.hashCode(),s.GeomTypeMaterials.has(e))return s.GeomTypeMaterials.get(e).get(this);var t=this.clone();t.setLineWidth(1),t.setDashPatternType("Solid"),this.politeMaterial&&(t.politeMaterial=this.politeMaterial&&(this.politeMaterial.isWideLine||this.politeMaterial.isDashedLine)?this.politeMaterial._getBodyEdgeMaterial():this.politeMaterial);var i=new s.DeferredMaterial(t);return s.GeomTypeMaterials.set(e,i),i.get(this)}}return m.prototype._shaderID="line",m}),define("DS/Materials/ShaderMaterial",["DS/Mesh/ThreeJS_Base","DS/Materials/OldInfraMaterial","DS/Materials/PDSFXData"],function(e,t,s){"use strict";class i extends t{constructor(t){super(),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.varyings={},this.defines={},this.attributes={},this.shaderID=-1,this.shading=e.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=!1,this.uniformsList=null,this.map=null,this.setValues(t),this.enableClipPlanes=!1}_getTextures(e){var t=super._getTextures(e);return t=t.concat([this.map])}getType(){return"Custom"}getPredefinedMaterial(e,t,s){return this}_inTransparentPass(e){return this.getOpacity()<1||this.transparent}clone(t){var s=void 0!==t?t:new i;return super.clone(s),s.fragmentShader=this.fragmentShader,s.vertexShader=this.vertexShader,s.uniforms=e.CloneStructure(this.uniforms),s.varyings=e.CloneStructure(this.varyings),s.attributes=e.CloneStructure(this.attributes),s.shading=this.shading,s.wireframe=this.wireframe,s.wireframeLinewidth=this.wireframeLinewidth,s.lights=this.lights,s.enableOIT=this.enableOIT,s.uniformsList=this.uniformsList,s.map=this.map,s}buildUniformsList(){for(var e in null===this.uniformsList&&(this.uniformsList=new Map),this.uniforms){if(this.program.uniformLocations[e]){var t=this.uniforms[e];t.dynamic||this.uniformsList.set(e,t)}}}activatePDSFX(e){throw"Unsupported operation: ShaderMaterial can't be PDSFXed, please use a standard material."}_dump(){throw"Unsupported operation"}}return i}),define("DS/Materials/ShaderMaterialDS",["DS/Mesh/ThreeJS_Base","DS/Materials/ShaderMaterial","DS/Visualization/UniformsUtils"],function(e,t,s){"use strict";var i=["#if HIGHLIGHT_POLITE == 1","#ifdef NOZ_OBJECT","const int noZ = 1;","#else","const int noZ = 0;","#endif","const float highlightBack = 0.66;","const float highlightFront = 0.33;","float depthSampleTest(in vec2 coord, in float depth) {","float fDepth = unpackRGBA(texture2D(rgbaDepth, coord));","if ( fDepth  < depth) return highlightBack;","return highlightFront;","}","float getDepthTestResult(float depth) {","vec2 coord = 0.5 + 0.5*cP.xy/cP.w;","return depthSampleTest(coord, depth - 2.38418579e-7);","}","float getFaceDepthValue() {","if (noZ == 1) {","return highlightFront;","}","float depth = 0.5 + 0.5*cP.z/cP.w ;","float faceDepth = depth;","#if defined(GL_OES_standard_derivatives) || defined(GLSL300ES)","float dx = dFdx (depth);","float dy = dFdy (depth);","#if defined(MOBILE_HIGHLIGHT_MODE) && !defined(MOBILE_DEVICE_MODE)","faceDepth += 0.5 * (sqrt(dx*dx + dy*dy) + DEPTH_PRECISION);","#else","faceDepth += 0.9 * (sqrt(dx*dx + dy*dy) + DEPTH_PRECISION);","#endif","#else","faceDepth += 1.5*DEPTH_PRECISION;","#endif","return getDepthTestResult(faceDepth);","}","float getDepthValue() {","if (noZ == 1) {","return highlightFront;","}","float depth = 0.5 + 0.5*cP.z/cP.w ;","return getDepthTestResult(depth);","}","#endif"].join("\n");const a={uniforms:s.merge([{map:{type:"t",value:null},offsetAlphaMap:{type:"v2",value:new e.Vector4(0,0)},repeatAlphaMap:{type:"v2",value:new e.Vector4(1,1)}}]),vertexShaderPars:["#ifdef USE_MAP_ALPHATEST","varying vec2 vUvMap;","uniform vec2 offsetAlphaMap;","uniform vec2 repeatAlphaMap;","#endif"].join("\n"),vertexShaderBody:["#ifdef USE_MAP_ALPHATEST","    vUvMap = uv.xy * repeatAlphaMap + offsetAlphaMap;","#endif"].join("\n"),fragmentShaderPars:["vec4 pack_depth_esm(const in float depth) {","#ifdef USE_UINT_ESM","\tfloat esmDepth = exp(80.0*depth);","\tfloat exposant = ceil(log(esmDepth)/log(10.0));","\tfloat normDepth = esmDepth/pow(10.0,exposant);","\treturn vec4(packRGB(normDepth),exposant/255.0);","#else","\treturn vec4(exp(80.0*depth),0.0,0.0,1.0);","#endif","}","vec4 pack_depth( const in float depth ) {","return packRGBA(depth);","}","#ifdef USE_MAP_ALPHATEST","varying vec2 vUvMap;","uniform sampler2D map;","#endif"].join("\n"),fragmentShaderBody:["#ifdef USE_MAP_ALPHATEST","   float alpha = texture2D( map, vUvMap ).w;","   if ( alpha < ALPHATEST ) discard;","#endif","vec4 finalData;","#if defined(SHADOWMAP_TYPE_ESM) || defined(SHADOWMAP_TYPE_ESM_IMPROVED) ","finalData = pack_depth_esm( gl_FragCoord.z );","#else","finalData = pack_depth( gl_FragCoord.z );","#endif","#ifdef GLSL300ES","outFragColor = finalData;","#else","gl_FragData[ 0 ] = finalData;","#endif",""].join("\n")},r={uniforms:s.merge([{map:{type:"t",value:null},rgbaDepth:{type:"t",value:null},offsetAlphaMap:{type:"v2",value:new e.Vector4(0,0)},repeatAlphaMap:{type:"v2",value:new e.Vector4(1,1)},iHighlightColor:{type:"v4",value:new e.Vector4(0,.6,1,1)},iHighlightIntensity:{type:"v2",value:new e.Vector2(1,-1)}}]),vertexShaderPars:["varying vec3 vMVNormal;","varying vec3 vMVPosition;","#if HIGHLIGHT_POLITE == 1","varying vec4 cP;","#endif"].join("\n"),vertexShaderBody:["    vMVNormal = mvNormal;","    vMVPosition = -mvPosition.xyz;","#if HIGHLIGHT_POLITE == 1","cP = gl_Position;","#endif"].join("\n"),fragmentShaderPars:["varying vec3 vMVNormal;","varying vec3 vMVPosition;","varying float reflectionFactor;","uniform vec4 iHighlightColor;","uniform vec2 iHighlightIntensity;","#if HIGHLIGHT_POLITE == 1","uniform sampler2D rgbaDepth;","varying vec4 cP;","#endif",i].join("\n"),fragmentShaderBody:["vec3 I = vec3(0.0, 0.0, 1.0);","    if (!(projectionMatrix[3][3] > 0.0)) {","       I = normalize( vMVPosition.xyz );","    }","float reflectionFactor = abs(dot(normalize(vMVNormal),I));","#if HIGHLIGHT_POLITE == 1","float depthValue = getFaceDepthValue();","reflectionFactor = noZ == 1 ? 0.8 : depthValue < 0.5 ? (1.0 - 1.0 / 3.141) * reflectionFactor + 1.0/3.141 : reflectionFactor;","gl_FragColor = vec4( iHighlightColor.xyz * reflectionFactor, depthValue > 0.5 ? iHighlightIntensity.y : iHighlightIntensity.x);","#else","reflectionFactor = 1.0 - reflectionFactor;","  gl_FragColor = vec4( iHighlightColor.xyz, (0.6 * reflectionFactor * reflectionFactor + 0.2) * iHighlightIntensity.x );","#endif","\tgl_FragColor.a = min(gl_FragColor.a, 1.0);"].join("\n")},n={uniforms:s.merge([{map:{type:"t",value:null},rgbaDepth:{type:"t",value:null},offsetAlphaMap:{type:"v2",value:new e.Vector4(0,0)},repeatAlphaMap:{type:"v2",value:new e.Vector4(1,1)},highlightID:{type:"f",value:1}}]),vertexShaderPars:["varying vec3 vMVNormal;","varying vec3 vMVPosition;","uniform float highlightID;","#ifdef USE_MAP_ALPHATEST","varying vec2 vUvMap;","uniform vec2 offsetAlphaMap;","uniform vec2 repeatAlphaMap;","#endif","#if HIGHLIGHT_POLITE == 1","varying vec4 cP;","#endif"].join("\n"),vertexShaderBody:["    vMVNormal = mvNormal;","    vMVPosition = -mvPosition.xyz;","#ifdef USE_MAP_ALPHATEST","    vUvMap = uv.xy * repeatAlphaMap + offsetAlphaMap;","#endif","#if HIGHLIGHT_POLITE == 1","cP = gl_Position;","#endif"].join("\n"),fragmentShaderPars:["varying vec3 vMVNormal;","varying vec3 vMVPosition;","#ifdef USE_MAP_ALPHATEST","varying vec2 vUvMap;","uniform sampler2D map;","#endif","#if HIGHLIGHT_POLITE == 1","uniform sampler2D rgbaDepth;","varying vec4 cP;","#endif",i,"uniform float highlightID;"].join("\n"),fragmentShaderBody:["#ifdef USE_MAP_ALPHATEST","   float alpha = texture2D( map, vUvMap ).w;","   if ( alpha < ALPHATEST ) discard;","#endif","vec3 I = vec3(0.0, 0.0, 1.0);","    if (!(projectionMatrix[3][3] > 0.0)) {","       I = normalize( vMVPosition.xyz );","    }","float reflectionFactor = abs(dot(normalize(vMVNormal),I));","#if HIGHLIGHT_POLITE == 1","float depthValue = getFaceDepthValue();","reflectionFactor = noZ == 1 ? 0.8 : depthValue < 0.5 ? (1.0 - 1.0 / 3.141) * reflectionFactor + 1.0/3.141 : reflectionFactor;","gl_FragColor = vec4( highlightID / 255.0, reflectionFactor, depthValue , 0.0 );","#else","reflectionFactor = 1.0 - reflectionFactor;","  gl_FragColor = vec4( highlightID / 255.0, reflectionFactor * reflectionFactor, 0.0, 0.0 );","#endif"].join("\n")};class o extends t{constructor(e){console.error("ShaderMaterialDS is deprecated, please use a usual material (Basic, DSPBR19x, LineBasic, ...) with PDSFX instead."),super(e=e||{}),this.vertexShaderPars=e.vertexShaderPars||"",this.fragmentShaderPars=e.fragmentShaderPars||"",this.vertexShaderBody=e.vertexShaderBody||"",this.fragmentShaderBody=e.fragmentShaderBody||"",this.originalMaterialRef=null,this.needTangentBinormal=!1,this.update()}requireTangentBinormal(){return this.needTangentBinormal}clone(){var e=new o;return super.clone(e),e.vertexShaderPars=this.vertexShaderPars,e.fragmentShaderPars=this.fragmentShaderPars,e.vertexShaderBody=this.vertexShaderBody,e.fragmentShaderBody=this.fragmentShaderBody,e.originalMaterialRef=this,e.needTangentBinormal=this.needTangentBinormal,e}setShaders(e,t,s,i){this.vertexShaderPars=e,this.fragmentShaderPars=s,this.vertexShaderBody=t,this.fragmentShaderBody=i,this.update()}update(){var e="";e=[e,this.vertexShaderPars,""].join("\n"),e+="void main() { \n",e+=this.vertexShaderBody,e+="\n",e+="}",this.vertexShader=e;var t="";t+="#if defined( NEEDS_UVTOUSE )\n",t+="vec2 uvToUse; \n",t=[t+="#endif \n",this.fragmentShaderPars,""].join("\n"),t+="void main() { \n",t+="#if defined( NEEDS_UVTOUSE )\n",t+="uvToUse=vUv.xy; \n",t+="#endif \n",t+=this.fragmentShaderBody,t+="\n",t+="}",this.fragmentShader=t,this.needsUpdate=!0}updateDeferredMaterials(t){if(this.originalMaterialRef&&this.originalMaterialRef._deferredMaterialsInit){this._deferredMaterials[0]=this;for(var s=1;s<this.originalMaterialRef._deferredMaterials.length;s++)if(this.originalMaterialRef._deferredMaterials[s]instanceof o)for(var i in this._deferredMaterials[s]=this.originalMaterialRef._deferredMaterials[s].clone(),this._deferredMaterials[s].uniforms)i in this.uniforms&&(this._deferredMaterials[s].uniforms[i]=this.uniforms[i]);this._deferredMaterialsInit=!0}else{var l=e.UniformsUtils.mergeNoClone([this.uniforms,e.UniformsUtils.clone(e._DeferredShaders.Normal.uniforms)]),h=e.UniformsUtils.mergeNoClone([this.uniforms,e.UniformsUtils.clone(e._DeferredShaders.Depth.uniforms)]),p=e.UniformsUtils.mergeNoClone([this.uniforms,e.UniformsUtils.clone(e._DeferredShaders.NormalDepthIoRRoughness.uniforms)]),d=e.UniformsUtils.mergeNoClone([this.uniforms,e.UniformsUtils.clone(e._DeferredShaders.NormalDepth.uniforms)]),u=a,c=e.UniformsUtils.mergeNoClone([this.uniforms,e.UniformsUtils.clone(u.uniforms)]),f=e._mobileHighlight?r:n,m=e.UniformsUtils.mergeNoClone([this.uniforms,e.UniformsUtils.clone(f.uniforms)]),S=e._DeferredShaders.PickingFragment,C=e.UniformsUtils.mergeNoClone([this.uniforms,e.UniformsUtils.clone(S.uniforms)]),_=this.defines?this.defines:{};if(this.map&&this.alphaTest){_.USE_MAP_ALPHATEST=!0,_.ALPHATEST=this.alphaTest.toFixed(5),l.map.value=this.map,h.map.value=this.map,p.map.value=this.map,d.map.value=this.map,c.map.value=this.map,m.map.value=this.map,C.map.value=this.map;var M=this.map.offset,v=this.map.repeat;l.offsetAlphaMap.value=M,l.repeatAlphaMap.value=v,h.offsetAlphaMap.value=M,h.repeatAlphaMap.value=v,p.offsetAlphaMap.value=M,p.repeatAlphaMap.value=v,d.offsetAlphaMap.value=M,d.repeatAlphaMap.value=v,c.offsetAlphaMap.value=M,c.repeatAlphaMap.value=v,m.offsetAlphaMap.value=M,m.repeatAlphaMap.value=v,C.offsetAlphaMap.value=M,C.repeatAlphaMap.value=v}var g=new o({uniforms:l,vertexShaderPars:[this.vertexShaderPars,e._DeferredShaders.Normal.vertexShaderPars].join("\n"),vertexShaderBody:[this.vertexShaderBody,e._DeferredShaders.Normal.vertexShaderBody].join("\n"),fragmentShaderPars:e._DeferredShaders.Normal.fragmentShaderPars,fragmentShaderBody:e._DeferredShaders.Normal.fragmentShaderBody,shading:this.shading,defines:_,blending:e.NoBlending,side:this.side,enableClipPlanes:this.enableClipPlanes,enableOIT:!1});this._deferredMaterials[e.MaterialToUse.normalMaterial]=g;var P=new o({uniforms:h,vertexShaderPars:[this.vertexShaderPars,e._DeferredShaders.Depth.vertexShaderPars].join("\n"),vertexShaderBody:[this.vertexShaderBody,e._DeferredShaders.Depth.vertexShaderBody].join("\n"),fragmentShaderPars:e._DeferredShaders.Depth.fragmentShaderPars,fragmentShaderBody:e._DeferredShaders.Depth.fragmentShaderBody,defines:_,blending:e.NoBlending,side:this.side,enableClipPlanes:this.enableClipPlanes,enableOIT:!1});this._deferredMaterials[e.MaterialToUse.depthMaterial]=P;var D=new o({uniforms:h,vertexShaderPars:[this.vertexShaderPars,e._DeferredShaders.DepthRGBA.vertexShaderPars].join("\n"),vertexShaderBody:[this.vertexShaderBody,e._DeferredShaders.DepthRGBA.vertexShaderBody].join("\n"),fragmentShaderPars:e._DeferredShaders.DepthRGBA.fragmentShaderPars,fragmentShaderBody:e._DeferredShaders.DepthRGBA.fragmentShaderBody,defines:_,blending:e.NoBlending,side:this.side,enableClipPlanes:this.enableClipPlanes,enableOIT:!1});this._deferredMaterials[e.MaterialToUse.depthRGBAMaterial]=D;var T=new o({uniforms:p,vertexShaderPars:[this.vertexShaderPars,e._DeferredShaders.NormalDepthIoRRoughness.vertexShaderPars].join("\n"),vertexShaderBody:[this.vertexShaderBody,e._DeferredShaders.NormalDepthIoRRoughness.vertexShaderBody].join("\n"),fragmentShaderPars:e._DeferredShaders.NormalDepthIoRRoughness.fragmentShaderPars,fragmentShaderBody:e._DeferredShaders.NormalDepthIoRRoughness.fragmentShaderBody,shading:this.shading,defines:_,blending:e.NoBlending,side:this.side,enableClipPlanes:this.enableClipPlanes,enableOIT:!1});this._deferredMaterials[e.MaterialToUse.normalDepthIoRRoughnessMaterial]=T;var y=new o({uniforms:d,vertexShaderPars:[this.vertexShaderPars,e._DeferredShaders.NormalDepth.vertexShaderPars].join("\n"),vertexShaderBody:[this.vertexShaderBody,e._DeferredShaders.NormalDepth.vertexShaderBody].join("\n"),fragmentShaderPars:e._DeferredShaders.NormalDepth.fragmentShaderPars,fragmentShaderBody:e._DeferredShaders.NormalDepth.fragmentShaderBody,shading:this.shading,defines:_,blending:e.NoBlending,side:this.side,enableClipPlanes:this.enableClipPlanes});this._deferredMaterials[e.MaterialToUse.normalDepthMaterial]=y;var b=new o({uniforms:d,vertexShaderPars:[this.vertexShaderPars,e._DeferredShaders.DecalNormalStencilDepth.vertexShaderPars].join("\n"),vertexShaderBody:[this.vertexShaderBody,e._DeferredShaders.DecalNormalStencilDepth.vertexShaderBody].join("\n"),fragmentShaderPars:e._DeferredShaders.DecalNormalStencilDepth.fragmentShaderPars,fragmentShaderBody:e._DeferredShaders.DecalNormalStencilDepth.fragmentShaderBody,shading:this.shading,defines:_,blending:e.NoBlending,side:this.side,enableClipPlanes:this.enableClipPlanes});this._deferredMaterials[e.MaterialToUse.decalNormalStencilDepthMaterial]=b;var x=new o({uniforms:c,vertexShaderPars:[this.vertexShaderPars,u.vertexShaderPars].join("\n"),vertexShaderBody:[this.vertexShaderBody,u.vertexShaderBody].join("\n"),fragmentShaderPars:u.fragmentShaderPars,fragmentShaderBody:u.fragmentShaderBody,shading:this.shading,defines:_,blending:e.NoBlending,side:this.side,enableClipPlanes:this.enableClipPlanes,enableOIT:!1});this._deferredMaterials[e.MaterialToUse.shadowMapDepthMaterial]=x;var A=new o({uniforms:m,defines:_,vertexShaderPars:[this.vertexShaderPars,f.vertexShaderPars].join("\n"),vertexShaderBody:[this.vertexShaderBody,f.vertexShaderBody].join("\n"),fragmentShaderPars:f.fragmentShaderPars,fragmentShaderBody:f.fragmentShaderBody,blending:e.NoBlending,enableOIT:!1});A.side=e.DoubleSide,A.enableClipPlanes=this.enableClipPlanes,A.vertexColors=this.vertexColors,this._deferredMaterials[e.MaterialToUse.highlightMaterial]=A;var U=new o({uniforms:C,vertexShaderPars:[this.vertexShaderPars,S.vertexShaderPars].join("\n"),vertexShaderBody:[this.vertexShaderBody,S.vertexShaderBody].join("\n"),fragmentShaderPars:S.fragmentShaderPars,fragmentShaderBody:S.fragmentShaderBody,shading:this.shading,defines:_,blending:e.NoBlending,side:this.side,enableClipPlanes:this.enableClipPlanes,enableOIT:!1});if(U.uniforms.pickingColor={type:"c",value:new e.Color},U.wireframe=this.wireframe,U.vertexColors=this.vertexColors,this.isInstancingMaterial){var F=new o({uniforms:C,vertexShaderPars:[this.vertexShaderPars,S.vertexShaderPars,"varying vec3 vInstancePickingColor;"].join("\n"),vertexShaderBody:[this.vertexShaderBody,S.vertexShaderBody,e._DeferredShaders.Chunks.picking_instancing_vertex].join("\n"),fragmentShaderPars:[S.fragmentShaderPars,"varying vec3 vInstancePickingColor;"].join("\n"),fragmentShaderBody:[S.fragmentShaderBody,e._DeferredShaders.Chunks.picking_instancing_fragment].join("\n"),shading:this.shading,defines:_,blending:e.NoBlending,side:this.side,enableClipPlanes:this.enableClipPlanes,enableOIT:!1});F.wireframe=this.wireframe,F.vertexColors=this.vertexColors,this._deferredMaterials[e.MaterialToUse.pickingMaterialInstancing]=F}else this._deferredMaterials[e.MaterialToUse.pickingMaterialInstancing]=null;this._deferredMaterials[e.MaterialToUse.pickingMaterial]=U,this._deferredMaterials[e.MaterialToUse.pickingMaterial].refreshUniforms=this.refreshUniforms,this._deferredMaterials[e.MaterialToUse.normalMaterial].refreshUniforms=this.refreshUniforms,this._deferredMaterials[e.MaterialToUse.depthMaterial].refreshUniforms=this.refreshUniforms,this._deferredMaterials[e.MaterialToUse.depthRGBAMaterial].refreshUniforms=this.refreshUniforms,null!==this._deferredMaterials[e.MaterialToUse.pickingMaterialInstancing]&&(this._deferredMaterials[e.MaterialToUse.pickingMaterialInstancing].refreshUniforms=this.refreshUniforms),this.updateGenericDeferredMaterials(t)}}updateGenericDeferredMaterials(t){var s=this._deferredMaterials[e.MaterialToUse.normalMaterial];s.force=!0,s.wireframe=this.wireframe,s.vertexColors=this.vertexColors,s.attributes=Object.assign(s.attributes?s.attributes:{},this.attributes);var i=this._deferredMaterials[e.MaterialToUse.depthMaterial];i.force=!0,i.defines||(i.defines={}),i.wireframe=this.wireframe,i.vertexColors=this.vertexColors,i.attributes=Object.assign(i.attributes?i.attributes:{},this.attributes);var a=this._deferredMaterials[e.MaterialToUse.depthRGBAMaterial];a.force=!0,a.defines||(a.defines={}),a.wireframe=this.wireframe,a.vertexColors=this.vertexColors,a.attributes=Object.assign(a.attributes?a.attributes:{},this.attributes);var r=this._deferredMaterials[e.MaterialToUse.normalDepthIoRRoughnessMaterial];r.force=!0,r.wireframe=this.wireframe,r.vertexColors=this.vertexColors,r.attributes=Object.assign(r.attributes?r.attributes:{},this.attributes);var n=this._deferredMaterials[e.MaterialToUse.normalDepthMaterial];n.force=!0,n.wireframe=this.wireframe,n.vertexColors=this.vertexColors,n.attributes=Object.assign(n.attributes?n.attributes:{},this.attributes);var o=this._deferredMaterials[e.MaterialToUse.decalNormalStencilDepthMaterial];o.force=!0,o.wireframe=this.wireframe,o.vertexColors=this.vertexColors,o.attributes=Object.assign(o.attributes?o.attributes:{},this.attributes);var l=this._deferredMaterials[e.MaterialToUse.shadowMapDepthMaterial];l.force=!0,l.wireframe=this.wireframe,l.vertexColors=this.vertexColors,l.attributes=Object.assign(l.attributes?l.attributes:{},this.attributes);var h=this._deferredMaterials[e.MaterialToUse.transparentShadowMaterial];h&&(h.force=!0,h.wireframe=this.wireframe,h.vertexColors=this.vertexColors,h.attributes=Object.assign(h.attributes?h.attributes:{},this.attributes));var p=this._deferredMaterials[e.MaterialToUse.highlightMaterial];e._mobileHighlight&&(p.useBlending=!0,p.blending=e.CustomBlending,p.depthTest=!1,p.depthWrite=!1),p.vertexColors=this.vertexColors,p.attributes=Object.assign(p.attributes?p.attributes:{},this.attributes);var d=this._deferredMaterials[e.MaterialToUse.pickingMaterial],u=this._deferredMaterials[e.MaterialToUse.pickingMaterialInstancing];this.isInstancingMaterial&&u&&(u.vertexColors=this.vertexColors,u.attributes=Object.assign(u.attributes?u.attributes:{},this.attributes),u.force=!0,u.transparent=this.transparent),d.attributes=Object.assign(d.attributes?d.attributes:{},this.attributes),d.force=!0,this.backMaterial&&!this.backMaterial._deferredMaterialsInit&&(this.backMaterial.updateDeferredMaterials(),this._deferredMaterials[e.MaterialToUse.pickingMaterial]=this._deferredMaterials[e.MaterialToUse.pickingMaterial].clone(),this._deferredMaterials[e.MaterialToUse.pickingMaterial].backMaterial=this.backMaterial._deferredMaterials[e.MaterialToUse.pickingMaterial]),this instanceof e.ParticleBasicMaterial||(this._deferredMaterials[e.MaterialToUse.oitAccumMaterial]=this,this._deferredMaterials[e.MaterialToUse.oitRevealMaterial]=this),this._deferredMaterials[e.MaterialToUse.ZOnlyMaterial]=this.getZOnlyMaterial();for(var c=0;c<e.MaterialToUse.totalMaterial;c++){var f=this._deferredMaterials[c];null!==f&&(f.isBackMaterial=this.isBackMaterial)}this._deferredMaterialsInit=!0}}return o});