define("DS/MPFMyCartSummary/MyCartSummaryFactory",["DS/MPFServices/MarketplaceServices","DS/MPFConnector/MarketplaceConnector","DS/MPFModelFactory/MPFFactoriesV2","DS/MPFPersonModel/PersonFactory","DS/MPFPspModel/PspFactory","DS/MPFCountryModel/CountryFactory","DS/MPFClickAndBuyComponent/ClickAndBuyStateMachine","DS/MPFClickAndBuyComponent/ClickAndBuyComponent"],(e,t,r,o,c,a,s,n)=>{"use strict";return class{static async createMyCartSummary({service:i=e.CLICK_AND_BUY}={}){const[y,P]=await Promise.all([t.fetchPromise({service:e.CLICK_AND_BUY}),t.fetchPromise({service:e.MY_3D_EXPERIENCE,backend:e.MY_3D_EXPERIENCE})]),M=r.getInstance(y),[C,l,p,F,m,S,E]=await M.getFactories([r.Types.PERSON,r.Types.COUNTRY,r.Types.PORTFOLIO,r.Types.TENANT,r.Types.PSP,r.Types.CART,r.Types.CART_ITEM]),T=C.createModel(o.Types.ME),u=l.createCollection(a.Types.SP_PUBLIC_OPENED_COUNTRIES),_=m.createModel(c.Types.PARAM_PSP);await Promise.all([this._fetchMeWithoutError(T),u.fetchPromise()]);const d=new s({page:s.Pages.CART,cookieKey:"swymlang",service:i,me:T,countries:u}),D=new n({stateMachine:d,psp:_,cartFactory:S,cartItemFactory:E,portfolioFactory:p,tenantFactory:F,countries:u,service:i,my3dExpConnector:P});return await D.load(),D}static _fetchMeWithoutError(e){return new Promise((t,r)=>e.fetch({onComplete:t,onFailure:r,onPassportError:e=>{console.error(e),t()}}))}}});