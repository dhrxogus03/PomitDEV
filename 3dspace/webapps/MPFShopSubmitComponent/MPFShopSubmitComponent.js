define("DS/MPFShopSubmitComponent/ShopSubmitComponent",["UWA/Class/View","DS/UIKIT/Input/Button","DS/UIKIT/Modal","DS/MPFShopModel/ShopModel","DS/MPFShopModel/ShopServiceModel","DS/MPFShopModel/ShopSubmitor","DS/MPFServices/ObjectService","i18n!DS/MPFShopSubmitComponent/assets/nls/ShopSubmitComponent"],function(t,o,e,i,n,s,h,a){"use strict";return t.extend({className:"mpf-shop-submit",setup:function(t={}){h.requiredOfPrototype(t.shop,i,"options.shop must be a ShopModel"),h.requiredOfPrototype(t.shopService,n,"options.shopService must be a ShopServiceModel"),this.shop=t.shop,this.shopService=t.shopService,this.confirmationModal=this._createConfirmationModal(),this.submitLabButton=this._createSubmitLabButton()},render:function(){let t;return this._canShopBeSumitted()&&(t=[this.confirmationModal,this.submitLabButton]),this.container.setContent(t),this},_canShopBeSumitted:function(){const t=!this.shop.isInternal(),o=this.shop.getState()===i.States.DRAFT,e=this.shopService.getState()===n.States.DRAFT;return t&&o&&e},destroy:function(){this.confirmationModal.destroy(),this.confirmationModal=null,this.submitLabButton=null,this.shop=null,this.shopService=null,this._parent(),this.container=null},_createConfirmationModal:function(){const t=new o({className:"warning",value:a.get("submitShop")}),i=new o({value:a.get("cancel")}),n=new e({closable:!0,header:"<h4>"+a.get("confirmShopSubmit")+"</h4>",body:"<p>"+a.get("confirmShopSubmitMessage")+"</p>",footer:[t,i]});return t.addEvent("onClick",this._onSubmit.bind(this)),i.addEvent("onClick",n.hide.bind(n)),n},_createSubmitLabButton:function(){return new o({className:"warning",icon:"attention",value:a.get("submitShop"),events:{onClick:this._showConfirmationModal.bind(this)}})},_showConfirmationModal:function(){return this.confirmationModal.show()},_hideConfirmationModal:function(){return this.confirmationModal.hide()},_onSubmit:function(){return s.submit(this.shop,this.shopService).then(this._hideConfirmationModal.bind(this)).catch(function(t){console.log(t)})},_setModificationRequestStatusToShopService:function(){return this.shopService.savePromise({[n.Fields.MODIFICATION_REQUEST_STATUS]:n.RequestStatus.TO_BE_VALIDATED},{patch:!0})},_setShopSubmitted:function(){return this.shop.setState(i.States.SUBMITTED),this.shop.savePromise()},_setShopServiceSubmitted:function(){return this.shopService.savePromise({[n.Fields.STATE]:n.States.SUBMITTED},{patch:!0})}})});