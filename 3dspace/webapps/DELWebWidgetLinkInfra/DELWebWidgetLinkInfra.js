define("DS/DELWebWidgetLinkInfra/WidgetLinkProxyController",["UWA/Core","UWA/Class"],function(t,e){"use strict";const i="Apply",n="Remove";return e.extend({init:function(t){if(this.proxyEventsCollection=[],this.proxy=t.proxy,this.NGFUXId=t.NGFUXId,this.proxy&&!this.NGFUXId)throw new Error("Invalid Input, attribute NGFUXId is mandatory when proxy is provided");this.proxy&&this.NGFUXId&&(this._addToLinkEvents([{eventName:"DS/DELWebWidgetLinkInfra/ApplyFilter",callback:this._updateFilter.bind(this,i)},{eventName:"DS/DELWebWidgetLinkInfra/RemoveFilter",callback:this._updateFilter.bind(this,n)}]),this.proxyEventsCollection=[{eventName:"ApplyNGFilter",callback:this._onProxyApplyNGFilter.bind(this)}])},_onUnLink:function(){this._removeProxyListeners(),this._parent()},_onLink:function(){this._attachProxyListeners(),this._parent()},_attachProxyListeners:function(){this.proxyEventsCollection.forEach(t=>{this.proxy.addEvent(t.eventName,t.callback,this)})},_removeProxyListeners:function(){this.proxyEventsCollection.forEach(t=>{this.proxy.removeEvent(t.eventName,t.callback)})},_onProxyApplyNGFilter:async function(t={}){var e,i,n,r,o=this,s=t.empty?"DS/DELWebWidgetLinkInfra/RemoveFilter":"DS/DELWebWidgetLinkInfra/ApplyFilter";t&&t.filterRootIds?(i=t.filterRootIds[0],0===!(e=await this.getPublicFilterSpecification(i)).status?(o.logger.log(e),o.logger.error(`Unable to share the proxy as get the public filter specification for root ${i} failed`)):(n=s,r={publicFilterSpec:e},!0!==o._lockEvent&&(o.logger.debug(`${n} published with ${r}`),o._publishLinkEvent(n,r)),o._lockEvent=!1)):o.logger.warn("ApplyNGFilter Event invoked without any params")},_updateFilter:function(t,e={}){let i=this;if(e.publicFilterSpec){let r,o,{publicFilterSpec:s}=e,a=s.publicSpec,l=i.proxy,h=i.NGFUXId;if(a&&a.referencedObject&&a.referencedObject.identifier){if(o=a.referencedObject.identifier,i.logger.debug(`Update Filter for ${t} with NGFUXId - ${h} for ${i.matchKeys} in Filter Controller`),t===n){const t=`onSetFilter_Link_Infra_${h}_${o}`;l.addEvent(t,function(e){i.logger.debug(`Event ${t} received with ${JSON.stringify(e)}`),l.removeEvent(t),i.logger.debug(`Remove Filter with NGFUXId - ${h} for ${i.matchKeys} in Filter Controller`),l.dispatchEvent("ApplyNGFilter",{empty:!0,appId:"",widget:widget.id,CVQueryV2:{filter:{or:{filters:[]}}},filterRootIds:[o]})}),r={rootID:o,specification:a,applyFilter:0,displayFilter:0,eventName:t}}else i.logger.debug(`Apply Filter with NGFUXId - ${h} for ${i.matchKeys} in Filter Controller`),r={rootID:o,specification:a,applyFilter:1,displayFilter:0};l.removeRoot(o),i._lockEvent=!0,l.setPublicFilterSpecification(r)}}i._parent(t,e={})},hasFilter:function(t){let e=!1;if(this.proxy){e=(this.proxy.hasFilter(t)||{}).hasFilter}return e},getPublicFilterSpecification:async function(t){let e,i=this.proxy;if(this.logger.debug(`getPublicFilter with rootId - ${t}`),i){const n=`onGetFilter_Link_Infra_${this.NGFUXId}_${t}`;e=await new Promise(e=>{i.addEvent(n,function(t={}){this.logger.debug(`${n} received with params ${JSON.stringify(t)}`),i.removeEvent(n),e(t)}.bind(this)),i.getPublicFilterSpecification({rootId:t,widgetId:widget.id,NGFUXId:this.NGFUXId,eventName:n})})}return e},toJSON:function(t){t.NGFUXId=this.NGFUXId,this._parent(t)}})}),define("DS/DELWebWidgetLinkInfra/WidgetLinkContentController",["UWA/Core","UWA/Class"],function(t,e){"use strict";return e.extend({init:function(t){this.shareContent=t.shareContent,this.content={items:[]},!0===this.shareContent&&this._addToLinkEvents([{eventName:"DS/DELWebWidgetLinkInfra/SyncContent",callback:this._onSyncContent.bind(this)},{eventName:"DS/DELWebWidgetLinkInfra/AddRoots",callback:this.addRoots.bind(this)},{eventName:"DS/DELWebWidgetLinkInfra/RemoveRoots",callback:this.removeRoots.bind(this)},{eventName:"DS/DELWebWidgetLinkInfra/RemoveAll",callback:this.removeAll.bind(this)}]),this._parent(t)},_onLink:function(){setTimeout(async()=>{let t=this.content.items.map(async t=>{let e;if(this.hasFilter(t.id)){let i=(e=await this.getPublicFilterSpecification(t.id)).publicSpec;i&&(t.publicFilterSpec={specification:i})}});await Promise.all(t),this._publishLinkEvent("DS/DELWebWidgetLinkInfra/SyncContent",{items:this.content.items,clear:!0})},0),this._parent()},_onUnLink:function(){this._parent()},_onSyncContent:function(t={}){this.addRoots(t),this._parent(t)},addRoots:function(e={}){let i=[],n=e.dispatchEvent;if(!t.is(e.items,"array"))throw new Error("Unable to add roots, items property is missing or not valid");return e.items.forEach(t=>{t.id?this.content.items.find(e=>e.id===t.id)?this.logger.warn("Root already exists, no action taken"):i.push(t):this.logger.error("Unable to add root,id property is missing")}),this.content.items=[...this.content.items,...i],e.srcControllerInfo||this._publishLinkEvent("DS/DELWebWidgetLinkInfra/AddRoots",{items:i}),!1!==n&&this.dispatchEvent("onAddRoots",{items:i,clear:e.clear}),i},removeRoots:function(e={}){let i=[],n=e.dispatchEvent;if(!t.is(e.items,"array"))throw new Error("Unable to remove roots, items property is missing or not valid");return e.items.forEach(t=>{t.id?i.push(t):this.logger.error("Unable to remove root,id property is missing")}),this.content.items=this.content.items.filter(t=>!i.some(e=>e.id===t.id)),e.srcControllerInfo||this._publishLinkEvent("DS/DELWebWidgetLinkInfra/RemoveRoots",{items:i}),!1!==n&&this.dispatchEvent("onRemoveRoots",{items:i}),i},removeAll:function(t={}){let e=t.dispatchEvent;this.content.items=[],t.srcControllerInfo||this._publishLinkEvent("DS/DELWebWidgetLinkInfra/RemoveAll"),!1!==e&&this.dispatchEvent("onRemoveAll")},toJSON:function(t){t.shareContent=this.shareContent,t.content=this.content,this._parent(t)}})}),define("DS/DELWebWidgetLinkInfra/WidgetLinkInfraController",["UWA/Core","UWA/Class","DS/Logger/Logger","DS/DELWebWidgetLinkInfra/WidgetLinkContentController","DS/DELWebWidgetLinkInfra/WidgetLinkProxyController"],function(t,e,i,n,r){"use strict";const o="link",s="unlink";return e.extend(e.Events,r,n,{logger:i.getLogger("DS/DELWebWidgetLinkInfra/WidgetLinkInfraController"),init:function(e){if(!e||!e.matchKeys)throw new Error("Invalid Input, attribute matchKeys is mandatory");this.matchKeys=e.matchKeys,this.restrictKeys=e.restrictKeys||[],this.shareContent=!t.is(e.shareContent)||e.shareContent,this.linkEventsCollection=[],window.__karma__?this.logger.warn("We are in karma test environment, thus preventing the use of WidgetLink."):!0===this.shareContent&&(this._initWidgetLinkPromise=new Promise(t=>{require(["DS/WidgetLink/WidgetLink"],e=>{this._widgetLink=e.get(widget),this._widgetLink.addEventListener(o,this._onLink.bind(this)),this._widgetLink.addEventListener(s,this._onUnLink.bind(this));let i=this._widgetLink.getLinked();i&&i.length>0&&this._onLink(),t()})})),this._parent(e)},_addToLinkEvents:function(e){t.is(e,"array")&&e.forEach(function(t){if(!t.eventName||!t.callback)throw new Error("Unable to add link events, properties eventName and callback are mandatory");this.linkEventsCollection.push(t)}.bind(this))},_onLink:function(){let t=this;this.linkEventsCollection.forEach(e=>{this._widgetLink.subscribe(e.eventName,function(i){t.logger.debug(`Event ${e.eventName} received with params ${JSON.stringify(i)}`),t._isCompatible(i)&&e.callback?e.callback(i):t.logger.debug(`Controller ${JSON.stringify(i)} is not compatible with ${JSON.stringify(t)}`)})}),this._parent()},_onUnLink:function(){this.linkEventsCollection.forEach(t=>{this._widgetLink.unsubscribe(t.eventName)}),this._parent()},_isCompatible:function(t={}){let e=(t.srcControllerInfo||{}).matchKeys||[],i=this.matchKeys.some(t=>e.includes(t)),n=this.restrictKeys.some(t=>e.includes(t));return i&&!n},_publishLinkEvent:function(t,e={}){let i={...e,srcControllerInfo:this.toJSON(),metadata:{widgetId:widget.id,appId:widget.getValue("appId")}};this._initWidgetLinkPromise&&this._initWidgetLinkPromise.then(()=>{this.logger.debug(`Event ${t} published with params ${JSON.stringify(i)}`),this._widgetLink.publish(t,i)})},toJSON:function(){let t={matchKeys:this.matchKeys,restrictKeys:this.restrictKeys,shareContent:this.shareContent};return this._parent(t),t}})});