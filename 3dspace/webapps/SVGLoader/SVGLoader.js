define("DS/SVGLoader/SVGLineMaterial",["DS/Visualization/ThreeJS_DS","DS/ShaderBuilders/ShaderBuilder","DS/ShaderBuilders/ShaderUtils/UniformUtils","DS/ShaderBuilders/ShaderUtils/ShaderInOutUtils","DS/ShaderBuilders/ShaderUtils/FunctionUtils","DS/ShaderBuilders/ShaderUtils/TypeUtils"],function(t,e,n,i,r,a){const o="",s=r.ParameterUtils,l=t=>s.parameterF(t),c=t=>s.parameterInOutF(t),d=t=>s.parameter("b",t),u=t=>s.parameterV2(t),f=t=>s.parameterV4(t),h=(t,e,n)=>r.FunctionHandler.declareFunction(t,e,n),p=(t,e,n)=>r.FunctionHandler.callFunction(t,e,n),g=t=>n.addUniform(t),v=t=>{var e={uniformName:t};return n.getUniform(e)},S=t=>{var e={uniformName:t};return n.getGlobalUniform(e)},m=(t=null)=>{var e={name:t};return a.bool(e)},x=(t=null)=>{var e={name:t};return a.int(e)},y=(t=null)=>{var e={name:t};return a.float(e)},A=(t=null)=>{var e={name:t};return a.vec2(e)},b=(t=null,e=0)=>{var n={name:t,size:e};return a.vec3(n)},C=(t=null,e=0)=>{var n={name:t,size:e};return a.vec4(n)},_=t=>i.addVarying(t),D=t=>i.getVarying(t,i.ShaderStages.in),P=t=>i.getVarying(t,i.ShaderStages.out),$=t=>i.getBuiltin(t,i.ShaderStages.out);var V=function(e){return`\n                    ${g({uniformName:"pixelSize",uniformType:"v2"})} \n                    ${h("computeWorldSizeToPixel","f",[])}{\n\t\t\t\t\t   return abs(${S("projectionMatrix")}[0][0]/${$("position")}.w)/${v("pixelSize")}.x;\n\t\t\t\t\t}\n\n                    ${_({varyingName:"vPointCurr",varyingType:"v2"})}\n                    ${_({varyingName:"fadeAway",varyingType:"f"})}\n\n\t\t\t\t\t${e.dashedLine?`\n                        ${_({varyingName:"vLineDistance",varyingType:"v2"})}\n\t\t\t\t\t\t${e.wideLine?`\n                            ${_({varyingName:"vPointNextPrec",varyingType:"v4"})}\n                            ${_({varyingName:"vLineDistanceAltResetSecondDist",varyingType:"v2"})}\n                            ${_({varyingName:"vConstantNextPrec",varyingType:"v4"})}\n\t\t\t\t\t\t\t`:o}\n\t\t\t\t\t\t`:o}\n\t\t\t\t\t${e.wideLine?`\n\t\t\t\t\t\t${t._ShaderChunk.PDSFX_halfWidth_pars_vertex_fragment(e)}\n                        ${g({uniformName:"miterLimit",uniformType:"f"})} \n                        ${_({varyingName:"vConstantCurr",varyingType:"v2"})}\n\n                        ${h("isNull","b",[l("x")])}{\n\t\t\t\t\t\t\treturn abs(x) < 1e-6;\n\t\t\t\t\t\t}\n\n                        ${h("cNormalize","v2",[u("v")])}{\n\t\t\t\t\t\t\t${y("len")}  = length(v);\n\t\t\t\t\t\t\tif (!${p("isNull","b",[l("len")])}) {\n\t\t\t\t\t\t\t\treturn v/len;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ${A()}(0.0);\n\t\t\t\t\t\t}\n\n                        ${h("cNormalize","v3",[(t=>s.parameterV3(t))("v")])}{\n\t\t\t\t\t\t\t${y("len")}  = length(v);\n\t\t\t\t\t\t\tif (!${p("isNull","b",[l("len")])}) {\n\t\t\t\t\t\t\t\treturn v/len;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ${b()}(0.0);\n\t\t\t\t\t\t}\n\n                        ${h("cNormalize","v4",[f("v")])}{\n\t\t\t\t\t\t\t${y("len")}  = length(v);\n\t\t\t\t\t\t\tif (!${p("isNull","b",[l("len")])}) {\n\t\t\t\t\t\t\t\treturn v/len;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ${C()}(0.0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t`:o}\n\t\t\t\t\t${"round"===e.linecap?`\n                        ${_({varyingName:"infosCenterCap",varyingType:"v4"})}\n                        ${_({varyingName:"centerLeftRight",varyingType:"v4"})}\n\t\t\t\t\t\t`:o}\n\t\t\t\t\t${"round"===e.linejoin?`\n                        ${_({varyingName:"centerJoin",varyingType:"v4"})}\n                        ${_({varyingName:"centerRightJoin",varyingType:"v4"})}\n                        ${_({varyingName:"centerLeftJoin",varyingType:"v4"})}\n\t\t\t\t\t\t`:o}\n\t\t\t\t`},w=function(e){return`\n\t\t\t\t\t${e.dashedLine?`\n\t\t\t\t\t\t${y("modelMatrixScaleX")}  = length(modelMatrix[0]);\n                        ${e.defaultInstancing?"\n                            modelMatrixScaleX *= length(multipliedDefaultInstancingMatrix[0]);\n                            ":o}\n\t\t\t\t\t\t${e.fixedSize?"modelMatrixScaleX *= simpleNodeData.fixedSizeScale;":o}\n\t\t\t\t\t\t${P("vLineDistance")} = modelMatrixScaleX* lineDistance;\n\t\t\t\t\t\t`:o}\n\t\t\t\t\t${P("vPointCurr")} = position_.xy;\n\t\t\t\t\t${e.wideLine?`\n\t\t\t\t\t\t${A("eps")}  = ${A()}(1e-6);\n\t\t\t\t\t\t${m("bPrecCurr")}  = !all(lessThan(abs(position_.xy - previousPos.xy), eps));\n\t\t\t\t\t\t${m("bCurrNext")}  = !all(lessThan(abs(followingPos.xy - position_.xy), eps));\n\t\t\t\t\t\t${y("offset")}   = ${p("getHalfWidth","f",[])};\n\t\t\t\t\t\t${A("pos")} ;\n                        ${A("posPrecCurr")} ;\n                        ${A("posCurrNext")} ;\n\t\t\t\t\t\t${A("dirPrecCurr")} ;\n                        ${A("dirCurrNext")} ;\n\t\t\t\t\t\t${y("orientation")}   = sign(sideExtrusion);\n\t\t\t\t\t\t${m("parity")}  = mod(sideExtrusion,2.0) < 0.5;\n\t\t\t\t\t\t${P("vConstantCurr")} = position_.xy;\n\t\t\t\t\t\t${y("worldSizeToPixel")}   = ${p("computeWorldSizeToPixel","f",[])};\n\t\t\t\t\t\t${y("pixelToWorld")}   = 1.0/worldSizeToPixel;\n\t\t\t\t\t\t${y("distValue")}  = (0.5*pixelToWorld - ${p("getHalfWidth","f",[])})/(0.5*pixelToWorld);\n\t\t\t\t\t\tif (distValue > 0.0) {\n\t\t\t\t\t\t\toffset = 0.5*pixelToWorld;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t${P("fadeAway")} = 1.0-smoothstep(0.65,1.0,distValue);\n\t\t\t\t\t\tif (bPrecCurr){\n\t\t\t\t\t\t\tdirPrecCurr = position_.xy - previousPos.xy;\n\t\t\t\t\t\t\tdirPrecCurr = ${p("cNormalize","v2",[u("dirPrecCurr")])};\n\t\t\t\t\t\t\tposPrecCurr = position_.xy + offset * orientation * ${A()}(-dirPrecCurr.y, dirPrecCurr.x);\n\t\t\t\t\t\t} else if (bCurrNext) {\n\t\t\t\t\t\t\tdirPrecCurr = position_.xy - followingPos.xy;\n\t\t\t\t\t\t\tdirPrecCurr = ${p("cNormalize","v2",[u("dirPrecCurr")])};\n\t\t\t\t\t\t\tposPrecCurr = position_.xy + offset * dirPrecCurr.xy;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bCurrNext){\n\t\t\t\t\t\t\tdirCurrNext = followingPos.xy - position_.xy;\n\t\t\t\t\t\t\tdirCurrNext = ${p("cNormalize","v2",[u("dirCurrNext")])};\n\t\t\t\t\t\t\tposCurrNext = position_.xy + offset * orientation * ${A()}(-dirCurrNext.y, dirCurrNext.x);\n\t\t\t\t\t\t} else if (bPrecCurr) {\n\t\t\t\t\t\t\tdirCurrNext = position_.xy - previousPos.xy;\n\t\t\t\t\t\t\tdirCurrNext = ${p("cNormalize","v2",[u("dirCurrNext")])};\n\t\t\t\t\t\t\tposCurrNext = position_.xy + offset * dirCurrNext.xy;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t${A("dir")}  = ${p("cNormalize","v2",[u("dirCurrNext - dirPrecCurr")])};\n\t\t\t\t\t\t${A("nDir")} = ${A()}(-dir.y, dir.x);\n\t\t\t\t\t\tif ( bPrecCurr && bCurrNext){\n\t\t\t\t\t\t\tif (${p("isNull","b",[l("length(dir)")])}){\n\t\t\t\t\t\t\t\tdir = ${A()}(-dirCurrNext.y, dirCurrNext.x);\n\t\t\t\t\t\t\t\tnDir = ${A()}(-dir.y, dir.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t${y("sinAlpha")}  = dir.y * dirPrecCurr.x - dir.x * dirPrecCurr.y;\n\t\t\t\t\t\t\t${y("alpha")}  = asin(abs(sinAlpha));\n\t\t\t\t\t\t\t${"round"===e.linejoin?`${m("angleTest")}  = alpha < radians(45.0);`:`${m("angleTest")} = true;`}\n\t\t\t\t\t\t\tif (sign(sinAlpha) == -orientation) {\n\t\t\t\t\t\t\t\tif (angleTest) {\n\t\t\t\t\t\t\t\t\t${y("axisCorrection")}  = 1.0 / abs(cos(alpha));\n\t\t\t\t\t\t\t\t\t${"bevel"===e.linejoin?"\n\t\t\t\t\t\t\t\t\t\tif (parity){\n\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy - sign(sinAlpha) * offset*axisCorrection * nDir;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy + sign(sinAlpha) *offset*axisCorrection * nDir;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t":`\n\t\t\t\t\t\t\t\t\t\t${"miter"===e.linejoin?`\n\t\t\t\t\t\t\t\t\t\t\t${y("ratio")}  = 1.0/abs(sinAlpha);\n\t\t\t\t\t\t\t\t\t\t\tif (${v("miterLimit")} < 1.0 || ratio < ${v("miterLimit")}) {\n\t\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy - offset * ratio * dir;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (parity){\n\t\t\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy - sign(sinAlpha) * offset*axisCorrection * nDir;\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy + sign(sinAlpha) *offset*axisCorrection * nDir;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t`:`\n\t\t\t\t\t\t\t\t\t\t\t${"miterclip"===e.linejoin?`\n\t\t\t\t\t\t\t\t\t\t\t\t${y("ratio")}  = 1.0/abs(sinAlpha);\n\t\t\t\t\t\t\t\t\t\t\t\tif (${v("miterLimit")} < 1.0 || ratio < ${v("miterLimit")}) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy - offset * ratio * dir;\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t${y("dist")}  = offset * ${v("miterLimit")};\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (parity){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy - sign(sinAlpha) * offset*axisCorrection * nDir;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpos -= dist * dirCurrNext;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy + sign(sinAlpha) *offset*axisCorrection * nDir;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpos += dist * dirPrecCurr;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t`:`\n\t\t\t\t\t\t\t\t\t\t\t\t${"round"===e.linejoin?`\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (parity){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy - sign(sinAlpha) * offset * ${A()}(-dirCurrNext.y,dirCurrNext.x);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpos -= offset * dirCurrNext;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpos = position_.xy - sign(sinAlpha) *offset * ${A()}(-dirPrecCurr.y,dirPrecCurr.x);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpos += offset * dirPrecCurr;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t`:o}\n\t\t\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t${y("dist")}  = offset/ sinAlpha;\n\t\t\t\t\t\t\t\t\tpos = position_.xy - dir * abs(dist) ;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t${y("distPoints")}  = min(distance(position_.xy, previousPos.xy), distance(position_.xy, followingPos.xy)) + offset;\n\t\t\t\t\t\t\t\t${y("dist")}  = offset/ sinAlpha;\n\t\t\t\t\t\t\t\tif (max(distPoints, offset) < abs(dist)){\n\t\t\t\t\t\t\t\t\tdist = max(distPoints - offset, offset)*sign(sinAlpha);\n\t\t\t\t\t\t\t\t\tif (alpha < radians(22.5)){\n\t\t\t\t\t\t\t\t\t\tif (parity){\n\t\t\t\t\t\t\t\t\t\t\tpos = posCurrNext + dist * dirCurrNext*orientation;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tpos = posPrecCurr - dist * dirPrecCurr *orientation;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpos = position_.xy + dir * max(distPoints, offset);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tpos = position_.xy + dir * abs(dist) ;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(bPrecCurr || bCurrNext) {\n\t\t\t\t\t\t\t${"butt"===e.linecap?`pos = position_.xy + offset * ${A()}(-dirCurrNext.y, dirCurrNext.x)*orientation;`:"pos = (posCurrNext - position_.xy)  + posPrecCurr;"}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpos = position_.xy + offset;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t${P("vPointCurr")} = pos.xy;\n\n\t\t\t\t\t\t${"round"===e.linecap?`\n\t\t\t\t\t\t\tif (!bPrecCurr) {\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.x = position_.x;\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.y = position_.y;\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.z = position_.x;\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.w = position_.y;\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.z = followingPos.x;\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.w = followingPos.y;\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.x = -${p("getHalfWidth","f",[])};\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.y = 1.0;\n\t\t\t\t\t\t\t} else if (!bCurrNext) {\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.x = previousPos.x;\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.y = previousPos.y;\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.z = previousPos.x;\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.w = previousPos.y;\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.z = position_.x;\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.w = position_.y;\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.x = length(position_.xy-previousPos.xy) + ${p("getHalfWidth","f",[])};\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.y = 1.0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.x = previousPos.x;\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.y = previousPos.y;\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.z = position_.x;\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.w = position_.y;\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.z = followingPos.x;\n\t\t\t\t\t\t\t\t${P("centerLeftRight")}.w = followingPos.y;\n\t\t\t\t\t\t\t\tif (parity) {\n\t\t\t\t\t\t\t\t\t${P("infosCenterCap")}.x = dot(pos.xy - position_.xy, dirCurrNext);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t${P("infosCenterCap")}.x = length(position_.xy - previousPos.xy) + dot(pos.xy - position_.xy, dirPrecCurr);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t${P("infosCenterCap")}.y = 0.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t`:o}\n\n\t\t\t\t\t\t${"round"===e.linejoin?`\n\t\t\t\t\t\t\t${P("centerLeftJoin")} = ${C()}(0.0);\n\t\t\t\t\t\t\t${P("centerRightJoin")} = ${C()}(0.0);\n\t\t\t\t\t\t\t${P("centerJoin")} = ${C()}(0.0);\n\t\t\t\t\t\t\tif (!bPrecCurr) {\n\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.x = followingPos.x;\n\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.y = followingPos.y;\n\t\t\t\t\t\t\t\t${P("centerJoin")}.x = position_.x;\n\t\t\t\t\t\t\t\t${P("centerJoin")}.y = position_.y;\n\t\t\t\t\t\t\t\t${P("centerRightJoin")}.x = followingPos.x;\n\t\t\t\t\t\t\t\t${P("centerRightJoin")}.y = followingPos.y;\n\t\t\t\t\t\t\t\t${P("centerRightJoin")}.z = dirCurrNext.x;\n\t\t\t\t\t\t\t\t${P("centerRightJoin")}.w = dirCurrNext.y;\n\t\t\t\t\t\t\t} else if (!bCurrNext) {\n\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.x = previousPos.x;\n\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.y = previousPos.y;\n\t\t\t\t\t\t\t\t${P("centerJoin")}.x = position_.x;\n\t\t\t\t\t\t\t\t${P("centerJoin")}.y = position_.y;\n\t\t\t\t\t\t\t\t${P("centerRightJoin")}.x = previousPos.x;\n\t\t\t\t\t\t\t\t${P("centerRightJoin")}.y = previousPos.y;\n\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.z = -dirPrecCurr.x;\n\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.w = -dirPrecCurr.y;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (parity) {\n\t\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.x = position_.x;\n\t\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.y = position_.y;\n\t\t\t\t\t\t\t\t\t${P("centerJoin")}.x = position_.x;\n\t\t\t\t\t\t\t\t\t${P("centerJoin")}.y = position_.y;\n\t\t\t\t\t\t\t\t\t${P("centerRightJoin")}.x = followingPos.x;\n\t\t\t\t\t\t\t\t\t${P("centerRightJoin")}.y = followingPos.y;\n\t\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.z = -dirCurrNext.x;\n\t\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.w = -dirCurrNext.y;\n\t\t\t\t\t\t\t\t\t${P("centerRightJoin")}.z = dirCurrNext.x;\n\t\t\t\t\t\t\t\t\t${P("centerRightJoin")}.w = dirCurrNext.y;\n\t\t\t\t\t\t\t\t\t${P("centerJoin")}.z = -dir.x;\n\t\t\t\t\t\t\t\t\t${P("centerJoin")}.w = -dir.y;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.x = previousPos.x;\n\t\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.y = previousPos.y;\n\t\t\t\t\t\t\t\t\t${P("centerJoin")}.x = position_.x;\n\t\t\t\t\t\t\t\t\t${P("centerJoin")}.y = position_.y;\n\t\t\t\t\t\t\t\t\t${P("centerRightJoin")}.x = position_.x;\n\t\t\t\t\t\t\t\t\t${P("centerRightJoin")}.y = position_.y;\n\t\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.z = -dirPrecCurr.x;\n\t\t\t\t\t\t\t\t\t${P("centerLeftJoin")}.w = -dirPrecCurr.y;\n\t\t\t\t\t\t\t\t\t${P("centerRightJoin")}.z = dirPrecCurr.x;\n\t\t\t\t\t\t\t\t\t${P("centerRightJoin")}.w = dirPrecCurr.y;\n\t\t\t\t\t\t\t\t\t${P("centerJoin")}.z = -dir.x;\n\t\t\t\t\t\t\t\t\t${P("centerJoin")}.w = -dir.y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t`:o}\n\n\t\t\t\t\t\t${e.dashedLine?`\n\t\t\t\t\t\t\t${P("vLineDistanceAltResetSecondDist")}.x = ${P("vLineDistance")}.x;\n\t\t\t\t\t\t\t${P("vConstantNextPrec")}.x = followingPos.x;\n\t\t\t\t\t\t\t${P("vConstantNextPrec")}.y = followingPos.y;\n\t\t\t\t\t\t\t${P("vConstantNextPrec")}.z = previousPos.x;\n\t\t\t\t\t\t\t${P("vConstantNextPrec")}.w = previousPos.y;\n\n\t\t\t\t\t\t\t${P("vLineDistanceAltResetSecondDist")}.y = 0.0;\n\t\t\t\t\t\t\tif (!parity){\n\t\t\t\t\t\t\t\t${P("vLineDistanceAltResetSecondDist")}.x = ${P("vLineDistance")}.y;\n\t\t\t\t\t\t\t\t${P("vPointNextPrec")}.z = previousPos.x;\n\t\t\t\t\t\t\t\t${P("vPointNextPrec")}.w = previousPos.y;\n\t\t\t\t\t\t\t\t${P("vPointNextPrec")}.x = position_.x;\n\t\t\t\t\t\t\t\t${P("vPointNextPrec")}.y = position_.y;\n\t\t\t\t\t\t\t\t${P("vLineDistance")}.x = lineDistance.x* modelMatrixScaleX;\n\t\t\t\t\t\t\t\t${P("vLineDistance")}.y = lineDistance.y* modelMatrixScaleX;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t${P("vLineDistanceAltResetSecondDist")}.x = ${P("vLineDistance")}.x;\n\t\t\t\t\t\t\t\t${P("vPointNextPrec")}.z = position_.x;\n\t\t\t\t\t\t\t\t${P("vPointNextPrec")}.w = position_.y;\n\t\t\t\t\t\t\t\t${P("vPointNextPrec")}.x = followingPos.x;\n\t\t\t\t\t\t\t\t${P("vPointNextPrec")}.y = followingPos.y;\n\t\t\t\t\t\t\t\t${P("vLineDistance")}.x = lineDistance.x* modelMatrixScaleX;\n\t\t\t\t\t\t\t\t${P("vLineDistance")}.y = lineDistance.y* modelMatrixScaleX;\n\t\t\t\t\t\t\t\tif (abs(lineDistance.x - lineDistance.y) < 1e-6) {\n\t\t\t\t\t\t\t\t\t${P("vLineDistanceAltResetSecondDist")}.y = 1.0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t`:o}\n\n\t\t\t\t\t\t${t._DefaultShaderChunk.getModelViewTransformationChunk("mvPosition","vec4(pos.xy,position_.z,1.0)",e)}\n\t\t\t\t\t\t${$("position")} = ${S("projectionMatrix")} * mvPosition;\n\t\t\t\t\t\t`:o}\n\t\t\t\t`},N=function(e){return`\t\t\t\t\n\n                    ${_({varyingName:"vPointCurr",varyingType:"v2"})}\n\n\t\t\t\t\t${t._ShaderChunk.PDSFX_Color_pars_fragment(e)}\n                    ${_({varyingName:"fadeAway",varyingType:"f"})}\n\t\t\t\t\t${e.wideLine?`\n\t\t\t\t\t\t${t._ShaderChunk.PDSFX_halfWidth_pars_vertex_fragment(e)}\t\n                        ${_({varyingName:"vConstantCurr",varyingType:"v2"})}\t\t\t\n\t\t\t\t\t\t`:o}\n\t\t\t\t\t${e.dashedLine?`\n                        ${g({uniformName:"scale",uniformType:"f"})} \n                        ${g({uniformName:"totalSize",uniformType:"f"})} \n                        ${g({uniformName:"patternOffset",uniformType:"f"})} \n\t\t\t\t\t\t${e.patternSize?g({uniformName:"dashPattern",uniformType:"fv4",size:Math.ceil(e.patternSize/4)}):o}\n                        ${_({varyingName:"vLineDistance",varyingType:"v2"})}\t\n\t\t\t\t\t\t${e.wideLine?`\n                            ${_({varyingName:"vPointNextPrec",varyingType:"v4"})}\t\n                            ${_({varyingName:"vLineDistanceAltResetSecondDist",varyingType:"v2"})}\n                            ${_({varyingName:"vConstantNextPrec",varyingType:"v4"})}\t\n\t\t\t\t\t\t\t`:o}\n\n                        ${h("getDistance","f",[u("cur"),u("next"),u("prev")])}{\n\t\t\t\t\t\t\t${y("res")} = 0.0;\n\t\t\t\t\t\t\t${A("direction")}  = next-prev;\n\t\t\t\t\t\t\tres = dot(cur - prev, normalize(direction));\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t}\n\n                        ${h("getDistance","f",[u("cur"),u("next"),u("prev"),u("origin")])}{\n\t\t\t\t\t\t\t${y("res")}  = 0.0;\n\t\t\t\t\t\t\t${A("direction")} = next-prev;\n\t\t\t\t\t\t\tres = dot(cur - origin, normalize(direction));\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t${e.patternSize?`\n                            ${h("getPatternInfo","v3",[l("dist")])}{\n\t\t\t\t\t\t\t\t${x("index")}  = 0;\n\t\t\t\t\t\t\t\t${y("prec")}  = 0.0;\n                                ${y("cur")}  = 0.0;\n\t\t\t\t\t\t\t\tfor (${x("i")}  = 0; i < ${Math.ceil(e.patternSize/4)}; i++) {\n                                    ${C("dashInfo")} = max(${v("scale")},1e-6)* ${v("dashPattern")}[i];\t\t\t\t\t\n\t\t\t\t\t\t\t\t    ${function(){let t=o,e=["x","y","z","w"];for(let n=0;n<4;n++)t=`\n                            ${t};\n                            cur = dashInfo.${e[n]};\n                            if (cur > dist) {\n                                break;\n                            }\n                            prec = cur;\n                            index++;\n                        `;return t}()}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn ${b()}(${y()}(index),prec,cur);\n\t\t\t\t\t\t\t}\n\n                            ${h("getPatternAlpha","f",[l("dist")])}{\n\t\t\t\t\t\t\t\t${"round"===e.linecap||"square"===e.linecap?`${y("mDist")}  = mod( dist + ${p("getHalfWidth","f",[])} , max(${v("scale")},1e-6) *${v("totalSize")} );`:`${y("mDist")} = mod( dist, max(${v("scale")},1e-6) * ${v("totalSize")} );`}\n\t\t\t\t\t\t\t\t${b("patternInfo")}  = ${p("getPatternInfo","v3",[l("mDist")])};\n\t\t\t\t\t\t\t\t${e.invertedPattern?"\n\t\t\t\t\t\t\t\t\tif (abs(mod(patternInfo.x,2.0)) < 0.5) {\n\t\t\t\t\t\t\t\t\t\treturn 1.0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn 0.0;\n\t\t\t\t\t\t\t\t\t":"\n\t\t\t\t\t\t\t\t\tif (abs(mod(patternInfo.x,2.0)) < 0.5) {\n\t\t\t\t\t\t\t\t\t\treturn 0.0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn 1.0;\n\t\t\t\t\t\t\t\t\t"}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t`:o}\n\t\t\t\t\t\t`:o}\n\t\t\t\t\t${"round"===e.linecap?`\n                        ${_({varyingName:"infosCenterCap",varyingType:"v4"})}\t\n                        ${_({varyingName:"centerLeftRight",varyingType:"v4"})}\t\n\n                        ${h("doLeftCap","b",[u("iInfos"),u("cur"),u("left"),d("leftSide")])}{\n\t\t\t\t\t\t\t${m("leftCap")}  = leftSide && iInfos.x < 0.0;\n\t\t\t\t\t\t\tif (!leftCap) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t${y("distanceL")}  = length(cur.xy - left) / ${p("getHalfWidth","f",[])};\n\t\t\t\t\t\t\tif (distanceL > 1.0) {\n\t\t\t\t\t\t\t\tdiscard;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n                        ${h("doRightCap","b",[u("iInfos"),u("cur"),u("center"),u("right"),d("rightSide")])}{\n\t\t\t\t\t\t\t${m("rightCap")}  = rightSide && iInfos.x > length(right - center);\n\t\t\t\t\t\t\tif (!rightCap) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t${y("distanceR")}  = length(cur.xy - right) / ${p("getHalfWidth","f",[])};\n\t\t\t\t\t\t\tif (distanceR > 1.0) {\n\t\t\t\t\t\t\t\tdiscard;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n                        ${h("doRoundCap",null,[u("iInfos"),u("cur"),u("center"),u("right"),u("left")])}{\n\t\t\t\t\t\t\t${m("centerSide")}  = abs(length(fwidth(center))) < 1e-3;\n\t\t\t\t\t\t\t${m("capToCap")}  = abs(fwidth(iInfos.y)) < 1e-3 && iInfos.y > 0.0;\n\t\t\t\t\t\t\t${m("leftSide")}  = abs(length(fwidth(left))) < 1e-3 ;\n\t\t\t\t\t\t\t${m("rightSide")}  = abs(length(fwidth(right))) < 1e-3 ;\n\t\t\t\t\t\t\t${m("toTreat")}  = ! (leftSide && rightSide && centerSide) || capToCap;\n\t\t\t\t\t\t\tif (!toTreat) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t${m("leftCap")}  = ${p("doLeftCap","b",[u("iInfos"),u("cur"),u("left"),d("leftSide")])};\n\t\t\t\t\t\t\t${m("rightCap")}  = ${p("doRightCap","b",[u("iInfos"),u("cur"),u("center"),u("right"),d("rightSide && centerSide")])};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t`:o}\n\t\t\t\t\t${"round"===e.linejoin?`\n                        ${_({varyingName:"centerJoin",varyingType:"v4"})}\t\n                        ${_({varyingName:"centerRightJoin",varyingType:"v4"})}\t\n                        ${_({varyingName:"centerLeftJoin",varyingType:"v4"})}\t\n\n                        ${h("doCentralJoin",null,[u("cur"),f("center")])}{\n\t\t\t\t\t\t\t${y("distanceJoin")}  = 0.0;\n\t\t\t\t\t\t\t${y("varJoinC")}  = 0.0;\n\t\t\t\t\t\t\tif (dot(cur.xy - center.xy, center.zw) <= 0.0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdistanceJoin = length(cur.xy - center.xy) / ${p("getHalfWidth","f",[])};\n\t\t\t\t\t\t\tif (distanceJoin > 1.0) {\n\t\t\t\t\t\t\t\tdiscard;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n                        ${h("doSideJoins",null,[u("cur"),f("right"),f("left")])}{\n\t\t\t\t\t\t\t${m("rightJoin")}  = abs(length(fwidth(right))) < 1e-3 && dot(cur.xy - right.xy, right.zw) > 0.0;\n\t\t\t\t\t\t\t${m("leftJoin")}  =  abs(length(fwidth(left))) < 1e-3 && dot(cur.xy - left.xy, left.zw) > 0.0;\n\t\t\t\t\t\t\t${y("distanceRight")}  = 0.0;\n\t\t\t\t\t\t\t${y("distanceLeft")}  = 0.0;\n\t\t\t\t\t\t\t${y("varJoinR")}  = 0.0;\n\t\t\t\t\t\t\t${y("varJoinL")}  = 0.0;\n\t\t\t\t\t\t\tif (rightJoin) {\n\t\t\t\t\t\t\t\tdistanceRight = length(cur.xy - right.xy) / ${p("getHalfWidth","f",[])};\n\t\t\t\t\t\t\t\tif (distanceRight > 1.0) {\n\t\t\t\t\t\t\t\t\tdiscard;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (leftJoin) {\n\t\t\t\t\t\t\t\tdistanceLeft = length(cur.xy - left.xy) / ${p("getHalfWidth","f",[])};\n\t\t\t\t\t\t\t\tif (distanceLeft > 1.0) {\n\t\t\t\t\t\t\t\t\tdiscard;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n                        ${h("doRoundJoins",null,[u("cur"),f("center"),f("right"),f("left")])}{\n\t\t\t\t\t\t\t${m("isOnJoin")}  = abs(length(fwidth(center))) < 1e-3;\n\t\t\t\t\t\t\tif (isOnJoin) {\n\t\t\t\t\t\t\t\t${p("doCentralJoin",null,[u("cur"),f("center")])};\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t${p("doSideJoins",null,[u("cur"),f("right"),f("left")])};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t`:o}\n\t\t\t\t`},M=function(t){return`\n\t\t\t\t\t${t.wideLine?`\n                        ${m("isConnection")}  = length(fwidth(${D("vConstantCurr")})) < 1e-6;\n                        `:o}\n\t\t\t\t\t${t.dashedLine?`\n                            ${y("dist")}   = ${D("vLineDistance")}.x;\n                            ${y("dist2")}   = 0.0;\n\t\t\t\t\t\t\t${t.wideLine?`\n\t\t\t\t\t\t\t\t${m("resetDist2")}  = fwidth(${D("vLineDistanceAltResetSecondDist")}).y > 1e-6;\n\t\t\t\t\t\t\t\tif (!isConnection){\n\t\t\t\t\t\t\t\t\tdist += ${p("getDistance","f",[u(D("vPointCurr")),u(D("vPointNextPrec.xy")),u(D("vPointNextPrec.zw"))])};\n\t\t\t\t\t\t\t\t} else  {\n\t\t\t\t\t\t\t\t\tdist = ${D("vLineDistanceAltResetSecondDist")}.x + ${p("getDistance","f",[u(D("vPointCurr")),u(D("vConstantCurr")),u(D("vConstantNextPrec.zw")),u(D("vConstantCurr"))])};\n\t\t\t\t\t\t\t\t\tdist2 = ${p("getDistance","f",[u(D("vPointCurr")),u(D("vConstantNextPrec.xy")),u(D("vConstantCurr")),u(D("vConstantCurr"))])};\n                                    if (!resetDist2) {\n                                        dist2 += ${D("vLineDistanceAltResetSecondDist")}.x;\n                                    }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t`:o}\n\t\t\t\t\t\t\t${t.patternSize?`\n                                ${y("offsetedDist")}  = dist + ${v("patternOffset")};\n\t\t\t\t\t\t\t\t${y("patternAlpha")}  = ${p("getPatternAlpha","f",[l("offsetedDist")])};\n\t\t\t\t\t\t\t\t${t.PDSFX?`${p("ProcessLinePattern",null,[c("patternAlpha"),c("offsetedDist")])};`:o}\n\t\t\t\t\t\t\t\tif (abs(dist2) > 1e-6) {\n                                    ${y("offsetedDist2")}  = dist2 + ${v("patternOffset")};\n\t\t\t\t\t\t\t\t\t${y("patternAlpha2")}  = ${p("getPatternAlpha","f",[l("offsetedDist2")])};\n\t\t\t\t\t\t\t\t\t${t.PDSFX?`${p("ProcessLinePattern",null,[c("patternAlpha2"),c("offsetedDist2")])};`:o}\n\t\t\t\t\t\t\t\t\tpatternAlpha = min(patternAlpha, patternAlpha2);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (patternAlpha > 0.5) {\n\t\t\t\t\t\t\t\t\tdiscard;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t`:o}\n\t\t\t\t\t   `:o}\n\t\t\t\t\t${"round"===t.linecap?`${p("doRoundCap",null,[u(D("infosCenterCap.xy")),u(D("vPointCurr")),u(D("infosCenterCap.zw")),u(D("centerLeftRight.zw")),u(D("centerLeftRight.xy"))])};`:o}\n\t\t\t\t\t${"round"===t.linejoin?`${p("doRoundJoins",null,[u(D("vPointCurr")),f(D("centerJoin")),f("centerRightJoin"),f("centerLeftJoin")])};`:o}\n\t\t\t\t\tgl_FragColor.a *= ${D("fadeAway")};\n\t\t\t\t\tif (${D("fadeAway")} < 1e-2) {\n\t\t\t\t\t\tdiscard;\n\t\t\t\t\t}\n\t\t\t\t`},L=function(e,n){var i=t._ShaderChunk,r=t._DeferredShaderChunk;return`\n\t\t\t\t${`\n\t\t\t\t#define SVGLINE\n\n\t\t\t\t${N(e)}\n\t\t\t\t${e.useUV?`${A("uvToUse")} ;`:o}          \n\t\t\t\t${i.clip_pars_fragment(e)}\n\t\t\t\t${i.color_pars_fragment(e)}\n\t\t\t\t${i.fog_pars_fragment(e)}\n\t\t\t\t${e.useUV?_({varyingName:"vUv",varyingType:"v2"}):o}\n\t\t\t\t${r.oit_pars_fragment(e)}\n\t\t\t\t${n?`\n\t\t\t\t\t${r.depth_pars_fragment(e)}\n\t\t\t\t\t${r.picking_pars_fragment(e)}\n\t\t\t\t\t${r.picking_instancing_pars_fragment(e)}\n\t\t\t\t\t${r.highlight_pars_fragment(e,!1)}\n\t\t\t\t\t${r.gpupos_pars_fragment(e)}\n\t\t\t\t\t`:o}\n\t\t\t\t${i.postprocess_pars_fragment(e)}\n\t\t\t`}\n\t\t\t\tvoid main() {\n\t\t\t\t\t${`\n\t\t\t\t\t${e.PDSFX?`\n                        ${i.PDSFX_start_fragment(e)}\n\t\t\t\t\t\t${i.PDSFX_map_fragment(e)}\n\t\t\t\t\t\t${i.PDSFX_mapping_fragment(e)}\n                        ${i.PDSFX_Color_backup_fragment(e)}\n                        ${i.PDSFX_halfWidth_backup_fragment_vertex(e)}\n\t\t\t\t\t\t${p("ComputeCommonValues",null,[])}; \n\t\t\t\t\t\t${i.PDSFX_discard_fragment(e)}\n\t\t\t\t\t\t${i.PDSFX_Color_fragment(e)}\n\t\t\t\t\t\t${i.PDSFX_halfWidth_fragment_vertex(e)}\n\t\t\t\t\t\t`:o}\n                    ${b("diffuseToUse")}  = ${e.PDSFX?"diffuse":`${v("diffuse")}`};\n                    ${y("opacityToUse")}  = ${e.PDSFX?"opacity":`${v("opacity")}`};\n\t\t\t\t\t${e.selectionMaterial?`gl_FragColor = ${C()}( ${b()}(1.0), 1.0 );`:`gl_FragColor = ${C()}( diffuseToUse, opacityToUse );`}\n\n\t\t\t\t\t${e.useUV?`uvToUse = ${getFF("vUv")}.xy;`:o}\n\n\t\t\t\t\t${i.clip_fragment(e)}\n\t\t\t\t\t${i.color_fragment(e)}\n\t\t\t\t\t${i.alphatest_fragment(e)}\n\t\t\t\t\n                    ${M(e)}\n\t\t\t\t\t${i.postprocess_fragment(e)}\n\t\t\t\t\t${i.linear_to_gamma_fragment(e)}\n\n\t\t\t\t\t${i.PDSFX_end_fragment(e)}\n\t\t\t\t\t${i.fog_fragment(e)}\n\t\t\t\t\t${i.backgroundviewmode_lowlight_fragment(e)}\n\t\t\t\t\t${r.oit_fragment(e)}\n\t\t\t\t\t${n?`\n\t\t\t\t\t\t${r.depth_fragment(e)}\n\t\t\t\t\t\t${r.picking_fragment(e)}\n\t\t\t\t\t\t${r.picking_instancing_fragment(e)}\n\t\t\t\t\t\t${r.lineic_normal_fragment(e)}\n                        ${r.lineic_normal_depth_fragment(e)}\n\t\t\t\t\t\t${function(e){return e.materialToUse!==t.MaterialToUse.highlightMaterial?o:`\t\n\t\t\t\t\t${e.politeHighlight?`\n\t\t\t\t\t\t${e.mobileHL?`\n                            ${y("alphaValue")};\n                            if (${p("getDepthValue","f",[])} > 0.5) {\n                                alphaValue = iHighlightIntensity.y;\n                            } else {\n                                alphaValue = iHighlightIntensity.x;\n                            }\n\t\t\t\t\t\t\tgl_FragColor = ${C()}( iHighlightColor.xyz, alphaValue);\n\t\t\t\t\t\t\tgl_FragColor.a = min(gl_FragColor.a, 1.0);\n\t\t\t\t\t\t\t`:`gl_FragColor = ${C()}( highlightID / 255.0, 1.0, ${p("getDepthValue","f",[])} , 1.0 / 255.0 );`}\n\t\t\t\t\t\t`:`\n\t\t\t\t\t\t${e.mobileHL?`\n\t\t\t\t\t\t\tgl_FragColor = ${C()}( iHighlightColor.xyz, 0.8 * iHighlightIntensity.x );\n\t\t\t\t\t\t\tgl_FragColor.a = min(gl_FragColor.a, 1.0);\n\t\t\t\t\t\t\t`:`gl_FragColor = ${C()}( highlightID / 255.0, 1.0 , 0.0, 1.0 / 255.0 );`}\n\t\t\t\t\t\t`}\n\t\t\t`}(e)}\n\t\t\t\t\t\t${r.gpupos_fragment(e)}\n\t\t\t\t\t\t`:o}\n\t\t\t\n\t\t\t`}\n\t\t\t\t}\n\t\t\t`};t.ShaderLib.line2D=new e(function(e,n){var i=!e,r=L(n,i);return{vertexShader:function(e,n){var i=t._ShaderChunk,r=t._DeferredShaderChunk;return`\n\t\t\t\t${`\n\t\t\t\t#define SVGLINE\n\n\t\t\t\t${i.clip_pars_vertex(e)}\n\t\t\t\t${i.map_pars_vertex(e)}\n\t\t\t\t${i.color_pars_vertex(e)}\n                ${i.morphtarget_pars_vertex(e)}\n                ${i.skinning_pars_vertex(e)}\n\t\t\t\t${V(e)}\n\t\t\t\t${i.fog_pars_vertex(e)}\n\t\t\t\t${r.oit_pars_vertex(e)}\n\t\t\t\t${n?`\n\t\t\t\t\t${r.depth_pars_vertex(e)}\n\t\t\t\t\t${r.picking_pars_vertex(e)}\n\t\t\t\t\t${r.picking_instancing_pars_vertex(e)}\n\t\t\t\t\t${r.highlight_pars_vertex(e)}\n\t\t\t\t\t${r.gpupos_pars_vertex(e)}\n\t\t\t\t\t`:o}\n\t\t\t`}\n\t\t\t\tvoid main() {\n\t\t\t\t\t${`\n                ${e.PDSFX?`\n                    ${i.PDSFX_halfWidth_backup_fragment_vertex(e)}\n                    `:o}\n\t\t\t\t${i.PDSFX_start_vertex(e)}\n\n\t\t\t\t${e.PDSFX?`\n\t\t\t\t\t${i.PDSFX_halfWidth_fragment_vertex(e)}\n\t\t\t\t\t`:o}\n\n\t\t\t\t${i.map_vertex(e)}\n\t\t\t\t${i.color_vertex(e)}\n\t\t\t\t${i.skinbase_vertex(e)}\n\n\t\t\t\t${i.morphtarget_vertex(e)}\n\t\t\t\t${i.skinning_vertex(e)}\n\t\t\t\t${i.position_vertex(e)}\n\t\t\t\t${i.default_vertex(e)}\n\n\t\t\t\t${i.clip_vertex(e)}\n\t\t\t\t${i.fog_vertex(e)}\n\n\t\t\t\t${w(e)}\n\n\t\t\t\t${r.oit_vertex(e)}\n\t\t\t\t${n?`\n\t\t\t\t\t${r.depth_vertex(e)}\n\t\t\t\t\t${r.picking_vertex(e)}\n\t\t\t\t\t${r.picking_instancing_vertex(e)}\n\t\t\t\t\t${r.highlight_vertex(e)}\n\t\t\t\t\t${r.gpupos_vertex(e)}\n\t\t\t\t\t`:o}\n\t\t\t\t${i.PDSFX_end_vertex(e)}\n\t\t\t`}\n\t\t\t\t}\n\t\t\t`}(n,i),fragmentShader:r}});class I extends t.LineDSMaterial{constructor(t){t=t||{};var e={};Object.assign(e,t),e.linecap||(e.linecap="butt"),e.scale||(e.scale=1),e.miterLimit||(e.miterLimit=4),super(e),this.miterLimit=e.miterLimit,this.transparent=!0,this.miterLimit<1&&(this.miterLimit=1),this.is2DLine=!0,this.isCPUPattern=!1}clone(){var t=new I;return super.clone(t),t.miterLimit=this.miterLimit>1?this.miterLimit:1,t}getType(){return"SVGLine"}loadUniforms(t,e,n,i,r,a){super.loadUniforms(t,e,n,i,r,a),n.halfWidth&&e.uniform1f(n.halfWidth,this.lineWidth?this.lineWidth/2:.5),n.miterLimit&&e.uniform1f(n.miterLimit,this.miterLimit?this.miterLimit:4),n.scale&&e.uniform1f(n.scale,this.scale?this.scale:1)}setLineWidth(t){Math.abs(this.lineWidth-t)>1e-6&&(this.lineWidth=t,this.needsUpdate=!0,this.updateDeferredMaterials())}}I.prototype._shaderID="line2D",t.SVGLineMaterial=I}),define("DS/SVGLoader/SVGLoaderUtils",["DS/Visualization/ThreeJS_DS"],function(t){"use strict";var e={parseCommands:function(t,e){var n,i,r,a=t.split(" "),o=[],s=[];for(n=0;n<a.length;n++)if(i=a[n])if(r=parseFloat(i),isNaN(r)){if(e.indexOf(i)<0)throw new Error("unknown command '"+i+"'");s.length&&o.push(s),s=[i]}else{if(!s.length)throw new Error("missing command");s.push(r)}return s.length&&o.push(s),o},parseTransformation:function(r){if(0===r.indexOf("rotate")){var a=r.indexOf("("),o=r.indexOf(")"),s=r.substring(a+1,o),l=(s=n(s=i(s,","," "))).split(" "),c=parseFloat(l[0]);e.lastAngle=c;var d=new t.Vector2;l.length>1&&(d.x=parseFloat(l[1]),d.y=parseFloat(l[2]));var u=new t.Matrix3;u.set(1,0,d.x,0,1,d.y,0,0,1);var f=new t.Matrix3;f.set(1,0,-d.x,0,1,-d.y,0,0,1);var h=new t.Matrix3,p=Math.PI*c/180;h.set(Math.cos(p),-Math.sin(p),0,Math.sin(p),Math.cos(p),0,0,0,1);var g=f;return g.multiplyMatrices(h,f),g.multiplyMatrices(u,g),{matrix:g,angle:p}}throw new Error("Unknown transformation")},parseColor:function(e){var n=i(e," ","");return new t.Color(n)},parseDashArray:function(t){var e,r=n(i(t,","," ")),a=r.split(" "),o={key:r,value:[]};for(e=0;e<a.length;e++)o.value.push(parseFloat(a[e]));return o}};function n(t){return t.replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function i(t,e,n){return t.replace(new RegExp(e,"g"),n)}return e}),define("DS/SVGLoader/SVGNode_abstract",["UWA/Class"],function(t){"use strict";return t.extend({init:function(t){this.node=t,this.children=[]},fillRenderableBank:function(t,e){var n,i=e.buildChildGas(this.node),r=this.children.length;for(n=0;n<r;n++)this.children[n].fillRenderableBank(t,i);return[]}})}),define("DS/SVGLoader/SVGRenderable",["UWA/Class"],function(t){"use strict";return t.extend({init:function(t,e){this.isAsync=!!t,this.context=e},createNode3D:function(t){}})}),define("DS/SVGLoader/MultiIndexTable",["DS/Visualization/ThreeJS_DS"],function(t){"use strict";var e=function(t,e){var n;for(this.data={},this.attributesNames=t,this.mainAttributesNames=e,this.secondaryAttributesNames=[],n=0;n<this.attributesNames.length;n++)this.mainAttributesNames.indexOf(this.attributesNames[n])<0&&this.secondaryAttributesNames.push(this.attributesNames[n])};return e.prototype.getElement=function(e,n){var i,r,a,o,s=this.data;for(i=0;i<this.mainAttributesNames.length;i++)(o=e[r=this.mainAttributesNames[i]])instanceof t.Color&&(o=o.getHexString()),(a=s[o])||(a=i===this.mainAttributesNames.length-1?[]:{},s[o]=a),s=a;var l,c,d,u=null;for(i=0;i<s.length&&!u;i++){for(c=s[i].attributes,d=!0,l=0;l<this.secondaryAttributesNames.length&&d;l++)c[r=this.secondaryAttributesNames[l]]&&c[r].equals?e[r]&&c[r].equals(e[r])||(d=!1):c[r]!==e[r]&&(d=!1);d&&(u=s[i].element)}return u||(u=n(),s.push({attributes:e,element:u})),u},e.prototype.exportToArray=function(){var t=[];return function t(e,n){var i;if(e instanceof Array)for(i=0;i<e.length;i++)n.push(e[i].element);else for(i in e)t(e[i],n)}(this.data,t),t},e}),define("DS/SVGLoader/InstancedArcsUtils",["DS/Visualization/ThreeJS_R57","DS/Mesh/MeshUtils"],function(t,e){"use strict";return{computeArcBBox:function(e,n,i,r,a,o,s){var l=.5*s,c=r+a,d=Math.cos(r),u=Math.sin(r),f=Math.cos(c),h=Math.sin(c),p=Math.sqrt(d*d/(n*n)+u*u/(i*i)),g=Math.sqrt(f*f/(n*n)+h*h/(i*i)),v=new t.Vector2(l*d/(n*p),l*u/(i*p)),S=new t.Vector2(l*f/(n*g),l*h/(i*g)),m=.5*Math.PI,x=(Math.PI,Math.PI,new t.Vector3(1/0,1/0,-1)),y=new t.Vector3(-1/0,-1/0,1),A=new t.Vector2(n*d-v.x,i*u-v.y),b=new t.Vector2(n*f-S.x,i*h-S.y),C=new t.Vector2(n*d+v.x,i*u+v.y),_=new t.Vector2(n*f+S.x,i*h+S.y),D=[A.x,b.x,C.x,_.x],P=[A.y,b.y,C.y,_.y],$=[Math.floor(r/m),Math.floor(c/m)];.5>=$[0]&&.5<=$[1]&&P.push(i+l),1.5>=$[0]&&1.5<=$[1]&&D.push(-n-l),2.5>=$[0]&&2.5<=$[1]&&P.push(-i-l),3.5>=$[0]&&3.5<=$[1]&&D.push(n+l),4.5>=$[0]&&4.5<=$[1]&&P.push(i+l),5.5>=$[0]&&5.5<=$[1]&&D.push(-n-l),6.5>=$[0]&&6.5<=$[1]&&P.push(-i-l);for(var V=0;V<D.length;V++)x.x=Math.min(x.x,D[V]),y.x=Math.max(y.x,D[V]);for(V=0;V<P.length;V++)x.y=Math.min(x.y,P[V]),y.y=Math.max(y.y,P[V]);var w=new t.Matrix4;return w.rotateZ(o),w.setPosition(new t.Vector3(e.x,e.y,e.z)),new t.Box3(x,y).applyMatrix4(w)},computeArcFillBBox:function(e,n,i,r,a,o){var s=r+a,l=Math.cos(r),c=Math.sin(r),d=Math.cos(s),u=Math.sin(s),f=.5*Math.PI,h=(Math.PI,Math.PI,new t.Vector3(1/0,1/0,-1)),p=new t.Vector3(-1/0,-1/0,1),g=new t.Vector2(0,0),v=new t.Vector2(n*l,i*c),S=new t.Vector2(n*d,i*u),m=[g.x,v.x,S.x],x=[g.y,v.y,S.y],y=[Math.floor(r/f),Math.floor(s/f)];.5>=y[0]&&.5<=y[1]&&x.push(i),1.5>=y[0]&&1.5<=y[1]&&m.push(-n),2.5>=y[0]&&2.5<=y[1]&&x.push(-i),3.5>=y[0]&&3.5<=y[1]&&m.push(n),4.5>=y[0]&&4.5<=y[1]&&x.push(i),5.5>=y[0]&&5.5<=y[1]&&m.push(-n),6.5>=y[0]&&6.5<=y[1]&&x.push(-i);for(var A=0;A<m.length;A++)h.x=Math.min(h.x,m[A]),p.x=Math.max(p.x,m[A]);for(A=0;A<x.length;A++)h.y=Math.min(h.y,x[A]),p.y=Math.max(p.y,x[A]);var b=new t.Matrix4;return b.rotateZ(o),b.setPosition(new t.Vector3(e.x,e.y,e.z)),new t.Box3(h,p).applyMatrix4(b)},createArcLoopMesh:function(n){var i=[],r=new t.BufferGeometryDS;r.drawingGroups=[];var a=new e.DrawingGroup(n,n,4,0,36);a.geometry=r,r.drawingGroups.push(a);for(var o,s=new Float32Array(42),l=0,c=0,d=0;d<7;d++)o=d/6,s[l++]=-1,s[l++]=o,s[l++]=1,s[l++]=1,s[l++]=o,s[l++]=0;r.vertexPositionArray=s;var u=new Uint16Array(36);c=0;for(d=0;d<6;d++)u[c++]=2*d,u[c++]=2*d+1,u[c++]=2*d+3,u[c++]=2*d,u[c++]=2*d+3,u[c++]=2*d+2;r.vertexIndexArray=u,i.push(r);var f=new t.Mesh(i,n);return f.matrixAutoUpdate=!1,f},createArcFillMesh:function(n){var i=[],r=new t.BufferGeometryDS;r.drawingGroups=[];var a=new e.DrawingGroup(n,n,4,0,18);a.geometry=r,r.drawingGroups.push(a);var o,s=new Float32Array(24),l=0,c=0;s[l++]=-1,s[l++]=0,s[l++]=0;for(var d=0;d<7;d++)o=d/6,s[l++]=1,s[l++]=o,s[l++]=0;r.vertexPositionArray=s;var u=new Uint16Array(18);c=0;for(d=0;d<6;d++)u[c++]=0,u[c++]=d+1,u[c++]=d+2;r.vertexIndexArray=u,i.push(r);var f=new t.Mesh(i,n);return f.matrixAutoUpdate=!1,f},createMaterial:function(e,n,i){var r=new t.MeshBasicMaterial({force:!0});r.activatePDSFX();var a=e.get_pdsfx_uniforms();i&&(a.patternArray.value=i,a.patternArray.length=i.length),r.setPDSFXUniforms(a);var o=e.get_pdsfx_varyings();r.setPDSFXVaryings(o);var s=["",n?"#define CONSIDE_ARC":"",i?"#define PATTERN_SIZE "+i.length:"",i?"#define ARC_PATTERN":"",""].join("\n");return r.setPDSFXGlobalShaderCode(s+e.VS_global,s+e.FS_global),r.setPDSFXOverridableFunctions(e.VS_ov,e.FS_ov),r.refreshPDSFXUniforms=function(){r.updatePDSFXUniform("cst",.5*t.glStates.currentHeight*t.getDevicePixelRatio())},r.transparent=!0,r}}}),define("SVGLoader/InstancedArcsUtils",["DS/SVGLoader/InstancedArcsUtils","DS/DSMigration/DSMigration"],function(t,e){return e.deprecateModule("SVGLoader/InstancedArcsUtils"),t}),define("DS/SVGLoader/SVGMeshMaterial",["DS/Visualization/ThreeJS_DS"],function(t){"use strict";class e extends t.MeshBasicMaterial{constructor(e){var n={viewBox:{type:"v4",value:new t.Vector4(-1/0,1/0,-1/0,1/0)}};super({side:t.FrontSide}),this._activatePDSFXMigrated(),this._PDSFXData._uniqueID="SVGMeshMaterialPDSFX",this.setPDSFXUniforms(n),this.setPDSFXVaryings({pos2d:{type:"v2"}}),this.setPDSFXOverridableFunctions({ComputeVaryingValues:function(t,e){const n=t.variableHandler;return`\n                        ${(e=>t.getVarying(e))("pos2d")} = ${(t=>n.vec2(t))()}(modelMatrix * ${(t=>n.vec4(t))()}( ${t.vGetAttribPosition()}, 1.0 ));\n                    `}},{ComputeDiscard:function(t,e){const n=(e=>t.getUniform(e))("viewBox"),i=(e=>t.getVarying(e))("pos2d");return`\n                        return (${i}.x < ${n}.x || ${i}.x > ${n}.y || ${i}.y < ${n}.z || ${i}.y > ${n}.w);\n                    `}}),this.setValues(e)}clone(){var t=new e;return super.clone(t),t}getType(){return"SVGBasic"}}return e}),define("DS/SVGLoader/SVGRenderableContext",["UWA/Class"],function(t){"use strict";return t.extend({init:function(){this._lastUsedGas=null,this._currentZIndex=0},computeZIndex:function(t){return this._lastUsedGas&&t&&t.isZCompatibleWithGas(this._lastUsedGas)||(this._currentZIndex++,this._lastUsedGas=t),this._currentZIndex},forceNewZ:function(){this._lastUsedGas=null},getZFromZIndex:function(t){return-this._currentZIndex+t-1},getBgZ:function(t){return-this._currentZIndex-2}})}),define("DS/SVGLoader/InstancedArcsShaders",["DS/Visualization/ThreeJS_R57"],function(t){"use strict";var e=["float tolerance = max(0.1*nbPixels, 1.0)/ratio;"].join("\n"),n=["float computeClampedAngle(in float _cos, in float _sin) {","float currAngle;","float _asin = asin(_sin);","if (_sin >= 0.0) currAngle = acos(_cos);","else {","if (_cos >=0.0) currAngle = _asin + PI2;","else currAngle = -_asin + PI;","}","currAngle = clamp(currAngle, 0.0, PI2);","return currAngle;","}"].join("\n"),i=["toDiscard = false;","#ifdef NO_DISCARD","float delta = fwidth(value);","alpha = 1.0 - smoothstep(1.0 - delta , 1.0 + delta , value);","#else","if (value > 1.0) toDiscard = true;","#endif"].join("\n"),r={compute_ellipse_vertices:["void _computeVertices(inout vec2 firstPoint, inout vec2 secondPoint, in vec2 firstNormal, in vec2 secondNormal) {","vec2 A = firstPoint;","vec2 B = secondPoint;","vec2 nA = firstNormal;","vec2 nB = secondNormal;","float a = instanceRadiiAndWidth.x;","float b = instanceRadiiAndWidth.y;","float a2 = a*a;","float b2 = b*b;","vec2 M0_1, M0_2;","vec2 AB = B-A;","float alpha = AB.y;","float beta = AB.x;","float alpha2 = alpha*alpha;","float beta2 = beta*beta;","float a2alpha2 = a2*alpha2;","float b2beta2 = b2*beta2;","float L_alpha_beta = sqrt(alpha2 + beta2);","float gamma = 0.5*(alpha*(A.x + B.x) - beta*(A.y + B.y));","vec2 nAB = vec2(-alpha, beta)/L_alpha_beta;","if (alpha == 0.0) {","M0_1.x = 0.0;","M0_1.y = -abs(b);","M0_2.x = 0.0;","M0_2.y = -M0_1.y;","} else if (beta == 0.0) {","M0_1.y = 0.0;","M0_1.x = -abs(a);","M0_2.y = 0.0;","M0_2.x = -M0_1.x;","} else {","float denom = a2alpha2 + b2beta2;","M0_1.x = -sqrt((a2*a2alpha2)/denom);","M0_1.y = -b2*beta*M0_1.x/(a2*alpha);","M0_2.x = -M0_1.x;","M0_2.y = -M0_1.y;","}","float d1 =  abs(-alpha*M0_1.x + beta*M0_1.y + gamma)/L_alpha_beta;","float d2 =  abs(-alpha*M0_2.x + beta*M0_2.y + gamma)/L_alpha_beta;","float distM0_AB = min(d1,d2);","float intEllipse = b2beta2 - gamma*gamma + a2alpha2 >= 0.0 ? 1.0 : -1.0;","float totalDist = intEllipse*distM0_AB + halfWidth;","float dotA = abs(dot(nA, nAB));","float newExtA = totalDist/dotA;","firstPoint = A + newExtA*nA;","float dotB = abs(dot(nB, nAB));","float newExtB = totalDist/dotB;","secondPoint = B + newExtB*nB;","}","void computeImpostorVertices(in vec2 precExtruded, inout vec2 currExtruded, in vec2 nextExtruded, in vec2 precNormal, in vec2 currNormal, in vec2 nextNormal) {","vec2 currSolution0 = currExtruded;","vec2 prec0 = precExtruded;","_computeVertices(prec0, currSolution0, precNormal, currNormal);","vec2 currSolution1 = currExtruded;","vec2 next1 = nextExtruded;","_computeVertices(currSolution1, next1, currNormal, nextNormal);","currExtruded = length(currSolution0 - currExtruded) > length(currSolution1 - currExtruded) ? currSolution0 : currSolution1;","}"].join("\n"),distance_to_arc_ellipse:["vec3 debug;","#define PI 3.1415926535897932384","#define PI2 6.283185307179586","#define PI_2 1.5707963267948966",n,"vec2 ClosestPointOnEllipse(vec2 p, vec2 ab)","{","float c = ab.x > ab.y ? sqrt(ab.x*ab.x - ab.y*ab.y) : sqrt(ab.y*ab.y - ab.x*ab.x);","float t = 0.;","if (ab.y < ab.x && abs(p.x) < c)","{","\tt = p.y > 0. ? 0. * PI : -PI_2;","}","else if (ab.x < ab.y && abs(p.y) < c)","{","\tt = p.x > 0. ? 0. : -PI;","}","else","{","\tt = atan(ab.x*p.y,ab.y*p.x);","}","float aa_bb = ab.x * ab.x - ab.y * ab.y;","vec2 pab = p*ab;","for (int i=0; i<4; i++)","{","\tfloat sint = sin(t);","\tfloat cost = cos(t);","\tfloat ft = aa_bb * cost * sint - pab.x * sint + pab.y * cost;","\tfloat dft = aa_bb * (cost * cost - sint * sint) - pab.x * cost - pab.y * sint;","\tt = t - ft/dft;","}","return vec2(cos(t),sin(t))*ab;","}","vec3 distanceToEllipse(in float iStartAngle, in float iEndAngle, in float iA, in float iB, in vec2 p, in float h)","{","vec2 ab = abs(vec2(iA,iB));","vec2 origp = p;","p = -abs(p);","vec2 closest = ClosestPointOnEllipse(p, ab);","float dist = length(closest-p);","closest = abs(closest)*sign(origp);","return vec3(abs(dist), closest);","}","#ifdef CONSIDER_ARC","float angularDistanceToArc(in float startAngle, in float endAngle, in float iCos, in float iSin) {","float currAngle = computeClampedAngle(iCos, iSin);","float dist = 1e5;","float startDist = mod(abs(startAngle - currAngle), PI2);","if (endAngle < PI2) {","float endDist = mod(abs(currAngle-endAngle),PI2);","if (currAngle < startAngle || currAngle > endAngle) {dist = min(dist, min(startDist, endDist));}","else dist = 0.0;","} else if (endAngle >= PI2){","endAngle -= PI2;","float endDist = mod(abs(currAngle-endAngle),PI2);","if (currAngle > endAngle && currAngle < startAngle) {dist = min(dist, min(startDist, endDist));}","else dist = 0.0;","}","return dist;","}","vec3 distanceToArc(in float iStartAngle, in float iEndAngle, in float iA, in float iB, in vec2 point, in float h) {","float a = iA;","float b = iB;","if (b > a) {point = vec2(-point.y, point.x); a=iB; b=iA;}","float h2 = h*h;","float a2 = a*a;","float b2 = b*b;","float b2_a2 = (b+a)*(b-a);","float x = point.x;","float y = point.y;","float startAngle = iStartAngle;","float endAngle = iEndAngle;","float cosSolutions[4];","float m = x*a/b2_a2;","float n = y*b/b2_a2;","float m2 = m*m;","float n2 = n*n;","float m2n2 = m2*n2;","float p = -0.5*m2 + n2 - 1.0;","float q = -m*(1.0 + n2);","float B = p;","float B_3 = B/3.0;","float var = m2+n2-1.0;","float var2 = var*var;","float var3 = var2*var;","float P = -var2/12.0;","float Q = -0.5*(m2n2 + var3*0.5/27.0);","float P_3 = P/3.0;","float Q_2 = 0.5*Q;","float v;","float delta = (1.0/432.0)*m2n2*(var3 + 27.0*m2n2);","float dTerm0 = abs(m*n)/12.0;","float dTerm1 = var3/3.0 + 9.0*m2n2;","float _sqDelta = dTerm0*sqrt(-dTerm1);","float sqDelta = dTerm0*sqrt(dTerm1);","if (delta < 0.0) {","vec2 complZ = vec2(-Q_2, _sqDelta);","float module = length(complZ);","float theta = acos(clamp(-Q_2/module, -1.0, 1.0));","v = 2.0*pow(module, 1.0/3.0)*cos(theta/3.0);","} else {","float alpha = pow(-Q_2 + sqDelta, 1.0/3.0);","float beta = -P_3/alpha;","v = alpha + beta;","}","float z0 = v - B_3;","float z02 = max(2.0*z0, 0.0);","float sqz02 = sqrt(z02);","float term0 = 2.0*(p + z02);","float term1 = 2.0*q/sqz02;","float largeTerm0 = sqrt(z02 - (term0 + term1));","float largeTerm1 = sqrt(z02 - (term0 - term1));","float lambda1 = 0.5*(-m + (+sqz02 - largeTerm0));","float lambda2 = 0.5*(-m + (+sqz02 + largeTerm0));","float lambda3 = 0.5*(-m + (-sqz02 - largeTerm1));","float lambda4 = 0.5*(-m + (-sqz02 + largeTerm1));","cosSolutions[0] = lambda1;","cosSolutions[1] = lambda2;","cosSolutions[2] = lambda3;","cosSolutions[3] = lambda4;","float ax = a*x;","float by = b*y;","float sinSolution;","vec2 pointSolution;","float minDistArc = 1e5;","float minDistEllipse = 1e5;","float minAngularDist = 0.1*abs(endAngle - startAngle);","vec2 closestOnEllipse;","vec2 closestOnArc;","bool foundOnArc = false;","float _cos2;","float currLength;","float tangentLength;","float epsilon;","float currAngularDist;","for (int i = 0; i < 4; i++) {","cosSolutions[i] = clamp(cosSolutions[i], -1.0, 1.0);","_cos2 = cosSolutions[i]*cosSolutions[i];","sinSolution = clamp(sqrt(1.0 - _cos2), 0.0, 1.0);","pointSolution = vec2(a*cosSolutions[i], b*sinSolution);","currLength = length(point - pointSolution);","tangentLength = length(vec2(-a*sinSolution, b*cosSolutions[i]));","epsilon = 0.8*(currLength*tangentLength);","if (currLength < minDistEllipse) {","minDistEllipse = currLength;","closestOnEllipse = pointSolution;","}","currAngularDist = angularDistanceToArc(startAngle, endAngle, cosSolutions[i], sinSolution);","if (currLength < minDistArc && currAngularDist <= minAngularDist) {","minAngularDist = currAngularDist;","minDistArc = currLength;","foundOnArc = true;","closestOnArc = pointSolution;","} ","sinSolution = -sinSolution;","pointSolution.y *= -1.0;","currLength = length(point - pointSolution);","tangentLength = length(vec2(-a*sinSolution, b*cosSolutions[i]));","epsilon = 100.0*(currLength*tangentLength);","if (currLength < minDistEllipse) {","minDistEllipse = currLength;","closestOnEllipse = pointSolution;","}","currAngularDist = angularDistanceToArc(startAngle, endAngle, cosSolutions[i], sinSolution);","if (currLength < minDistArc && currAngularDist <= minAngularDist) {","minAngularDist = currAngularDist;","minDistArc = currLength;","foundOnArc = true;","closestOnArc = pointSolution;","} ","}","vec3 results = vec3(minDistArc, closestOnArc);","if (x*x/a2 + y*y/b2 > 1.0 || !foundOnArc) {results.x = minDistEllipse; results.yz = closestOnEllipse;}","if (iB > iA) results.yz = vec2(results.z, -results.y);","return results;","}","#endif"].join("\n"),conservative_rasterization:["void clampToOnePixelSize(inout float iHalfWidth) {","if ((2.0*iHalfWidth* ratio) < 1.0) {","float newHalfLineWidth = 0.5/ratio;","float linesRatio = (newHalfLineWidth - iHalfWidth)/newHalfLineWidth;","fartheringAlpha = 1.0 - smoothstep(0.65, 1.0, linesRatio);","iHalfWidth = newHalfLineWidth;","}","}"].join("\n"),antialiasing_pattern:["       vec3 getPatternInfo(in float dist) {","           int index = 0;","           float prec = 0.0, cur = 0.0;","           for (int i = 0; i < PATTERN_SIZE; i++) {","               cur = patternArray[i];","               if (cur > dist) {","                   break;","               }","               prec = cur;","               index++;","           }","           return vec3(float(index),prec,cur);","       }","       float getPatternAlpha(in float dist, in float fTotalSize) {","           #if defined(USE_ROUNDCAP) || defined(USE_SQUARECAP)","               float mDist = mod( dist + halfWidth/scale, fTotalSize );","           #else","               float mDist = mod( dist, fTotalSize );","           #endif","           vec3 patternInfo = getPatternInfo(mDist);","           if (abs(mod(patternInfo.x,2.0)) < 1e-2) {","               return 0.0;","           }","           #ifdef NO_DISCARD","               int iIndex = int(patternInfo.x);","               float diffBeg = (mDist - patternInfo.y);","               float deltaBeg = fwidth(diffBeg);","               float diffEnd = (patternInfo.z - mDist);","               float deltaEnd = fwidth(diffEnd);","               float step =  min(smoothstep(0.25*deltaEnd,2.0*deltaEnd,diffEnd),smoothstep(0.25*deltaBeg,2.0*deltaBeg,diffBeg));","               return step;","           #else","               return 1.0;","           #endif","       }"].join("\n"),patterns_fragment:["alpha *= (1.0-getPatternAlpha(curvAbs, vPatternSize));"].join("\n")},a={transX:{type:"f"},transY:{type:"f"},vInstanceColor:{type:"v4"}},o={vRadiiAndHWidth:{type:"v3"},vStartAngle:{type:"f"},vEndAngle:{type:"f"}},s={vRadius:{type:"f"},vHalfWidth:{type:"f"}},l={vStartAngle:{type:"f"},vPatternOffset:{type:"f"}},c={patternOffset:{type:"f"},vIntegralFirstTerm:{type:"v4"}},d={cst:{type:"f",value:.5*t.glStates.currentHeight*t.getDevicePixelRatio()}},u={cst:{type:"f",value:.5*t.glStates.currentHeight*t.getDevicePixelRatio()},patternArray:{type:"fv1",value:[],length:-1}},f={get_pdsfx_uniforms:function(){return Object.create(d)},get_pdsfx_varyings:function(){return Object.assign({},a,o)},VS_global:["float fartheringAlpha;","vec3 viewTr;","float halfWidth;","float ratio;","vec2 myViewPos;",r.compute_ellipse_vertices,r.conservative_rasterization].join("\n"),FS_global:[r.distance_to_arc_ellipse,"bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","mat4 PM = vGetProjectionMatrix();","fartheringAlpha = 1.0;","float cameraTop = 1.0/PM[1][1];","ratio = cst/cameraTop;","halfWidth = instanceRadiiAndWidth.z;","clampToOnePixelSize(halfWidth);","mat4 viewM = vGetViewMatrix();","viewTr = vec3(viewM[3][0], viewM[3][1], viewM[3][2]);","}"].join("\n"),ProcessViewTangentSpace:["void ProcessViewTangentSpace(inout TangentSpace ioWorldViewTS) {","float totalAngle = instanceOffsetAndAngles.z;","float startAngle = instanceOffsetAndAngles.w;","vec2 _localPosition;","vec3 infos = vGetAttribPosition();","float inOrOut = infos.x;","float frac = infos.y;","float currAngle = frac*totalAngle + startAngle;","float cosCurr = cos(currAngle);","float sinCurr = sin(currAngle);","float nbPixels = halfWidth*ratio;",e,"float a = instanceRadiiAndWidth.x;","float b = instanceRadiiAndWidth.y;","float a2 = a*a;","float b2 = b*b;","vec2 localPt = vec2(a*cosCurr, b*sinCurr);","vec2 localNormal = normalize(vec2(localPt.x/(a2), localPt.y/(b2)));","if (inOrOut < 0.0) {","_localPosition = localPt - (halfWidth+tolerance)*localNormal;","} else {","float totalAngle_6 = totalAngle/6.0;","vec2 currPt = localPt + halfWidth*localNormal;","vec2 nextPt = vec2(a*cos(currAngle + totalAngle_6), b*sin(currAngle + totalAngle_6));","vec2 nextNormal = normalize(vec2(nextPt.x/(a2), nextPt.y/(b2)));","nextPt += halfWidth*nextNormal;","vec2 precPt = vec2(a*cos(currAngle - totalAngle_6), b*sin(currAngle - totalAngle_6));","vec2 precNormal = normalize(vec2(precPt.x/(a2), precPt.y/(b2)));","precPt += halfWidth*precNormal;","if (frac == 0.0) {","vec2 next_ = nextPt;","_computeVertices(currPt, next_, localNormal, nextNormal);","} else if (frac == 1.0) {","vec2 prec_ = precPt;","_computeVertices(prec_, currPt, precNormal, localNormal);","} else {","computeImpostorVertices(precPt, currPt, nextPt, precNormal, localNormal, nextNormal);","}","_localPosition = currPt;","_localPosition += tolerance*localNormal;","}","float cosO = instanceOffsetAndAngles.x;","float sinO = instanceOffsetAndAngles.y;","mat2 rotMatrix = mat2(cosO, sinO, -sinO, cosO);","ioWorldViewTS.Position = viewTr + vec3( rotMatrix*_localPosition + instancePosition.xy, instancePosition.z);","myViewPos = viewTr.xy + _localPosition + instancePosition.xy;","}"].join("\n"),ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","vRadiiAndHWidth = vec3(instanceRadiiAndWidth.xy, halfWidth);","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","float totalAngle = instanceOffsetAndAngles.z;","float startAngle = instanceOffsetAndAngles.w;","vStartAngle = startAngle;","vEndAngle = startAngle+totalAngle;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float a = vRadiiAndHWidth.x;","float b = vRadiiAndHWidth.y;","float halfWidth = vRadiiAndHWidth.z;","float startAngle = vStartAngle;","float endAngle = vEndAngle;","if (b > a) {","float totalAngle = endAngle - startAngle;","startAngle += PI_2;","if (startAngle >= PI2) startAngle -= PI2;","endAngle = startAngle + totalAngle;","}","float dist;","bool inEllipse = transX*transX/(a*a) + transY*transY/(b*b) < 1.0;","#ifdef CONSIDER_ARC","if (inEllipse) dist = (distanceToArc(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth)).x;","else dist = (distanceToEllipse(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth)).x;","#else","dist = (distanceToEllipse(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth)).x;","#endif","float value = dist/halfWidth;",i,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}},h={get_pdsfx_uniforms:function(){return Object.assign({},u)},get_pdsfx_varyings:function(){return Object.assign({},a,o,c)},VS_global:["float fartheringAlpha;","vec3 viewTr;","float halfWidth;","float ratio;","vec2 myViewPos;",r.compute_ellipse_vertices,r.conservative_rasterization].join("\n"),FS_global:[r.distance_to_arc_ellipse,r.antialiasing_pattern,"bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:f.VS_ov.ComputeCommonValues,ProcessViewTangentSpace:f.VS_ov.ProcessViewTangentSpace,ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","vRadiiAndHWidth = vec3(instanceRadiiAndWidth.xy, halfWidth);","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","float totalAngle = instanceOffsetAndAngles.z;","float startAngle = instanceOffsetAndAngles.w;","vStartAngle = startAngle;","vEndAngle = startAngle+totalAngle;","vIntegralFirstTerm = integralFirstTerms;","patternOffset = instancePatternOffset;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float a = vRadiiAndHWidth.x;","float b = vRadiiAndHWidth.y;","float a2 = a*a;","float b2 = b*b;","float halfWidth = vRadiiAndHWidth.z;","float startAngle = vStartAngle;","float endAngle = vEndAngle;","if (b > a) {","float totalAngle = endAngle - startAngle;","startAngle += PI_2;","if (startAngle >= PI2) startAngle -= PI2;","endAngle = startAngle + totalAngle;","}","vec3 results;","bool inEllipse = transX*transX/(a*a) + transY*transY/(b*b) < 1.0;","#ifdef CONSIDER_ARC","if (inEllipse) results = distanceToArc(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth);","else results = distanceToEllipse(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth);","#else","results = distanceToEllipse(startAngle, endAngle, a, b, vec2(transX, transY), halfWidth);","#endif","float dist = results.x;","float value = dist/halfWidth;",i,"float e2 = a > b ? (1.0 - b2/a2) : (1.0 - a2/b2);","float e4 = e2*e2;","float e6 = e4*e2;","float e8 = e4*e4;","vec4 excentricities = vec4(e2, e4, e6, e8);","vec4 taylorCoeffsTimesOtherCoeffs = vec4(-0.25, -0.00390625, -0.0003255208333333333, -0.000012715657552083334);","vec2 ptOnEllipse = results.yz;","float _cos = ptOnEllipse.x/a;","float _sin = ptOnEllipse.y/b;","if (b > a) {","_cos = -ptOnEllipse.y/b;","_sin = ptOnEllipse.x/a;","}","float currAngle = computeClampedAngle(_cos, _sin);","float angle2 = 2.0*currAngle;","float sin_angle2 = sin(angle2);","float angle4 = 4.0*currAngle;","float sin_angle4 = sin(angle4);","float angle6 = 6.0*currAngle;","float sin_angle6 = sin(angle6);","float angle8 = 8.0*currAngle;","float sin_angle8 = sin(angle8);","vec4 integralSecondTerm = vec4(","  currAngle + _sin*_cos,","  12.0*currAngle + 8.0*sin_angle2 + sin_angle4,","  60.0*currAngle + 45.0*sin_angle2 + 9.0*sin_angle4 + sin_angle6,","  840.0*currAngle + 672.0*sin_angle2 + 168.0*sin_angle4 + 32.0*sin_angle6 + 3.0*sin_angle8",");","float curvAbs = currAngle - startAngle ","\t\t\t\t+  excentricities.x*taylorCoeffsTimesOtherCoeffs.x*(vIntegralFirstTerm.x + integralSecondTerm.x) ","\t\t\t\t+  excentricities.y*taylorCoeffsTimesOtherCoeffs.y*(vIntegralFirstTerm.y + integralSecondTerm.y) ","\t\t\t\t+  excentricities.z*taylorCoeffsTimesOtherCoeffs.z*(vIntegralFirstTerm.z + integralSecondTerm.z) ","\t\t\t\t+  excentricities.w*taylorCoeffsTimesOtherCoeffs.w*(vIntegralFirstTerm.w + integralSecondTerm.w); ","curvAbs *= max(a,b);","curvAbs += patternOffset;","float vPatternSize = patternArray[PATTERN_SIZE-1];",r.patterns_fragment,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}},p={get_pdsfx_uniforms:function(){return Object.assign({},d)},get_pdsfx_varyings:function(){return Object.assign({},a,s)},VS_global:["float fartheringAlpha;","vec3 viewTr;","float halfWidth;","float ratio;","vec2 myViewPos;",r.conservative_rasterization].join("\n"),FS_global:["bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","mat4 PM = vGetProjectionMatrix();","fartheringAlpha = 1.0;","float cameraTop = 1.0/PM[1][1];","ratio = cst/cameraTop;","halfWidth = instanceRadiiAndAngles.y;","clampToOnePixelSize(halfWidth);","mat4 viewM = vGetViewMatrix();","viewTr = vec3(viewM[3][0], viewM[3][1], viewM[3][2]);","}"].join("\n"),ProcessViewTangentSpace:["void ProcessViewTangentSpace(inout TangentSpace ioWorldViewTS) {","vec2 _localPosition;","float totalAngle = instanceRadiiAndAngles.z;","float startAngle = instanceRadiiAndAngles.w;","vec3 infos = vGetAttribPosition();","float inOrOut = infos.x;","float frac = infos.y;","float currAngle = frac*totalAngle + startAngle;","float cosCurr = cos(currAngle);","float sinCurr = sin(currAngle);","float r = instanceRadiiAndAngles.x;","float coeff = cos(totalAngle/12.0);","float nbPixels = halfWidth*ratio;",e,"if (inOrOut < 0.0)","_localPosition = (r-halfWidth-tolerance)*vec2(cosCurr, sinCurr);","else","_localPosition = (r+halfWidth+tolerance)*vec2(cosCurr, sinCurr)/coeff;","vec3 mvPosition = viewTr + vec3( _localPosition+instancePosition.xy, instancePosition.z);","myViewPos = mvPosition.xy;","ioWorldViewTS.Position = mvPosition;","}"].join("\n"),ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vRadius = instanceRadiiAndAngles.x;","vHalfWidth = halfWidth;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float transX_2 = transX*transX;","float transY_2 = transY*transY;","float halfWidth = vHalfWidth;","float dist = abs(vRadius - length(vec2(transX, transY)));","float value = dist/halfWidth;",i,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}},g={get_pdsfx_uniforms:function(){return Object.assign({},u)},get_pdsfx_varyings:function(){return Object.assign({},a,s,l)},VS_global:["float fartheringAlpha;","vec3 viewTr;","float halfWidth;","float ratio;","vec2 myViewPos;",r.conservative_rasterization].join("\n"),FS_global:["#define PI 3.1415926535897932384","#define PI2 6.283185307179586","#define PI_2 1.5707963267948966",n,r.antialiasing_pattern,"bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:p.VS_ov.ComputeCommonValues,ProcessViewTangentSpace:p.VS_ov.ProcessViewTangentSpace,ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vRadius = instanceRadiiAndAngles.x;","vHalfWidth = halfWidth;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","float startAngle = instanceRadiiAndAngles.w;","vStartAngle = startAngle;","vPatternOffset = instancePatternOffset;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float transX_2 = transX*transX;","float transY_2 = transY*transY;","float halfWidth = vHalfWidth;","float dist = abs(vRadius - length(vec2(transX, transY)));","float value = dist/halfWidth;",i,"vec2 normal = normalize(vec2(transX, transY));","float _cos = normal.x;","float _sin = normal.y;","float currAngle = computeClampedAngle(_cos, _sin);","float vPatternSize = patternArray[PATTERN_SIZE-1];","float patternOffset = vPatternOffset;","float curvAbs = patternOffset + (currAngle - vStartAngle)*vRadius;",r.patterns_fragment,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}};return{ArcEllipse:f,ArcEllipsePattern:h,ArcCircle:p,ArcCircleFill:{get_pdsfx_uniforms:function(){return Object.assign({},d)},get_pdsfx_varyings:function(){return Object.assign({},a,{vRadius:{type:"f"}})},VS_global:["float fartheringAlpha;","vec3 viewTr;","float radius;","float ratio;","vec2 myViewPos;",r.conservative_rasterization].join("\n"),FS_global:["bool toDiscard;","float alpha;"].join("\n"),VS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","mat4 PM = vGetProjectionMatrix();","fartheringAlpha = 1.0;","float cameraTop = 1.0/PM[1][1];","ratio = cst/cameraTop;","radius = instanceRadiiAndAngles.x;","clampToOnePixelSize(radius);","mat4 viewM = vGetViewMatrix();","viewTr = vec3(viewM[3][0], viewM[3][1], viewM[3][2]);","}"].join("\n"),ProcessViewTangentSpace:["void ProcessViewTangentSpace(inout TangentSpace ioWorldViewTS) {","vec2 _localPosition;","float totalAngle = instanceRadiiAndAngles.y;","float startAngle = instanceRadiiAndAngles.z;","vec3 infos = vGetAttribPosition();","float notCenter = infos.x;","float frac = infos.y;","float currAngle = frac*totalAngle + startAngle;","float cosCurr = cos(currAngle);","float sinCurr = sin(currAngle);","float coeff = cos(totalAngle/12.0);","float nbPixels = radius*ratio;",e,"if (notCenter > 0.0)","_localPosition = (radius+tolerance)*vec2(cosCurr, sinCurr)/coeff;","else","_localPosition = vec2(0.0, 0.0);","vec3 mvPosition = viewTr + vec3( _localPosition+instancePosition.xy, instancePosition.z);","myViewPos = mvPosition.xy;","ioWorldViewTS.Position = mvPosition;","}"].join("\n"),ComputeVaryingValues:["void ComputeVaryingValues() {","vec2 viewCenterPos = viewTr.xy + instancePosition.xy;","transX = myViewPos.x - viewCenterPos.x;","transY = myViewPos.y - viewCenterPos.y;","vRadius = radius;","vInstanceColor = instanceColor;","vInstanceColor.w *= fartheringAlpha;","}"].join("\n")},FS_ov:{ComputeCommonValues:["void ComputeCommonValues() {","alpha = 1.0;","float transX_2 = transX*transX;","float transY_2 = transY*transY;","float normPoint = length(vec2(transX, transY));","float value = normPoint/vRadius;",i,"}"].join("\n"),ComputeDiscard:"bool ComputeDiscard() { return toDiscard; }",ProcessFinalColor:"void ProcessFinalColor(inout vec4 ioFinalColor) { ioFinalColor = vec4(vInstanceColor.xyz, vInstanceColor.w*alpha); }"}},ArcCirclePattern:g}}),define("SVGLoader/InstancedArcsShaders",["DS/SVGLoader/InstancedArcsShaders","DS/DSMigration/DSMigration"],function(t,e){return e.deprecateModule("SVGLoader/InstancedArcsShaders"),t}),define("DS/SVGLoader/PolygonRenderer",["DS/Visualization/PolygonTessellator"],function(t){"use strict";return t}),define("DS/SVGLoader/SVGRenderableStrokePolygonSet",["DS/Visualization/ThreeJS_DS","DS/SVGLoader/SVGRenderable","DS/Visualization/SceneGraphFactory","DS/Visualization/Node3D","DS/Mesh/MeshUtils","DS/SVGLoader/SVGMeshMaterial","DS/SVGLoader/SVGLineMaterial","DS/SVGLoader/PolygonRenderer"],function(t,e,n,i,r,a,o,s){"use strict";return e.extend({init:function(t,e){this._parent(!1,e),this.gas=t,this.zIndex=this.context.computeZIndex(this.gas),this.polygonRenderer=new s},startNewPolygon:function(){this.polygonRenderer._startNewPolygon()},addPointToCurrentPolygon:function(t,e,n){this.polygonRenderer.addPointToCurrentPolygonLoop(t,e,{dashOffset:n})},closePolygon:function(){this.polygonRenderer.closeCurrentPolygonLoop()},endPolygonGroup:function(){this.polygonRenderer.endCurrentPolygon()},createNode3D:function(t){var e,n=new i;if(this.gas.attributes.strokeColor&&(e=this.createStrokeNode3D(t))&&n.addChild(e),this.gas.attributes.fillColor){var r=new a({color:this.gas.attributes.fillColor,force:!0,viewBox:t}),o=this.context.getZFromZIndex(this.zIndex);(e=this.polygonRenderer.createNode3D(r,o))&&n.addChild(e)}return n},createStrokeNode3D:function(e){var i=this.polygonRenderer;if(!i.polygons.length)return null;var a,o,s=this.gas.attributes.dashValue,l={color:this.gas.attributes.strokeColor,lineWidth:this.gas.attributes.strokeWidth,force:!0};if(this.gas.attributes.lineCap&&(l.linecap=this.gas.attributes.lineCap),this.gas.attributes.lineJoin&&(l.linejoin=this.gas.attributes.lineJoin),this.gas.attributes.miterLimit&&(l.miterLimit=this.gas.attributes.miterLimit),s){for(a=new Float32Array(s.length),o=0;o<s.length;o++)a[o]=s[o];l.dashPattern=a}var c,d,u,f,h=new t.SVGLineMaterial(l),p=[];for(f=this.context.getZFromZIndex(this.zIndex),d=0;d<i.polygons.length;d++)for(u=i.polygons[d].points,c=0;c<u.length;c+=2)p.push(new t.Vector3(u[c],-u[c+1],f));var g,v,S,m=[],x=0,y=[];for(d=0;d<i.polygons.length;d++){for(v=x,g=(u=i.polygons[d].points).length/2,S=0;S<g-1;S++)m.push(x),m.push(x+1),0===S?y.push(i.polygons[d].userData.dashOffset):y.push(0),y.push(0),x++;i.polygons[d].closed&&(m.push(x),m.push(v),y.push(0),y.push(0)),x++}var A=n.createLineNode({points:p,idx:m,patternOffsets:y,material:h,drawMode:r.ConnectivityTypeEnum.LINES});return A.setSSAO(!1),A.setFrustumCulled(!1),A}})}),define("DS/SVGLoader/Instanced2DArcEllipsePattern",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(t,e,n,i,r,a){"use strict";var o=e.extend({init:function(e){this._parent(e.name),this._name=e.name;for(var i,o=e.nbInstances||1,s=function(t,e){return{0:-e,1:.5*(-e-Math.sin(e)*Math.cos(e)),2:.03125*(-12*e-8*Math.sin(2*e)-Math.sin(4*e)),3:1/192*(-60*e-45*Math.sin(2*e)-9*Math.sin(4*e)-Math.sin(6*e)),4:(-840*e-672*Math.sin(2*e)-168*Math.sin(4*e)-32*Math.sin(6*e)-3*Math.sin(8*e))/3072}[t]},l={},c=0;c<o;c++){var d,u=e.xRadii[c],f=e.yRadii[c],h=.5*e.lineWidths[c],p=[];i=0;for(var g=0;g<e.patterns[c].length;g++)i+=e.patterns[c][g],p[g]=i;var v=h>f*f/u||h>u*u/f?1:0;l[p]&&l[p][v]?d=l[p][v]:(d={considerArc:v,nbInstances:0,pattern:p,bbox:null,positions:[],colors:[],radiiHalfWidth:[],patternOffsets:[],integralFirstTerms:[],offsets_and_angles:[],createMesh3D:function(){var t={data:this.positions,type:"v3",isFlattened:!0,attribName:"instancePosition"},e={data:this.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},i={data:this.radiiHalfWidth,type:"v3",isFlattened:!0,attribName:"instanceRadiiAndWidth"},o={data:this.patternOffsets,type:"f",isFlattened:!0,attribName:"instancePatternOffset"},s={data:this.integralFirstTerms,type:"v4",isFlattened:!0,attribName:"integralFirstTerms"},l={data:this.offsets_and_angles,type:"v4",isFlattened:!0,attribName:"instanceOffsetAndAngles"},c=a.createMaterial(r.ArcEllipsePattern,this.considerArc,this.pattern),d=a.createArcLoopMesh(c),u=new n(d,null);return u.setMaterial(c),u.setInstancingParameters(this.nbInstances,[t,e,i,o,s,l],"instance"),u.forceBoundingBox(this.bbox),u.setShadow(!1),u.setFrustumCulled(!1),u.setSSAO(!1),u}},l[p]||(l[p]=[null,null]),l[p][v]=d),d.nbInstances++;var S=a.computeArcBBox(new t.Vector3(e.positions[3*c],e.positions[3*c+1],e.positions[3*c+2]),u,f,e.startAngles[c],e.totalAngles[c],e.offsets[c],e.lineWidths[c]);d.bbox?d.bbox.mergeWithBox(S):d.bbox=S,d.positions.push(e.positions[3*c]),d.positions.push(e.positions[3*c+1]),d.positions.push(e.positions[3*c+2]),d.colors.push(e.colors[4*c]),d.colors.push(e.colors[4*c+1]),d.colors.push(e.colors[4*c+2]),d.colors.push(e.colors[4*c+3]),d.radiiHalfWidth.push(u),d.radiiHalfWidth.push(f),d.radiiHalfWidth.push(h),d.patternOffsets.push(e.patternOffsets[c]);var m=u>f?e.startAngles[c]:e.startAngles[c]+.5*Math.PI;d.integralFirstTerms.push(s(1,m)),d.integralFirstTerms.push(s(2,m)),d.integralFirstTerms.push(s(3,m)),d.integralFirstTerms.push(s(4,m)),d.offsets_and_angles.push(Math.cos(e.offsets[c])),d.offsets_and_angles.push(Math.sin(e.offsets[c])),d.offsets_and_angles.push(e.totalAngles[c]),d.offsets_and_angles.push(e.startAngles[c])}for(var x in l)l[x][0]&&this.addChild(l[x][0].createMesh3D()),l[x][1]&&this.addChild(l[x][1].createMesh3D());return this},setName:function(t){this._name=t},getNodeType:function(){return"Node3D"}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcEllipsePattern",o)}),define("SVGLoader/Instanced2DArcEllipsePattern",["DS/SVGLoader/Instanced2DArcEllipsePattern","DS/DSMigration/DSMigration"],function(t,e){return e.deprecateModule("SVGLoader/Instanced2DArcEllipsePattern"),t}),define("DS/SVGLoader/Instanced2DArcCirclePattern",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(t,e,n,i,r,a){"use strict";var o=e.extend({init:function(e){this._parent(e.name),this._name=e.name;for(var i,o=e.nbInstances||1,s={},l=0;l<o;l++){var c,d=[];i=0;for(var u=0;u<e.patterns[l].length;u++)i+=e.patterns[l][u],d[u]=i;s[d]?c=s[d]:(c={nbInstances:0,pattern:d,bbox:null,positions:[],colors:[],radiiHalfWidthAngles:[],patternOffsets:[],createMesh3D:function(){var t={data:this.positions,type:"v3",isFlattened:!0,attribName:"instancePosition"},e={data:this.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},i={data:this.radiiHalfWidthAngles,type:"v4",isFlattened:!0,attribName:"instanceRadiiAndAngles"},o={data:this.patternOffsets,type:"f",isFlattened:!0,attribName:"instancePatternOffset"},s=a.createMaterial(r.ArcCirclePattern,null,this.pattern),l=a.createArcLoopMesh(s),c=new n(l,null);return c.setMaterial(s),c.setInstancingParameters(this.nbInstances,[t,e,i,o],"instance"),c.forceBoundingBox(this.bbox),c.setShadow(!1),c.setFrustumCulled(!1),c.setSSAO(!1),c}},s[d]=c),c.nbInstances++;var f=a.computeArcBBox(new t.Vector3(e.positions[3*l],e.positions[3*l+1],e.positions[3*l+2]),e.radii[l],e.radii[l],e.startAngles[l],e.totalAngles[l],0,e.lineWidths[l]);c.bbox?c.bbox.mergeWithBox(f):c.bbox=f,c.positions.push(e.positions[3*l]),c.positions.push(e.positions[3*l+1]),c.positions.push(e.positions[3*l+2]),c.colors.push(e.colors[4*l]),c.colors.push(e.colors[4*l+1]),c.colors.push(e.colors[4*l+2]),c.colors.push(e.colors[4*l+3]),c.radiiHalfWidthAngles.push(e.radii[l]),c.radiiHalfWidthAngles.push(.5*e.lineWidths[l]),c.radiiHalfWidthAngles.push(e.totalAngles[l]),c.radiiHalfWidthAngles.push(e.startAngles[l]),c.patternOffsets.push(e.patternOffsets[l])}for(var h in s)this.addChild(s[h].createMesh3D());return this},setName:function(t){this._name=t},getNodeType:function(){return"Node3D"}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcCirclePattern",o)}),define("SVGLoader/Instanced2DArcCirclePattern",["DS/SVGLoader/Instanced2DArcCirclePattern","DS/DSMigration/DSMigration"],function(t,e){return e.deprecateModule("SVGLoader/Instanced2DArcCirclePattern"),t}),define("DS/SVGLoader/Instanced2DArcCircle",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(t,e,n,i,r,a){"use strict";var o=n.extend({init:function(e){this._name=e.name;var n=a.createMaterial(r.ArcCircle,!1,null),i=e.nbInstances||1,o=a.createArcLoopMesh(n);this._parent(o,e.name),this.setShadow(!1),this.setFrustumCulled(!1);for(var s,l=e.positions,c={data:l,type:"v3",isFlattened:!0,attribName:"instancePosition"},d=new t.Box3,u=0;u<i;u++)s=a.computeArcBBox(new t.Vector3(l[3*u],l[3*u+1],l[3*u+2]),e.radii[u],e.radii[u],e.startAngles[u],e.totalAngles[u],0,e.lineWidths[u]),d.mergeWithBox(s);for(var f={data:e.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},h=[],p=0;p<i;p++){var g=.5*e.lineWidths[p],v=e.radii[p];h.push(v),h.push(g),h.push(e.totalAngles[p]),h.push(e.startAngles[p])}var S={data:h,type:"v4",isFlattened:!0,attribName:"instanceRadiiAndAngles"};return this.setMaterial(n),this.setInstancingParameters(i,[c,S,f],"instance"),this.forceBoundingBox(d),this.setSSAO(!1),this},setName:function(t){this._name=t},getNodeType:function(){return"Mesh3D"},setRatio:function(t){console.warn("setRatio is not supported for Instanced2DArcCircle")},setBillboardData:function(t,e,n){console.warn("setBillboardData is not supported for Instanced2DArcCircle")},setFixedSizeCameraName:function(t){console.warn("setFixedSizeCameraName is not supported for Instanced2DArcCircle")},setFixedSizeCenter:function(t){console.warn("setFixedSizeCenter is not supported for Instanced2DArcCircle")}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcCircle",o)}),define("SVGLoader/Instanced2DArcCircle",["DS/SVGLoader/Instanced2DArcCircle","DS/DSMigration/DSMigration"],function(t,e){return e.deprecateModule("SVGLoader/Instanced2DArcCircle"),t}),define("DS/SVGLoader/Instanced2DArcCircleFill",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(t,e,n,i,r,a){"use strict";var o=n.extend({init:function(e){this._name=e.name;var n=a.createMaterial(r.ArcCircleFill,!1,null),i=e.nbInstances||1,o=a.createArcFillMesh(n);this._parent(o,e.name),this.setShadow(!1),this.setFrustumCulled(!1);for(var s,l=e.positions,c={data:l,type:"v3",isFlattened:!0,attribName:"instancePosition"},d=new t.Box3,u=0;u<i;u++)s=a.computeArcFillBBox(new t.Vector3(l[3*u],l[3*u+1],l[3*u+2]),e.radii[u],e.radii[u],e.startAngles[u],e.totalAngles[u],0),d.mergeWithBox(s);for(var f={data:e.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},h=[],p=0;p<i;p++){var g=e.radii[p];h.push(g),h.push(e.totalAngles[p]),h.push(e.startAngles[p])}var v={data:h,type:"v3",isFlattened:!0,attribName:"instanceRadiiAndAngles"};return this.setMaterial(n),this.setInstancingParameters(i,[c,v,f],"mesh"),this.forceBoundingBox(d),this.setSSAO(!1),this},setName:function(t){this._name=t},getNodeType:function(){return"Mesh3D"},setRatio:function(t){console.warn("setRatio is not supported for Instanced2DArcCircleFill")},setBillboardData:function(t,e,n){console.warn("setBillboardData is not supported for Instanced2DArcCircleFill")},setFixedSizeCameraName:function(t){console.warn("setFixedSizeCameraName is not supported for Instanced2DArcCircleFill")},setFixedSizeCenter:function(t){console.warn("setFixedSizeCenter is not supported for Instanced2DArcCircleFill")}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcCircleFill",o)}),define("SVGLoader/Instanced2DArcCircleFill",["DS/SVGLoader/Instanced2DArcCircleFill","DS/DSMigration/DSMigration"],function(t,e){return e.deprecateModule("SVGLoader/Instanced2DArcCircleFill"),t}),define("DS/SVGLoader/Instanced2DArcEllipse",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/Mesh3D","DS/Mesh/MeshUtils","DS/SVGLoader/InstancedArcsShaders","DS/SVGLoader/InstancedArcsUtils"],function(t,e,n,i,r,a){"use strict";var o=e.extend({init:function(e){this._parent(e.name),this._name=e.name;for(var i=e.nbInstances||1,o={},s=0;s<i;s++){var l,c=e.xRadii[s],d=e.yRadii[s],u=.5*e.lineWidths[s],f=c*c,h=u*u,p=d*d,g=(Math.cos(e.startAngles[s]),Math.cos(e.startAngles[s]+e.totalAngles[s]),Math.sin(e.startAngles[s]),Math.sin(e.startAngles[s]+e.totalAngles[s]),c>d?Math.sqrt((h-p)/(p-f)):Math.sqrt((h-f)/(f-p)),u>d*d/c||u>c*c/d?1:0);o[g]?l=o[g]:(l={considerArc:g,nbInstances:0,bbox:null,positions:[],colors:[],radiiHalfWidth:[],offsets_and_angles:[],createMesh3D:function(){var t={data:this.positions,type:"v3",isFlattened:!0,attribName:"instancePosition"},e={data:this.colors,type:"v4",isFlattened:!0,attribName:"instanceColor"},i={data:this.radiiHalfWidth,type:"v3",isFlattened:!0,attribName:"instanceRadiiAndWidth"},o={data:this.offsets_and_angles,type:"v4",isFlattened:!0,attribName:"instanceOffsetAndAngles"},s=a.createMaterial(r.ArcEllipse,this.considerArc,null),l=a.createArcLoopMesh(s),c=new n(l,null);return c.setMaterial(s),c.setInstancingParameters(this.nbInstances,[t,e,i,o],"instance"),c.forceBoundingBox(this.bbox),c.setShadow(!1),c.setFrustumCulled(!1),c.setSSAO(!1),c}},o[g]=l),l.nbInstances++;var v=a.computeArcBBox(new t.Vector3(e.positions[3*s],e.positions[3*s+1],e.positions[3*s+2]),c,d,e.startAngles[s],e.totalAngles[s],e.offsets[s],e.lineWidths[s]);l.bbox?l.bbox.mergeWithBox(v):l.bbox=v,l.positions.push(e.positions[3*s]),l.positions.push(e.positions[3*s+1]),l.positions.push(e.positions[3*s+2]),l.colors.push(e.colors[4*s]),l.colors.push(e.colors[4*s+1]),l.colors.push(e.colors[4*s+2]),l.colors.push(e.colors[4*s+3]),l.radiiHalfWidth.push(c),l.radiiHalfWidth.push(d),l.radiiHalfWidth.push(u),l.offsets_and_angles.push(Math.cos(e.offsets[s])),l.offsets_and_angles.push(Math.sin(e.offsets[s])),l.offsets_and_angles.push(e.totalAngles[s]),l.offsets_and_angles.push(e.startAngles[s])}for(var S in o)o[S]&&this.addChild(o[S].createMesh3D());return this},setName:function(t){this._name=t},getNodeType:function(){return"Node3D"}});return UWA.namespace("THREEDS/Nodes/Instanced2DArcEllipse",o)}),define("SVGLoader/Instanced2DArcEllipse",["DS/SVGLoader/Instanced2DArcEllipse","DS/DSMigration/DSMigration"],function(t,e){return e.deprecateModule("SVGLoader/Instanced2DArcEllipse"),t}),define("DS/SVGLoader/SVGRenderableStrokeArcSet",["DS/SVGLoader/SVGRenderable","DS/Visualization/ThreeJS_DS","DS/SVGLoader/Instanced2DArcEllipse","DS/SVGLoader/Instanced2DArcCircle","DS/Visualization/Node3D","DS/Visualization/SceneGraphFactory","DS/SVGLoader/Instanced2DArcEllipsePattern","DS/SVGLoader/Instanced2DArcCirclePattern"],function(t,e,n,i,r,a,o,s){"use strict";return t.extend({init:function(t,e){this._parent(!1,e),this.arcDataArray=[],this.activatePatterns=t},isEmpty:function(){return!this.arcDataArray.length},addArcData:function(t){t&&t.gas&&t.gas.getStrokeColor()&&(t.zIndex=this.context.computeZIndex(t.gas),this.arcDataArray.push(t))},createNode3D:function(t){if(!this.arcDataArray.length)return null;var e,a,l,c,d,u,f,h,p={totalAngles:[],startAngles:[],positions:[],xRadii:[],yRadii:[],offsets:[],lineWidths:[],colors:[],patterns:this.activatePatterns?[]:null,patternOffsets:this.activatePatterns?[]:null,nbInstances:0},g={totalAngles:[],startAngles:[],positions:[],radii:[],offsets:[],lineWidths:[],colors:[],patterns:this.activatePatterns?[]:null,patternOffsets:this.activatePatterns?[]:null,nbInstances:0};for(e=0;e<this.arcDataArray.length;e++)(l=this.arcDataArray[e])&&(l.xRadius===l.yRadius?(g.radii.push(l.xRadius),a=g):(p.xRadii.push(l.xRadius),p.yRadii.push(l.yRadius),a=p),a.totalAngles.push(l.totalAngle),a.startAngles.push(l.startAngle),a.positions.push(l.position.x),a.positions.push(l.position.y),a.positions.push(this.context.getZFromZIndex(l.zIndex)),a.offsets.push(l.offset),a.lineWidths.push(l.gas.getStrokeLineWidth()),c=l.gas.getStrokeColor(),a.colors.push(c.r),a.colors.push(c.g),a.colors.push(c.b),this.activatePatterns&&(d=this.computeDashData(l),a.patterns.push(d.dashArray),a.patternOffsets.push(d.dashOffset)),a.colors.push(1),a.nbInstances++);return(p.nbInstances||g.nbInstances)&&(h=new r),p.nbInstances&&(u=this.activatePatterns?new o(p):new n(p),h.addChild(u)),g.nbInstances&&(f=this.activatePatterns?new s(g):new i(g),h.addChild(f)),h},computeDashData:function(t){var e;if(t.invert){var n,i=t.gas.getDashArray(),r=[];for(n=0;n<i.length;n++)r.push(i[i.length-n-1]);r.splice(0,0,r[r.length-1]),r.pop();var a=0;for(n=0;n<r.length;n++)a+=r[n];e={dashArray:r,dashOffset:a-(t.length+t.dashOffset-r[0])%a}}else e={dashArray:t.gas.getDashArray(),dashOffset:t.dashOffset};return e}})}),define("DS/SVGLoader/SVGNode_unknown",["DS/SVGLoader/SVGNode_abstract"],function(t){"use strict";return t.extend({init:function(t){this._parent(t),this.unknown=!0,console.log("SVGLoader: unknown node '"+this.node.nodeName+"'")}})}),define("DS/SVGLoader/SVGRenderableFilledCircleSet",["DS/SVGLoader/SVGRenderable","DS/Visualization/ThreeJS_DS","DS/SVGLoader/Instanced2DArcCircleFill"],function(t,e,n){"use strict";return t.extend({init:function(t){this._parent(!1,t),this.circleDataArray=[]},isEmpty:function(){return!this.circleDataArray},addFilledCircle:function(t,e,n,i){var r=this.context.computeZIndex(i);this.circleDataArray.push({cx:t,cy:e,r:n,gas:i,zIndex:r})},createNode3D:function(t){if(!this.circleDataArray.length)return null;var e,i,r,a,o={totalAngles:[],startAngles:[],positions:[],radii:[],colors:[],nbInstances:0};for(e=0;e<this.circleDataArray.length;e++)i=this.circleDataArray[e],o.totalAngles.push(2*Math.PI),o.startAngles.push(0),o.positions.push(i.cx),o.positions.push(-i.cy),o.positions.push(this.context.getZFromZIndex(i.zIndex)),o.radii.push(i.r),r=i.gas.getFillColor(),o.colors.push(r.r),o.colors.push(r.g),o.colors.push(r.b),o.colors.push(1),o.nbInstances++;return o.nbInstances>0&&(a=new n(o)),a}})}),define("DS/SVGLoader/SVGNode_image",["DS/SVGLoader/SVGNode_abstract","DS/SVGLoader/SVGLoaderUtils","DS/Visualization/ThreeJS_DS"],function(t,e,n){"use strict";return t.extend({init:function(t){this._parent(t)},fillRenderableBank:function(t,e){var n,i,r,a,o=this.node.getAttributeNS("http://www.w3.org/1999/xlink","href");o&&o.startsWith("data:")&&(n=parseFloat(this.node.getAttribute("x")),i=parseFloat(this.node.getAttribute("y")),r=parseFloat(this.node.getAttribute("width")),a=parseFloat(this.node.getAttribute("height")),t.getImageRenderable(n,i,r,a,o))}})}),define("DS/SVGLoader/SVGRenderableImage",["DS/SVGLoader/SVGRenderable","DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Visualization/SceneGraphFactory","DS/SVGLoader/SVGMeshMaterial"],function(t,e,n,i,r){"use strict";return t.extend({init:function(t,n,i,r,a,o,s){this._parent(!0,s),this.isImageReady=!1,this.x=t,this.y=n,this.width=i,this.height=r,this.zIndex=this.context.computeZIndex(null);var l=this;this.texture=e.ImageUtils.loadTexture(a,void 0,function(){l.isImageReady=!0,o(l)},function(){l.isImageReady=!0,l.texture=null,o(l)},void 0,!0)},createNode3D:function(t){if(!this.isImageReady||!this.texture)return null;var n=new r({map:this.texture,force:!0,transparent:!0,viewBox:t}),a=i.createRectangleNode({width:this.width,height:this.height,fill:!0,noEdge:!0,fillColor:null,material:n}),o=new e.Matrix4,s=new e.Vector3(this.x,-this.y-this.height,this.context.getZFromZIndex(this.zIndex));return o.setPosition(s),a.setMatrix(o),a.setSSAO(!1),a}})}),define("DS/SVGLoader/SVGNode_ellipse",["DS/SVGLoader/SVGNode_abstract","DS/Visualization/ThreeJS_DS","DS/SVGLoader/SVGLoaderUtils","DS/SVGLoader/SVGRenderableStrokeArcSet"],function(t,e,n,i){"use strict";return t.extend({init:function(t){this._parent(t)},fillRenderableBank:function(t,i){var r=i.buildChildGas(this.node),a=t.getStrokeArcSetRenderable(r),o=parseFloat(this.node.getAttributeNS(null,"cx")),s=parseFloat(this.node.getAttributeNS(null,"cy")),l=parseFloat(this.node.getAttributeNS(null,"rx")),c=parseFloat(this.node.getAttributeNS(null,"ry")),d=this.node.getAttributeNS(null,"transform"),u=d?n.parseTransformation(d):{matrix:new e.Matrix3,angle:0},f=u.matrix,h=u.angle,p=new e.Vector3(o,s,1);p.applyMatrix3(f),r.getStrokeColor()&&a.addArcData({xRadius:l,yRadius:c,totalAngle:2*Math.PI,startAngle:0,position:new e.Vector2(p.x,-p.y),offset:-h,gas:r})}})}),define("DS/SVGLoader/SVGGas",["UWA/Class","DS/SVGLoader/SVGLoaderUtils"],function(t,e){"use strict";window.linecaps=[],window.linejoins=[],window.miterLimits=[];var n=t.extend({init:function(t){var e;if(this.attributes={strokeWidth:1},t)for(e in t.attributes)this.attributes[e]=t.attributes[e]},setFromSVGNode:function(t){var n=t.getAttributeNS(null,"stroke");n&&("none"!==n?this.attributes.strokeColor=e.parseColor(n):delete this.attributes.strokeColor);var i=t.getAttributeNS(null,"fill");i&&"none"!==i&&(this.attributes.fillColor=e.parseColor(i));var r=t.getAttributeNS(null,"stroke-width");r&&(this.attributes.strokeWidth=parseFloat(r));var a,o,s=t.getAttributeNS(null,"stroke-dasharray");s&&(a=e.parseDashArray(s),this.attributes.dash=a.key,(o=a.value).length%2!=0&&(o=o.concat(o)),this.attributes.dashValue=o);var l=t.getAttributeNS(null,"stroke-linejoin");l&&(this.attributes.lineJoin=l);var c=t.getAttributeNS(null,"stroke-linecap");c&&(this.attributes.lineCap=c);var d=t.getAttributeNS(null,"stroke-miterlimit");d&&(this.attributes.miterLimit=parseFloat(d))},getStrokeLineWidth:function(){return this.attributes.strokeWidth},getStrokeColor:function(){return this.attributes.strokeColor},getFillColor:function(){return this.attributes.fillColor},getDashArray:function(){return this.attributes.dashValue},getLineCap:function(){return this.attributes.lineCap},getLineJoin:function(){return this.attributes.lineJoin},getMiterLimit:function(){return this.attributes.miterLimit},buildChildGas:function(t){var e=new n(this);return e.setFromSVGNode(t),e},isValid:function(){return!isNaN(this.attributes.strokeWidth)&&!(!this.attributes.fillColor&&!this.attributes.strokeColor)},isZCompatibleWithGas:function(t){return this.hasSameColorAs(t,"strokeColor")&&this.hasSameColorAs(t,"fillColor")},hasSameColorAs:function(t,e){var n=this.attributes[e],i=t.attributes[e];return!n&&!i||!(!n||!i)&&n.equals(i)}});return n}),define("DS/SVGLoader/SVGRenderableBank",["UWA/Class","DS/SVGLoader/SVGRenderableStrokePolygonSet","DS/SVGLoader/SVGRenderableStrokeArcSet","DS/SVGLoader/MultiIndexTable","DS/SVGLoader/SVGRenderableImage","DS/SVGLoader/SVGRenderableContext","DS/SVGLoader/SVGRenderableFilledCircleSet"],function(t,e,n,i,r,a,o){"use strict";return t.extend({init:function(){this.polygonSetRenderableTable=new i(["strokeWidth","strokeColor","fillColor","dash","lineCap","lineJoin","miterLimit"],["strokeWidth","strokeColor"]),this.arcSetRenderable=null,this.arcSetWithPatternRenderable=null,this.filledCircleSetRenderable=null,this.imageRenderables=[],this.nbImagesToLoad=0,this.destinationNode=null,this.onEnded=null,this.context=new a},setOnEndedCB:function(t){this.onEnded=t},hasImagesToLoad:function(){return this.nbImagesToLoad>0},getStrokePolygonSetRenderable:function(t){t.attributes.strokeWidth;var n=this.context;return this.polygonSetRenderableTable.getElement(t.attributes,function(){return new e(t,n)})},getStrokeArcSetRenderable:function(t){return t.attributes.dash?(this.arcSetWithPatternRenderable||(this.arcSetWithPatternRenderable=new n(!0,this.context)),this.arcSetWithPatternRenderable):(this.arcSetRenderable||(this.arcSetRenderable=new n(!1,this.context)),this.arcSetRenderable)},getFilledCircleSetRenderable:function(t){return this.filledCircleSetRenderable||(this.filledCircleSetRenderable=new o(this.context)),this.filledCircleSetRenderable},getImageRenderable:function(t,e,n,i,a){this.nbImagesToLoad++;var o=new r(t,e,n,i,a,this.onImageLoaded.bind(this),this.context);return this.imageRenderables.push(o),o},onImageLoaded:function(t,e){var n=t.createNode3D(this.viewBox);n&&this.destinationNode.addChild(n),this.nbImagesToLoad--,!this.nbImagesToLoad&&this.onEnded&&this.onEnded()},buildNodes:function(t,e,n){this.viewBox=e;var i,r,a=this.polygonSetRenderableTable.exportToArray();for(this.arcSetRenderable&&a.push(this.arcSetRenderable),this.arcSetWithPatternRenderable&&a.push(this.arcSetWithPatternRenderable),this.filledCircleSetRenderable&&a.push(this.filledCircleSetRenderable),i=0;i<a.length;i++)(r=a[i].createNode3D(e))&&(n&&r.exludeFromBounding(!0),t.addChild(r));this.destinationNode=t}})}),define("DS/SVGLoader/SVGNode_g",["DS/SVGLoader/SVGNode_abstract"],function(t){"use strict";return t.extend({init:function(t){this._parent(t)}})}),define("DS/SVGLoader/SVGNode_svg",["DS/SVGLoader/SVGNode_abstract","DS/Visualization/Node3D","DS/SVGLoader/SVGRenderableBank","DS/SVGLoader/SVGGas","DS/Visualization/ThreeJS_DS","DS/Visualization/SceneGraphFactory","DS/Mesh/Mesh","DS/SVGLoader/SVGLoaderUtils"],function(t,e,n,i,r,a,o,s){"use strict";return t.extend({init:function(t){this._parent(t)},buildNode3D:function(t,r){var a,o,s,l,c,d=this.getViewBox(),u=new e,f=1;function h(){0===--f&&r&&r()}for(o=0;o<this.children.length;o++)(s=this.children[o]).buildNode3D?(f++,a=s.buildNode3D(t+1,h),o>0&&a.setVisibility(!1),u.addChild(a)):(l||(c=new i,l=new n),s.fillRenderableBank(l,c));var p=u;if(l){0===t&&(p=new e,u.addChild(p));var g=null;if(d){u.getBoundingSphere();g=this.buildBgNode(d,l.context.getBgZ())}l.buildNodes(p,d,!!g),g&&p.addChild(g),l.hasImagesToLoad()&&(l.setOnEndedCB(h),f++)}return h(),u},buildBgNode:function(t,e){var n=new r.Color(16777215),i=this.node.style&&this.node.style.background;i&&(i=function(t){var e=t.indexOf("rgb");if(-1===e)return t;var n=t.substring(e),i=n.indexOf(")");if(-1===i)return t;return n=n.substring(0,i+1)}(i),n=s.parseColor(i));var o=new r.MeshBasicMaterial({color:n,force:!0}),l=a.createRectangleNode({width:t.width,height:t.height,fill:!0,material:o}),c=new r.Matrix4,d=new r.Vector3(t.x,t.y,e);return c.setPosition(d),l.setMatrix(c),l.setSSAO(!1),l},buildMaskNode:function(t,e){},getViewBox:function(){var t=this.node.getAttributeNS(null,"viewBox");if(!t)return null;var e=t.split(" "),n={x:parseFloat(e[0]),y:parseFloat(e[1]),width:parseFloat(e[2]),height:parseFloat(e[3])};return{x:n.x,y:-n.y-n.height,width:n.width,height:n.height}}})}),define("DS/SVGLoader/SVGNode_path",["DS/SVGLoader/SVGNode_abstract","DS/SVGLoader/SVGLoaderUtils","DS/SVGLoader/SVGRenderableStrokePolygonSet","DS/SVGLoader/SVGRenderableStrokeArcSet","DS/Visualization/ThreeJS_DS"],function(t,e,n,i,r){"use strict";var a=["M","m","A","a","L","l","Z","z"];function o(t,e,n,i){var r=Math.sqrt(t*t+e*e),a=Math.sqrt(n*n+i*i),o=Math.acos((t*n+e*i)/(r*a));return t*i-e*n<0&&(o*=-1),o}function s(t){if(0===t)return 1;var e,n=1,i=1;for(e=1;e<=t;e++)n*=e,i*=2;var r=n*i;e=0;var a=1;if(t>2)for(e=0;e<=t-2;e++)a*=2*e+1;return-a/r}function l(t,e,n){return{0:n-e,1:.5*(n+Math.sin(n)*Math.cos(n)-e-Math.sin(e)*Math.cos(e)),2:.03125*(12*n+8*Math.sin(2*n)+Math.sin(4*n)-12*e-8*Math.sin(2*e)-Math.sin(4*e)),3:1/192*(60*n+45*Math.sin(2*n)+9*Math.sin(4*n)+Math.sin(6*n)-60*e-45*Math.sin(2*e)-9*Math.sin(4*e)-Math.sin(6*e)),4:(840*n+672*Math.sin(2*n)+168*Math.sin(4*n)+32*Math.sin(6*n)+3*Math.sin(8*n)-840*e-672*Math.sin(2*e)-168*Math.sin(4*e)-32*Math.sin(6*e)-3*Math.sin(8*e))/3072}[t]}return t.extend({init:function(t){this._parent(t)},fillRenderableBank:function(t,n){var i,r,o,s,l,c=n.buildChildGas(this.node),d=t.getStrokePolygonSetRenderable(c),u=t.getStrokeArcSetRenderable(c),f=this.node.getAttributeNS(null,"d"),h=e.parseCommands(f,a),p=0,g=0,v=!1,S=!1,m=null,x=0;for(o=0;o<h.length;o++)switch((s=h[o])[0]){case"M":d.startNewPolygon(),x=0,m=[p=s[1],g=s[2]],d.addPointToCurrentPolygon(p,g,x);break;case"m":d.startNewPolygon(),x=0,m=[p+=s[1],g+=s[2]],d.addPointToCurrentPolygon(p,g,x);break;case"A":if(0===s[1]||0===s[2]){p=s[6],g=s[7],d.addPointToCurrentPolygon(p,g,x);break}v||(v=!0,S=!0),i=s[6],r=s[7],(l=this.buildArcData(p,g,i,r,s[1],s[2],s[3],s[4],s[5],c))&&(l.dashOffset=x),u.addArcData(l),l&&(x+=l.length),p=i,g=r,d.startNewPolygon(),d.addPointToCurrentPolygon(p,g,x);break;case"a":if(0===s[1]||0===s[2]){p+=s[6],g+=s[7],d.addPointToCurrentPolygon(p,g,x);break}v||(v=!0,S=!0),i=p+s[6],r=g+s[7],(l=this.buildArcData(p,g,i,r,s[1],s[2],s[3],s[4],s[5],c))&&(l.dashOffset=x),u.addArcData(l),l&&(x+=l.length),p=i,g=r,v=!0,S=!0,d.startNewPolygon(),d.addPointToCurrentPolygon(p,g,x);break;case"L":i=s[1],r=s[2],d.addPointToCurrentPolygon(i,r,x),x+=Math.sqrt((i-p)*(i-p)+(r-g)*(r-g)),p=i,g=r;break;case"l":i=p+s[1],r=g+s[2],d.addPointToCurrentPolygon(i,r,x),x+=Math.sqrt((i-p)*(i-p)+(r-g)*(r-g)),p=i,g=r;break;case"z":case"Z":v?(d.addPointToCurrentPolygon(m[0],m[1],x),d.startNewPolygon()):d.closePolygon(),v=!1,x=0}if(S&&c.attributes.fillColor)throw new Error("broken filled polygon!!");d.startNewPolygon(),d.endPolygonGroup()},buildArcData:function(t,e,n,i,r,a,s,l,c,d){if(s=Math.PI*s/180,t===n&&e===i)return null;var u=l?1:0,f=c?1:0,h=(t-n)/2,p=(e-i)/2,g=Math.cos(s)*h+Math.sin(s)*p,v=-Math.sin(s)*h+Math.cos(s)*p,S=g*g/((r=Math.abs(r))*r)+v*v/((a=Math.abs(a))*a);S>1&&(r*=1.001*Math.sqrt(S),a*=1.001*Math.sqrt(S));var m=Math.sqrt((r*r*a*a-r*r*v*v-a*a*g*g)/(r*r*v*v+a*a*g*g));u===f&&(m*=-1);var x=m*r*v/a,y=-m*a*g/r,A=Math.cos(s)*x-Math.sin(s)*y+(t+n)/2,b=Math.sin(s)*x+Math.cos(s)*y+(e+i)/2,C=(g-x)/r,_=(v-y)/a,D=(-g-x)/r,P=(-v-y)/a,$=o(1,0,C,_),V=o(C,_,D,P)%(2*Math.PI);return 0===f&&V>0&&(V-=2*Math.PI),1===f&&V<0&&(V+=2*Math.PI),this.buildArcDataFinal(A,b,r,a,$,V,s,d)},buildArcDataFinal:function(t,e,n,i,a,o,s,l){n===i&&(a+=s,s=0),a*=-1;var c=!1;(o*=-1)<0&&(a+=o,o*=-1,c=!0);var d={totalAngle:o,startAngle:a=function(t){var e=t%(2*Math.PI);e<0&&(e+=2*Math.PI);return e}(a),position:new r.Vector2(t,-e),xRadius:n,yRadius:i,offset:-s,gas:l,invert:c};return d.length=this.computeArcLength(d),d},computeArcLength:function(t){if(!t)return 0;var e=t.startAngle+t.offset,n=e+t.totalAngle;return function(t,e,n,i,r){var a,o,c,d;t>e?(d=1-e*e/(t*t),a=t,e,o=n,c=i):(d=1-t*t/(e*e),a=e,t,o=n+.5*Math.PI,c=i+.5*Math.PI);for(var u=0,f=0;f<=r;f++)u+=Math.pow(d,f)*s(f)*l(f,o,c);return a*u}(t.xRadius,t.yRadius,e,n,4)}})}),define("DS/SVGLoader/SVGNode_circle",["DS/SVGLoader/SVGNode_abstract","DS/SVGLoader/SVGLoaderUtils","DS/Visualization/ThreeJS_DS"],function(t,e,n){"use strict";return t.extend({init:function(t){this._parent(t)},fillRenderableBank:function(t,e){var i=e.buildChildGas(this.node),r=t.getStrokeArcSetRenderable(i),a=parseFloat(this.node.getAttributeNS(null,"cx")),o=parseFloat(this.node.getAttributeNS(null,"cy")),s=parseFloat(this.node.getAttributeNS(null,"r")),l=t.getFilledCircleSetRenderable(i);i.getFillColor()&&l.addFilledCircle(a,o,s,i),i.getStrokeColor()&&r.addArcData({xRadius:s,yRadius:s,totalAngle:2*Math.PI,startAngle:0,position:new n.Vector2(a,-o),offset:0,gas:i})}})}),define("DS/SVGLoader/SVGNodeTreeBuilder",["UWA/Class","DS/SVGLoader/SVGNode_svg","DS/SVGLoader/SVGNode_g","DS/SVGLoader/SVGNode_circle","DS/SVGLoader/SVGNode_ellipse","DS/SVGLoader/SVGNode_unknown","DS/SVGLoader/SVGNode_path","DS/SVGLoader/SVGNode_image"],function(t,e,n,i,r,a,o,s){"use strict";var l={svg:e,g:n,circle:i,ellipse:r,path:o,image:s};return t.extend({init:function(t){this.svgRoot=t},buildTree:function(){return this.buildNodeTree(this.svgRoot)},buildNodeTree:function(t){var e,n,i=new(l[t.nodeName]||a)(t);for(e=0;e<t.childNodes.length;e++)1===t.childNodes[e].nodeType&&(n=this.buildNodeTree(t.childNodes[e]),i.children.push(n));return i}})}),define("DS/SVGLoader/SVGToNode3D",["UWA/Class","DS/SVGLoader/SVGNodeTreeBuilder"],function(t,e){"use strict";return t.extend({init:function(t){this.svgRootElement=t},buildNode3D:function(t){return new e(this.svgRootElement).buildTree().buildNode3D(0,t)}})}),define("DS/SVGLoader/SVGNode",["DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D","DS/Mesh/MeshUtils","DS/SVGLoader/SVGToNode3D","DS/Visualization/GetSVGMode"],function(t,e,n,i,r){"use strict";return e.extend({init:function(t,e){this._parent(e);var n=new i(t).buildNode3D();this.addChild(n)}})}),define("DS/SVGLoader/SVGLoader",["UWA/Class","DS/SVGLoader/SVGToNode3D"],function(t,e){"use strict";return t.extend({init:function(t){t=t||{},this.renderCB=t.renderCB,this.onProgressCB=t.onProgressCB,this.onLoadedCB=t.onLoadedCB,this.onErrorCB=t.onErrorCB},load:function(t,n){var i=this.onLoadedCB,r=new XMLHttpRequest;r.onload=function(){var t,a,o=new DOMParser,s=r.response,l=o.parseFromString(s,"image/svg+xml"),c=l.rootElement;if(!c)for(t=0;t<l.childNodes.length&&!c;t++)1===(a=l.childNodes[t]).nodeType&&"svg"===a.nodeName&&(c=a);if(c){var d=new e(c);n.addChild(d.buildNode3D(()=>{i&&setTimeout(i,0)}))}else this.onErrorCB&&this.onErrorCB()};var a=t.serverurl+t.filename;r.open("GET",a,!0),r.send(null)}})});