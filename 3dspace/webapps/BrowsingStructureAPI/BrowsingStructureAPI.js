define("DS/BrowsingStructureAPI/utils/BrowsingStructureWebServicesUtil",["UWA/Core","DS/WAFData/WAFData","DS/WidgetServices/WidgetServices","i18n!DS/BrowsingStructureAPI/assets/nls/BrowsingStructureAPI"],function(e,t,r,n){"use strict";return{get3DSearchUrl:function(){return new Promise(function(e,t){r.get3DSearchUrlAsync({onComplete:e,onFailure:t})})},get3DSpaceUrl:function(){return new Promise(function(e,t){r.get3DSpaceUrlAsync({onComplete:e,onFailure:t})})},getSecurityContext:function(){return"ctx::"+widget.getValue("xPref_CREDENTIAL")},createCSRFTokens:function(e,t){var r=e,n=t+"/resources/v1/application/CSRF";r.method="GET",this._executeRequest(n,r,"BSDAPI-createCSRFToken")},_executeRequest:function(o,a,i){var s=Math.round(1e3*Math.random()).toString();window.top.performance.mark("bsdAPIRequest_begin"+s);var u={};e.extend(u,a),e.is(u.onTimeout,"function")||(u.onTimeout=function(){var e={type:"timeout",toString:function(){return n.msg_info_Timeout}};u.onFailure(e)},u.onComplete=function(e){window.top.performance.mark("bsdAPIRequest_end"+s);var t=window.top.performance.getEntriesByName("bsdAPIRequest_begin"+s);t&&1===t.length&&(window.top.performance.measure("BSAPI_Request"+i,"bsdAPIRequest_begin"+s,"bsdAPIRequest_end"+s),window.top.performance.clearMarks("bsdAPIRequest_end"+s),window.top.performance.clearMarks("bsdAPIRequest_begin"+s)),a.onComplete&&a.onComplete(e)});var c={Accept:"application/json","Accept-Language":widget.lang?widget.lang:widget.getValue("lang")};a.withoutSC||(c.SecurityContext=encodeURIComponent("ctx::"+widget.getValue("xPref_CREDENTIAL"))),a.headers?u.headers=e.extend(c,a.headers):u.headers=c,e.is(u.query)||(u.query={}),u.query.tenant||!0===a.withoutTenant||(u.query.tenant=r.getTenantID());var d=o;return 0!==Object.keys(u.query).length&&(d+=(o.indexOf("?")<0?"?":"&")+e.Utils.toQueryString(u.query)),t.authenticatedRequest(d,u)}}}),define("DS/BrowsingStructureAPI/service/BrowsingStructureAPI",["UWA/Core","DS/BrowsingStructureAPI/utils/BrowsingStructureWebServicesUtil"],function(e,t){"use strict";function r(e,t,r){var o={itemsID:e,nodesToAttach:t,nodesToDetach:r};return n.updateNodes(o)}var n={addToBrowsingNode:function(e){if(!e.hasOwnProperty("itemsID")||0===e.itemsID.length||!e.hasOwnProperty("targetId")||0===e.targetId.length)throw new Error("BSD API Error : missing parameter");return r(e.itemsID,e.targetId,[])},removeFromBrowsingNode:function(e){if(!e.hasOwnProperty("itemsID")||0===e.itemsID.length||!e.hasOwnProperty("sourceId")||0===e.sourceId.length)throw new Error("BSD API Error : missing parameter");return r(e.itemsID,[],e.sourceId)},moveToBrowsingNode:function(e){if(!(e.hasOwnProperty("itemsID")&&0!==e.itemsID.length&&(e.hasOwnProperty("targetId")&&0!==e.targetId.length||e.hasOwnProperty("sourceId")&&0!==e.sourceId.length)))throw new Error("BSD API Error : missing parameter");return e.hasOwnProperty("targetId")&&0!==e.targetId.length||(e.targetId=[]),e.hasOwnProperty("sourceId")&&0!==e.sourceId.length||(e.sourceId=[]),r(e.itemsID,e.targetId,e.sourceId)},updateNodes:function(r){var n={};return e.extend(n,r),new Promise(async(o,a)=>{try{let i=await t.get3DSpaceUrl();t.createCSRFTokens({onComplete:s=>{var u=JSON.parse(s).csrf.value;n.onComplete=o,n.onFailure=((e,t)=>{a({err:t,serverErr:e})});var c=i+"/resources/v1/TerminologyManagement/Terminologies/updateNodes";n.method="POST",n.headers={Accept:"application/json","content-type":"application/json","Accept-Language":widget.lang?widget.lang:widget.getValue("lang"),SecurityContext:t.getSecurityContext(),ENO_CSRF_TOKEN:u},n.type="json",n.payload={items:r.itemsID,nodesToAdd:r.nodesToAttach,nodesToRemove:r.nodesToDetach},n.data=e.Json.encode(n.payload),t._executeRequest(c,n,"updateNodes")},onFailure:a},i)}catch(e){a(e)}})},getBrowsingStructureTree:function(r){if(!r.hasOwnProperty("itemsID")||0===r.itemsID.length)throw new Error("BSD API Error : missing parameter");return new Promise(function(n,o){t.get3DSearchUrl().then(a=>{var i={},s=a+"/cvservlet/progressiveexpand/v2?output_format=cvjson";return i.method="POST",i.headers={Accept:"application/json","content-type":"application/json"},i.type="json",i.payload={batch:{expands:[{label:"BSDAPI_getBrowsingStructureTree",root:{physical_id:r.itemsID},parameters:{graph_advise:1},graph:{descending_condition_relation:{uql:"(taxonomies:Sub Term)"}},filter:{all:1}}]},outputs:{select_object:["ds6w:label","ds6w:type","physicalid","ds6w:created","ds6w:modified"],format:"entity_relation_occurrence"}},i.onComplete=function(e){n(e)},i.onFailure=function(e){o(e)},i.data=e.Json.encode(i.payload),t._executeRequest(s,i,"getBrowsingStructureTree")})})}};return n});