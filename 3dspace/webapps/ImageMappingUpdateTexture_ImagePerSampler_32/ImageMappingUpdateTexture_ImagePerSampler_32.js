define("DS/ImageMappingUpdateTexture_ImagePerSampler_32/ImageMappingUpdateTexture_ImagePerSampler_32",["DS/Visualization/ThreeJS_DS"],function(e){return function(o,t){o.force=!0,o.activatePDSFX();o.setPDSFXVaryings({vPosition:{type:"v3"},vCol:{type:"v4"}});var r={ColoredMode:{type:"f",value:t.ColorMode},ObjectColor:{type:"v4",value:new e.Vector4(t.ObjectColor[0],t.ObjectColor[1],t.ObjectColor[2],t.ObjectColor[3])},BlendVal:{type:"f",value:t.BlendVal},NbTerrains:{type:"i",value:t.NbTerrains}};t.NbTerrains>13&&(t.NbTerrains=13);for(let o=1;o<=t.NbTerrains;o++){let a="TerrainMinMax_"+o,l="ColorMapTexture"+o;r[a]={type:"v4",value:new e.Vector4(t[a][0],t[a][1],t[a][2],t[a][3])},r[l]={type:"t2",value:t[l].map},r[l].value.minFilter=e.NearestFilter,r[l].value.magFilter=e.NearestFilter,r[l].value.generateMipmaps=!1}o.setPDSFXUniforms(r);var a=["vec4 the_color ;"].join("\n");o.setPDSFXGlobalShaderCode("",a);let l="";for(let e=1;e<=t.NbTerrains;e++){let o="{ \t    vec4 minmax = TerrainMinMax_XXX ;   \t    vec2 min ; min.x = minmax[0] ; min.y = minmax[1] ;   \t    vec2 max ; max.x = minmax[2] ; max.y = minmax[3] ;   \t    float u = (vPosition.x - min.x) / (max.x - min.x) ;   \t    float v = (vPosition.y - min.y) / (max.y - min.y) ;   \t    if (0. < u && u < 1. && 0. < v && v < 1.) {   \t      vec4 color = texture2D (ColorMapTextureXXX, vec2(u,v)) ;   \t      float alpha = color.a ;   \t      float beta  = (1. - color.a) * the_color.a ;   \t      the_color.rgb = alpha * color.rgb + beta * the_color.rgb ;   \t      the_color.a   = alpha             + beta                 ;   \t    }   \t  }\t  ";l+=o=o.replaceAll("XXX",e)}var i={ComputeCommonValues:["void ComputeCommonValues() ","{ ","bool colored_mode = ColoredMode > 0.5 ;","  if (colored_mode) ","{","\tthe_color = vCol ;","}","else","{","\tthe_color = ObjectColor ;","}"," ","  int NumTerrain = 0; "," "," ",l+" \tthe_color.r = 1. - (1. - the_color.r) * (1. - BlendVal); \tthe_color.g = 1. - (1. - the_color.g) * (1. - BlendVal); \tthe_color.b = 1. - (1. - the_color.b) * (1. - BlendVal); \t"," ","}"].join("\n"),ComputeAlbedo:["vec3 ComputeAlbedo() {","  return the_color.rgb;","}"].join("\n"),ComputeRoughness:["float ComputeRoughness()","{","  return 0.6 ; // terrain is not shiny but easily visible","}"].join("\n"),ComputeOpacity:["float ComputeOpacity() {","  return the_color.a;","}"].join("\n")},n={ComputeVaryingValues:["void ComputeVaryingValues() {","vPosition = vGetAttribPosition().xyz ;","vCol    = vec4(vGetAttribColor(), 1.) ;","}"].join("\n")};return o.setPDSFXOverridableFunctions(n,i),o}});