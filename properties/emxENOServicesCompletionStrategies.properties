#####
#type.operation = <current obj attr filter>|strategy|direction|depth|reltype|relwhere|botype|bowhere|boRelBoth|<expression to check for activation>
#for boRelBoth, 1 == bo, 2 == relationship, 3 = both
#
#	IMPORTANT NOTES!!!!!
#
#	For any type that has spaces, please replace those spaces with "_"
#   For any command that has spaces, please remove the spaces.
#
#   The most up-to-date command list can be found in
#   ENOServicesWebInterfaces\ENOLifecycleWebItf.mj\src\com\dassault_systemes\lifecycle\itf\ENOLifecycleExtensionItf.java
#
XCADNonPSBaseRepReference.Revise =  		 	attribute[XCADNonPSBaseRepReference.V_CADObjectType]=analysis|EXPAND|FROM|1|XCADBaseDependency|((attribute[XCADBaseDependency.V_CADLinkType]==analysisResults) OR (attribute[XCADBaseDependency.V_CADLinkType]==analysisComputations))|XCADNonPSBaseRepReference||1

SIMObjSimulationObjectGeneric.Revise =      	|EXPAND|FROM|1|PLMInstance||PLMReference||1
SIMObjSimulationObjectGeneric.Duplicate =   	|EXPAND|FROM|1|PLMInstance||PLMReference||1
SIMObjSimulationObjectGeneric.Delete = 			|EXPAND|FROM|2|SIMObjSimulationCategoryInstance,SIMObjSimulationRepInstance||SIMObjSimulationCategoryReference,SIMObjSimulationRepReference||1
SIMObjSimulationObjectGeneric.NewBranch = 		|EXPAND|FROM|2|SIMObjSimulationCategoryInstance,SIMObjSimulationRepInstance||SIMObjSimulationCategoryReference,SIMObjSimulationRepReference||1
DesignSight.Lock =   							|EXPAND|FROM|2|PLMInstance||PLMEntity||3
DesignSight.Lock1 =   							|EXPAND|FROM|2|||PLMEntity||1
SIMObjSimulationObjectGeneric.ChangeStatus = 	|EXPAND|FROM|0|PLMCoreInstance||PLMCoreReference||1

XCADNonPSBaseRepReference.Delete = 			 	attribute[XCADNonPSBaseRepReference.V_CADObjectType]=analysis|EXPAND|FROM|1|XCADBaseDependency||XCADNonPSBaseRepReference||1
XCADNonPSBaseRepReference.Duplicate =		 	attribute[XCADNonPSBaseRepReference.V_CADObjectType]=analysis|EXPAND|FROM|1|XCADBaseDependency||XCADNonPSBaseRepReference||1
XCADNonPSBaseRepReference.AdvanceDuplicate = 	attribute[XCADNonPSBaseRepReference.V_CADObjectType]=analysis|EXPAND|FROM|1|XCADBaseDependency||XCADNonPSBaseRepReference||1
XCADNonPSBaseRepReference.ChangeStatus = 		attribute[XCADNonPSBaseRepReference.V_CADObjectType]=analysis|EXPAND|FROM|1|XCADBaseDependency||XCADNonPSBaseRepReference||1
#New dev to optionally manage designtables
VPMReference.ChangeStatus = 					|EXPAND|FROM|1|XCADBaseDependency|attribute[XCADBaseDependency.V_CADLinkType]==designTable|XCADNonPSBaseRepReference||1|ENO_ChangeMaturityWithDesignTables
Drawing.ChangeStatus = 							|EXPAND|FROM|1|XCADBaseDependency|attribute[XCADBaseDependency.V_CADLinkType]==designTable|XCADNonPSBaseRepReference||1|ENO_ChangeMaturityWithDesignTables
XCADNonPSBaseRepReference.ChangeStatus1 = 		attribute[XCADNonPSBaseRepReference.V_CADObjectType]=process|EXPAND|FROM|1|XCADBaseDependency|attribute[XCADBaseDependency.V_CADLinkType]==designTable|XCADNonPSBaseRepReference||1|ENO_ChangeMaturityWithDesignTables

#IR-IR-837714
# Following line gets all Once instantiable instance and  Rep Reference
# Transfer & Change Owner commands

# added PlmParameter to expand for Transfer
PLMCoreReference.Transfer =							|EXPAND|FROM|1|PLMCoreRepInstance,ParameterAggregation||PLMCoreRepReference,PlmParameter|((type==PlmParameter) OR ((attribute[PLMEntity.V_usage]==3DPart) AND (type==3DShape)))|1
PLMCoreReference.Transfer1 =						|EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
Behavior_Continuous_BehLibRef.Transfer = 		|EXPAND|FROM|1|CATSysBehaviorLibRepInstance||Behavior_Continuous_Root||1
RFLVPMLogicalReference.Transfer =				|EXPAND|FROM|1|PLMCoreRepInstance,ParameterAggregation||PLMCoreRepReference,PlmParameter||1
RFLVPMLogicalCommunicationReference.Transfer =	|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||1
RFLVPMLogicalReference.Transfer1             =  |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection,PLMDocConnection||1
#
# added PlmParameter
RFLPLMFunctionalReference.Transfer =			|EXPAND|FROM|1|PLMCoreRepInstance,ParameterAggregation||PLMCoreRepReference,PlmParameter||1
RFLPLMFunctionalReference.Transfer1 =				|EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection,PLMDocConnection||1
# REQUIREMENT
# added PlmParameter
Requirement.Transfer						 =  |EXPAND|FROM|1|Specification_Structure,ParameterAggregation||Requirement,PlmParameter||1
Chapter.Transfer							 =  |EXPAND|FROM|1|Specification_Structure||Requirement,Comment||1
Requirement_Group.Transfer                   =  |EXPAND|FROM|1|Requirement_Group_Content,Sub_Requirement_Group||Requirement_Group,Requirement_Specification||1
Requirement_Specification.Transfer           =  |EXPAND|FROM|1|Specification_Structure||Chapter,Requirement,Requirement_Specification||1
#    CORE MATERIAL 
CATMatReference.Transfer						 =      |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||1
## 2D SHEET + VIEW
# See CATIA Lifecycle 2D Presentation modeler

# DIFSheet.Transfer			 		=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance,DIFViewInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.Revise				=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.Lock				=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.Transfer			=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.ChangeOwner		=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.ChangeStatus		=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.Duplicate			=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.Delete				=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.Share				=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.NewRevisionFrom	=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.AdvanceDuplicate	=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1
DIFAbstractSheet.NewBranch			=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||1

# DIFSheet.ChangeOwner			 	=     		|EXPAND|FROM|1|DIFBackgroundViewRepInstance,DIFViewInstance||DIFBackgroundViewRep||1
DIFAbstractView.Revise				=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.Lock				=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.Transfer			=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.ChangeOwner			=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.ChangeStatus		=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.Duplicate			=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.Delete				=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.Share				=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.NewRevisionFrom		=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.AdvanceDuplicate	=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1
DIFAbstractView.NewBranch			=    		|EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||1

# DIFLayout.ChangeOwnerFakeCommand             =	    |EXPAND|FROM|1|DIFSheetInstance||DIFSheet||2
# DIFLayout.TransferFakeCommand                =	    |EXPAND|FROM|1|DIFSheetInstance||DIFSheet||2
# DIFSheet.TransferFakeCommand			 	 =      |EXPAND|FROM|1|DIFBackgroundViewRepInstance,DIFViewInstance||DIFBackgroundViewRep,DIFView||2
# DIFSheet.ChangeOwnerFakeCommand				 =      |EXPAND|FROM|1|DIFBackgroundViewRepInstance,DIFViewInstance||DIFBackgroundViewRep,DIFView||2
DIFAbstractSheet.TransferFakeCommand			 	 =      |EXPAND|FROM|1|DIFBackgroundViewRepInstancee||DIFBackgroundViewRep||2
DIFAbstractSheet.ChangeOwnerFakeCommand				 =      |EXPAND|FROM|1|DIFBackgroundViewRepInstance||DIFBackgroundViewRep||2
DIFAbstractView.TransferFakeCommand			 		 =      |EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||2
DIFAbstractView.ChangeOwnerFakeCommand				 =      |EXPAND|FROM|1|DIFViewStreamInstance||DIFViewStream||2

## PerformanceSpec
VPMReference.Delete                   =             |EXPAND|TO|1|PerformanceSpecOf||PerformanceSpec||1
PLMCoreReference.Transfer2                =             |EXPAND|TO|1|PerformanceSpecOf||PerformanceSpec||1
PLMCoreReference.ChangeOwner2    =             |EXPAND|TO|1|PerformanceSpecOf||PerformanceSpec||1
VPMReference.Share1                  =             |EXPAND|TO|1|PerformanceSpecOf||PerformanceSpec||1


## MSR object Transfer -- get all objects under selected simulation object see ENOVIA_Lifecycle_MSR_Modeler_v5.pptx
SIMObjSimulationObjectGeneric.Transfer =      |EXPAND|FROM|0|SIMObjSimulationCategoryInstance,SIMObjSimulationRepInstance||SIMObjSimulationCategoryReference,SIMObjSimulationRepReference||1

# CHANGE OWNER
#	 PLMCORE REFERENCE
# added PlmParameter 
PLMCoreReference.ChangeOwner =						|EXPAND|FROM|1|PLMCoreRepInstance,ParameterAggregation||PLMCoreRepReference,PlmParameter|((type==PlmParameter) OR ((attribute[PLMEntity.V_usage]==3DPart) AND (type==3DShape)))|1
PLMCoreReference.ChangeOwner1 =						|EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
Behavior_Continuous_BehLibRef.ChangeOwner = 		|EXPAND|FROM|1|CATSysBehaviorLibRepInstance||Behavior_Continuous_Root||3
#    LOGICAL REFERENCE 
RFLVPMLogicalReference.ChangeOwner =				|EXPAND|FROM|1|PLMCoreRepInstance,ParameterAggregation||PLMCoreRepReference,PlmParameter||1
RFLVPMLogicalReference.ChangeOwner1             =  |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection,PLMDocConnection||1
RFLVPMLogicalCommunicationReference.ChangeOwner =	|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||1
RFLVPMLogicalCommunicationReference.ChangeOwner1             =  |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection,PLMDocConnection||1
#    FUNCTIONAL REFERENCE
# added PlmParameter
RFLPLMFunctionalReference.ChangeOwner =				|EXPAND|FROM|1|PLMCoreRepInstance,ParameterAggregation||PLMCoreRepReference,PlmParameter||1
RFLPLMFunctionalReference.ChangeOwner1 =			|EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection,PLMDocConnection||1
#    REQUIREMENT
Requirement.ChangeOwner						 =  |EXPAND|FROM|1|Specification_Structure,ParameterAggregation||Requirement,PlmParameter||1
Chapter.ChangeOwner							 =  |EXPAND|FROM|1|Specification_Structure||Requirement,Comment||1
Requirement_Group.ChangeOwner                   =  |EXPAND|FROM|1|Requirement_Group_Content,Sub_Requirement_Group||Requirement_Group,Requirement_Specification||1
Requirement_Specification.ChangeOwner           =  |EXPAND|FROM|1|Specification_Structure||Chapter,Requirement,Requirement_Specification||1
##   FASTENER
BundleFastenerAbstract.Transfer              =       |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference|attribute[PLMCoreRepReference.V_isOnceInstantiable]==TRUE|1
BundleFastenerAbstract.Transfer1              =      |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
LocFastener.Transfer                         =       |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference|attribute[PLMCoreRepReference.V_isOnceInstantiable]==TRUE|1
LocFastener.Transfer1                         =      |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
Fastener.Transfer                            =       |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference|attribute[PLMCoreRepReference.V_isOnceInstantiable]==TRUE|1
Fastener.Transfer1                            =      |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
PLMFst_BeadFastenerBundle.Transfer			 =       |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference|attribute[PLMCoreRepReference.V_isOnceInstantiable]==TRUE|1
PLMFst_BeadFastenerBundle.Transfer1			 =       |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
BundleFastenerAbstract.ChangeOwner              =       |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference|attribute[PLMCoreRepReference.V_isOnceInstantiable]==TRUE|1
BundleFastenerAbstract.ChangeOwner1              =      |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
LocFastener.ChangeOwner                         =       |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference|attribute[PLMCoreRepReference.V_isOnceInstantiable]==TRUE|1
LocFastener.ChangeOwner1                         =      |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
Fastener.ChangeOwner                            =       |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference|attribute[PLMCoreRepReference.V_isOnceInstantiable]==TRUE|1
Fastener.ChangeOwner1                            =      |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
PLMFst_BeadFastenerBundle.ChangeOwner			 =       |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference|attribute[PLMCoreRepReference.V_isOnceInstantiable]==TRUE|1
PLMFst_BeadFastenerBundle.ChangeOwner1			 =       |EXPAND|FROM|1|VPLMrel/PLMConnection/V_Owner,VPLMrel/PLMPort/V_Owner||PLMPort,PLMConnection||1
## IR-964569-3DEXPERIENCER2023x
## CATMatReference.TransferOwnershipCmd.Propagation="THIS+THIS&&ONALLREPREF";
#     CORE MATERIAL 
CATMatReference.ChangeOwner						 =      |EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||1

## MSR object Transfer -- get all objects under selected simulation object see ENOVIA_Lifecycle_MSR_Modeler_v5.pptx
SIMObjSimulationObjectGeneric.ChangeOwner =      |EXPAND|FROM|0|SIMObjSimulationCategoryInstance,SIMObjSimulationRepInstance||SIMObjSimulationCategoryReference,SIMObjSimulationRepReference||1

## Share
VPMReference.Share =							|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference|((attribute[PLMCoreRepReference.V_isOnceInstantiable]==TRUE) OR (attribute[PLMEntity.V_usage]==3DPart) OR (attribute[PLMEntity.V_usage]==3DShape) OR (attribute[PLMEntity.V_usage]==Internal3DShape]))|1
Behavior_Continuous_BehLibRef.Share = 		|EXPAND|FROM|1|CATSysBehaviorLibRepInstance||Behavior_Continuous_Root||1
RFLVPMLogicalReference.Share =				|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||1
RFLVPMLogicalCommunicationReference.Share =	|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||1
Requirement.Share						 =  |EXPAND|FROM|1|Specification_Structure||Requirement||1
Chapter.Share							 =  |EXPAND|FROM|1|Specification_Structure||Requirement,Comment||1
Requirement_Group.Share                   =  |EXPAND|FROM|1|Requirement_Group_Content,Sub_Requirement_Group||Requirement_Group,Requirement_Specification||1
Requirement_Specification.Share           =  |EXPAND|FROM|1|Specification_Structure||Chapter,Requirement,Requirement_Specification||1
SIMObjSimulationObjectGeneric.Share =      |EXPAND|FROM|2|SIMObjSimulationCategoryInstance,SIMObjSimulationRepInstance||SIMObjSimulationCategoryReference,SIMObjSimulationRepReference||1
#XCADNonPSBaseRepReference.Revise =				attribute[XCADNonPSBaseRepReference.V_CADObjectType]=analysis|EXPAND|FROM|1|XCADBaseDependency||XCADNonPSBaseRepReference||1
CATComponentsFamilyReference.Share = 		|EXPAND|FROM|1|CATComponentsFamilyRepInstance||CATComponentsFamilyRepresentation||1
#For FD05 Test to duplicate xcad Drawings with products
#VPMReference.Duplicate = 						|EXPAND|TO|1|XCADBaseDependency||Drawing||1

#Transfer Fake Cmd to get Instances
PLMCoreReference.TransferFakeCommand =							|EXPAND|FROM|1|PLMCoreInstance,PLMCoreRepInstance||PLMCoreReference,PLMCoreRepReference||2
# FASTENER
BundleFastenerAbstract.TransferFakeCommand   = 		    		|EXPAND|FROM|1|PLMCoreInstance,PLMCoreRepInstance||PLMCoreReference,PLMCoreRepReference||2
LocFastener.TransferFakeCommand              =  				|EXPAND|FROM|1|PLMCoreInstance,PLMCoreRepInstance||PLMCoreReference,PLMCoreRepReference||2
Fastener.TransferFakeCommand                 = 					|EXPAND|FROM|1|PLMCoreInstance,PLMCoreRepInstance||PLMCoreReference,PLMCoreRepReference||2
PLMFst_BeadFastenerBundle.TransferFakeCommand =  				|EXPAND|FROM|1|PLMCoreInstance,PLMCoreRepInstance||PLMCoreReference,PLMCoreRepReference||2
# CORE MATERIAL 
CATMatReference.TransferFakeCommand			  =      			|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||2
CATMatReference.ChangeOwnerFakeCommand		 =      			|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||2
# LOGICAL REFERENCE
RFLVPMLogicalReference.TransferFakeCommand =					|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||2
RFLVPMLogicalReference.ChangeOwnerFakeCommand =					|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||2
RFLVPMLogicalCommunicationReference.TransferFakeCommand =		|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||2
RFLVPMLogicalCommunicationReference.ChangeOwnerFakeCommand =	|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||2
# FUNCITONAL REFERENCE
RFLPLMFunctionalReference.TransferFakeCommand =					|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||2
RFLPLMFunctionalReference.ChangeOwnerFakeCommand =				|EXPAND|FROM|1|PLMCoreRepInstance||PLMCoreRepReference||2
## 2D SHEET + VIEW
## MSR object Transfer -- get all objects under selected simulation object see ENOVIA_Lifecycle_MSR_Modeler_v5.pptx
SIMObjSimulationObjectGeneric.TransferFakeCommand =      |EXPAND|FROM|0|SIMObjSimulationCategoryInstance,SIMObjSimulationRepInstance||SIMObjSimulationCategoryReference,SIMObjSimulationRepReference||2
## MSR object ChangeOwner -- get all objects under selected simulation object see ENOVIA_Lifecycle_MSR_Modeler_v5.pptx
SIMObjSimulationObjectGeneric.ChangeOwnerFakeCommand =      |EXPAND|FROM|0|SIMObjSimulationCategoryInstance,SIMObjSimulationRepInstance||SIMObjSimulationCategoryReference,SIMObjSimulationRepReference||2

#PlmParameter

Part.Transfer = |EXPAND|FROM|1|ParameterAggregation||PlmParameter||1
Part.ChangeOwner = |EXPAND|FROM|1|ParameterAggregation||PlmParameter||1

# don't need 
# PLMCheck.Transfer = |EXPAND|FROM|1|ParameterAggregation||PlmParameter||1 
# PLMCheck.ChangeOwner = |EXPAND|FROM|1|ParameterAggregation||PlmParameter||1
# DELFmiFunctionReference.Transfer = |EXPAND|FROM|1|ParameterAggregation||PlmParameter||1
# DELFmiFunctionReference.ChangeOwner = |EXPAND|FROM|1|ParameterAggregation||PlmParameter||1
# DELLmiAbstractProductionEntity.Transfer = |EXPAND|FROM|1|ParameterAggregation||PlmParameter||1
# DELLmiAbstractProductionEntity.ChangeOwner = |EXPAND|FROM|1|ParameterAggregation||PlmParameter||1
# as these are covered by PLMCoreReference.
# If we need any special things with these in the future, this will have to be revisited.



Term.Share = 					|BLOCK

Person.Delete					|BLOCK

Products.Lock =                 |BLOCK
Hardware_Product.Lock =        |BLOCK
Service_Product.Lock =         |BLOCK
Software_Product.Lock =        |BLOCK
Variant.Lock =                  |BLOCK
Variant_Parameter.Lock =        |BLOCK
Variability_Group.Lock =        |BLOCK 
Product_Configuration.Lock =    |BLOCK
Task_Management.Delete =        |BLOCK
Task_Management.ChangOwner = 	|BLOCK
Project_Space.Delete =          |BLOCK
Project_Space.ChangeOwner = 	|BLOCK
Project_Concept.ChageOwner = 	|BLOCK
Project_Template.ChangeOwner =  |BLOCK
Experiment.ChangeOwner = 	|BLOCK
Project_Snapshot.ChangeOwner = 	|BLOCK
Project_Baseline.ChangeOwner =	|BLOCK
Issue.Share =                   policy=Issue|BLOCK
Change_Order.Share =                   |BLOCK
Change_Request.Share =                   |BLOCK
Change_Action.Share =                   |BLOCK
Impact_Analysis.Share =                   |BLOCK
Change_Analysis.Share =                   |BLOCK
Project_Concept.Share =                   |BLOCK
Project_Template.Share =                   |BLOCK
Task_Management.Share =                   |BLOCK
Project_Space.Share =                   |BLOCK
Configuration_Rule.Lock =    |BLOCK
Configuration_Rule.Share =    |BLOCK


Route.ChangeStatus =   |BLOCK
Route.Revise =   |BLOCK
Route.Duplicate =   |BLOCK
Route.Share =   |BLOCK
Route.Lock =   |BLOCK
Route.NewBranch =   |BLOCK
Route.Duplicate =   |BLOCK

Route_Template.Revise =   |BLOCK
Route_Template.Delete =  |BLOCK
Route_Template.Share =    |BLOCK
Route_Template.Lock =    |BLOCK
Route_Template.NewBranch =   |BLOCK
Route_Template.Duplicate =   |BLOCK

Inbox_Task.ChangeStatus =   |BLOCK
Inbox_Task.Revise =    |BLOCK
Inbox_Task.Duplicate =     |BLOCK
Inbox_Task.Delete =     |BLOCK
Inbox_Task.Share =     |BLOCK
Inbox_Task.Transfer =     |BLOCK
Inbox_Task.ChangeOwner =     |BLOCK
Inbox_Task.Lock =     |BLOCK

SignConfig.ChangeStatus = |BLOCK
ESignConfig.Revise = |BLOCK
ESignConfig.Duplicate = |BLOCK
ESignConfig.Delete = |BLOCK
ESignConfig.Share = |BLOCK
ESignConfig.Transfer = |BLOCK
ESignConfig.ChangeOwner = |BLOCK
ESignConfig.Lock = |BLOCK

################################################################
#
#    Maturity ... to match Native
#
################################################################

DMUValidationValidation.ChangeStatus		=				|EXPAND|FROM|0|PLMCoreInstance||PLMCoreReference||1

PLMPort.ChangeStatus 								= |BLOCK
PLMConnection.ChangeStatus							= |BLOCK

CATSysBehaviorLibRepReference.ChangeStatus			= |BLOCK
DMUValidationCheck.ChangeStatus						= |BLOCK
DMUValidationContext.ChangeStatus					= |BLOCK
DMUValidationExposedPresentation.ChangeStatus		= |BLOCK
DMUValidationParticipants.ChangeStatus				= |BLOCK
DMUValidationReviewRepInstance.ChangeStatus			= |BLOCK
DMUValidationReviewRepReference.ChangeStatus		= |BLOCK
DMUValidationValidated.ChangeStatus					= |BLOCK
ENOWSP_WorkpaceRootRef.ChangeStatus					= |BLOCK
ENOWSP_WorkspaceInst.ChangeStatus					= |BLOCK
ENOWSP_WorkspaceRef.ChangeStatus					= |BLOCK
MaterialDomain.ChangeStatus							= |BLOCK
PLMPosPersonRef.ChangeStatus						= |BLOCK
RFLPLMReqChapterInstance.ChangeStatus				= |BLOCK
RFLPLMReqChapterReference.ChangeStatus				= |BLOCK
RFLPLMReqCommentInstance.ChangeStatus				= |BLOCK
RFLPLMReqCommentReference.ChangeStatus				= |BLOCK
RFLPLMReqSpecificationInstance.ChangeStatus			= |BLOCK
RFLPLMReqSpecificationReference.ChangeStatus		= |BLOCK
RFLPLMRequirementInstance.ChangeStatus				= |BLOCK
RFLPLMRequirementReference.ChangeStatus				= |BLOCK
SIMObjSimulationCategoryReference.ChangeStatus		= |BLOCK
SIMObjSimulationConnection.ChangeStatus				= |BLOCK
SIMObjSimulationConnectionGeneric.ChangeStatus		= |BLOCK
SIMObjSimulationObject.ChangeStatus					= |BLOCK
SIMObjSimulationRepReference.ChangeStatus			= |BLOCK
SIMObjSimulationRepReferenceGeneric.ChangeStatus	= |BLOCK
SIMObjSimulationSystem.ChangeStatus					= |BLOCK
SIMObjSimulationV5RepReferenceGeneric.ChangeStatus	= |BLOCK
Subtask.ChangeStatus								= |BLOCK
VPMCfgConfiguration.ChangeStatus					= |BLOCK
VPMDECCIGComponent.ChangeStatus						= |BLOCK
VPMDECCSPAssembly.ChangeStatus						= |BLOCK
VPMDECCSPComponent.ChangeStatus						= |BLOCK
VPMDECCSPEmbeddedComponent.ChangeStatus				= |BLOCK
VPMDECCT5Assembly.ChangeStatus						= |BLOCK
VPMDECCT5AssemblyForTeam.ChangeStatus				= |BLOCK
VPMDECCT5Component.ChangeStatus						= |BLOCK
VPMDECCT5ComponentForTeam.ChangeStatus				= |BLOCK
VPMDECCT5EmbeddedAssembly.ChangeStatus				= |BLOCK
VPMDECCT5EmbeddedAssemblyForTeam.ChangeStatus		= |BLOCK
VPMDECCgrViewable.ChangeStatus						= |BLOCK
VPMDECINVAssembly.ChangeStatus						= |BLOCK
VPMDECINVAssemblyForTeam.ChangeStatus				= |BLOCK
VPMDECINVComponent.ChangeStatus						= |BLOCK
VPMDECINVComponentForTeam.ChangeStatus				= |BLOCK
VPMDECINViAssembly.ChangeStatus						= |BLOCK
VPMDECINViAssemblyForTeam.ChangeStatus				= |BLOCK
VPMDECINViPart.ChangeStatus							= |BLOCK
VPMDECINViPartForTeam.ChangeStatus					= |BLOCK
VPMDECProEAssembly.ChangeStatus						= |BLOCK
VPMDECProEAssemblyInstance.ChangeStatus				= |BLOCK
VPMDECProEComponent.ChangeStatus					= |BLOCK
VPMDECProEComponentInstance.ChangeStatus			= |BLOCK
VPMDECProEManufactureAssembly.ChangeStatus			= |BLOCK
VPMDECSLWAssembly.ChangeStatus						= |BLOCK
VPMDECSLWAssemblyInstance.ChangeStatus				= |BLOCK
VPMDECSLWAssemblyInstanceForTeam.ChangeStatus		= |BLOCK
VPMDECSLWComponent.ChangeStatus						= |BLOCK
VPMDECSLWComponentInstance.ChangeStatus				= |BLOCK
VPMDECSLWComponentInstanceForTeam.ChangeStatus		= |BLOCK
VPMDECUGAssembly.ChangeStatus						= |BLOCK
VPMDECUGAssemblyForTeam.ChangeStatus				= |BLOCK
VPMDECUGComponent.ChangeStatus						= |BLOCK
VPMDECUGComponentForTeam.ChangeStatus				= |BLOCK



Manufacturing_Plan.Lock = |BLOCK 


#IR-1205392 Workspace & Bookmarks should be blocked from most commands. They are from the UI, but this is additional insurance for the webservices.
Workspace.Revise				= |BLOCK
Workspace.NewRevisionFrom		= |BLOCK
Workspace.NewBranch				= |BLOCK
Workspace.Duplicate				= |BLOCK
Workspace.AdvanceDuplicate		= |BLOCK
Workspace.Lock					= |BLOCK
Workspace_Vault.Revise				= |BLOCK
Workspace_Vault.Duplicate				= |BLOCK
Workspace_Vault.AdvanceDuplicate		= |BLOCK
Workspace_Vault.NewRevisionFrom		= |BLOCK
Workspace_Vault.NewBranch				= |BLOCK
Workspace_Vault.Lock					= |BLOCK

