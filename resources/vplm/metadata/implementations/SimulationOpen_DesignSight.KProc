#Prog SimulationOpen_DesignSight (iPLMIDSet :  #In PLMIDSet,oPLMIDSet :  #Out PLMIDSet) : VoidType
{
let IdsCategoriesAndSo(PLMIDSet)
let IdsProductStructure(PLMIDSet)
let IdsExtDoc(PLMIDSet)
let IdsSimuRep(PLMIDSet)
let IdsScenarioMat(PLMIDSet)
let IdsScenarioMat2(PLMIDSet)
let IdsProdAndChildren(PLMIDSet)
let IdsPublishResult(PLMIDSet)
let IdsSetModel (PLMIDSet) 
let IdsPortParam (PLMIDSet)

let RouteSetCategoriesAndSo (PLMRouteSet)
let RouteSetModel (PLMRouteSet)
let RouteSetExtDoc (PLMRouteSet)
let RouteSimuRep (PLMRouteSet)
let RouteScenarioMat (PLMRouteSet)
let RouteScenarioMat2 (PLMRouteSet)
let RouteSetProdAndChildren (PLMRouteSet)
let RoutePublishResult (PLMRouteSet)
let RoutePortParam(PLMRouteSet)
 

/* getting categories + so */
RouteSetCategoriesAndSo = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_retrieveCategories", iPLMIDSet)
IdsCategoriesAndSo = Ids( RouteSetCategoriesAndSo)

/* getting External documents from SO or\and from Categories */
 RouteSetExtDoc = ExecutePLMFunction("PLMDocConnection", "PLMDocConnection_retrieveAllDocuments", IdsCategoriesAndSo)
IdsExtDoc = Ids(RouteSetExtDoc)

/* getting Ports from SO  */
 RoutePortParam = ExecutePLMFunction("PLMParameter", "PAR_nav_paramports", IdsCategoriesAndSo)
IdsPortParam = Ids(RoutePortParam)

/* getting system connection + product */
RouteSetModel = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_addSimulatedModel", Restrict(IdsCategoriesAndSo, "SIMObjSimulationCategoryAndProdCnx/SIMObjSimulationCategoryReference"))
IdsSetModel =   Ids(RouteSetModel)

/*getting Product and Children from Product*/
RouteSetProdAndChildren = ExecutePLMFunction("PRODUCTCFG", "ProductCfg_AddChildrenProduct",   Restrict(Ids(RouteSetModel, "last"), "PRODUCTCFG/VPMReference"))
IdsProdAndChildren = Ids(RouteSetProdAndChildren)

/* calling Product Procedure*/
IdsProductStructure  =  ExecutePLMProcedure(  "VPMEditor_OpenCompletionOnReference",  IdsProdAndChildren ) 

/* getting simu rep under category Scenario*/
RouteSimuRep = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_retrieveSimuRep", Restrict(IdsCategoriesAndSo, "SIMObjSimulationCategoryAndProdCnx/SIMObjSimulationCategoryReference"))
IdsSimuRep = Ids(RouteSimuRep)

/* getting material reference under category Scenario*/
RouteScenarioMat = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_retrieveMaterialfromSimuRep", Restrict(IdsSimuRep,"SIMObjSimulationV5Generic/SIMObjSimulationV5RepReferenceGeneric"))
IdsScenarioMat = Ids(RouteScenarioMat) 

/* Get the MaterialDomains of the above Material Reference. */
RouteScenarioMat2 = ExecutePLMFunction("CATMaterialRef", "mat_retrieveDomains", Restrict(IdsScenarioMat,"CATMaterialRef/CATMatReference"))
IdsScenarioMat2 = Ids(RouteScenarioMat2) 

/* getting publish result connection */
RoutePublishResult  = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_addPublishResultCnxForOpen", Restrict(IdsCategoriesAndSo, "SIMObjSimulationCategoryAndProdCnx/SIMObjSimulationCategoryReference"))
IdsPublishResult = Ids(RoutePublishResult)
 
 
oPLMIDSet = IdsCategoriesAndSo + IdsExtDoc + IdsPortParam + IdsSetModel + IdsProdAndChildren + IdsProductStructure + IdsSimuRep + IdsScenarioMat + IdsScenarioMat2 + IdsPublishResult 

}
