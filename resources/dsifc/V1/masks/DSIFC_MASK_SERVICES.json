{
  "dsmvifc:IfcMask.IfcChimney":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcChimney.ObjectType",
    "dsmvifc:programe.CP.IfcChimney.Tag",
    "dsmvifc:programe.CP.IfcChimney.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCovering":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCovering.ObjectType",
    "dsmvifc:programe.CP.IfcCovering.Tag",
    "dsmvifc:programe.CP.IfcCovering.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCurtainWall":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCurtainWall.ObjectType",
    "dsmvifc:programe.CP.IfcCurtainWall.Tag",
    "dsmvifc:programe.CP.IfcCurtainWall.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDoor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDoor.ObjectType",
    "dsmvifc:programe.CP.IfcDoor.Tag",
    "dsmvifc:programe.CP.IfcDoor.OverallHeight",
    "dsmvifc:programe.CP.IfcDoor.OverallWidth",
    "dsmvifc:programe.CP.IfcDoor.PredefinedType",
    "dsmvifc:programe.CP.IfcDoor.OperationType"
  ],
  "dsmvifc:IfcMask.IfcDoorStandardCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDoorStandardCase.ObjectType",
    "dsmvifc:programe.CP.IfcDoorStandardCase.Tag",
    "dsmvifc:programe.CP.IfcDoorStandardCase.OverallHeight",
    "dsmvifc:programe.CP.IfcDoorStandardCase.OverallWidth",
    "dsmvifc:programe.CP.IfcDoorStandardCase.PredefinedType",
    "dsmvifc:programe.CP.IfcDoorStandardCase.OperationType"
  ],
  "dsmvifc:IfcMask.IfcRailing":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRailing.ObjectType",
    "dsmvifc:programe.CP.IfcRailing.Tag",
    "dsmvifc:programe.CP.IfcRailing.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcRamp":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRamp.ObjectType",
    "dsmvifc:programe.CP.IfcRamp.Tag",
    "dsmvifc:programe.CP.IfcRamp.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcRampFlight":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRampFlight.ObjectType",
    "dsmvifc:programe.CP.IfcRampFlight.Tag",
    "dsmvifc:programe.CP.IfcRampFlight.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcRoof":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRoof.ObjectType",
    "dsmvifc:programe.CP.IfcRoof.Tag",
    "dsmvifc:programe.CP.IfcRoof.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcShadingDevice":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcShadingDevice.ObjectType",
    "dsmvifc:programe.CP.IfcShadingDevice.Tag",
    "dsmvifc:programe.CP.IfcShadingDevice.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcStair":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcStair.ObjectType",
    "dsmvifc:programe.CP.IfcStair.Tag",
    "dsmvifc:programe.CP.IfcStair.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcStairFlight":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcStairFlight.ObjectType",
    "dsmvifc:programe.CP.IfcStairFlight.Tag",
    "dsmvifc:programe.CP.IfcStairFlight.NumberOfRiser",
    "dsmvifc:programe.CP.IfcStairFlight.NumberOfTreads",
    "dsmvifc:programe.CP.IfcStairFlight.RiserHeight",
    "dsmvifc:programe.CP.IfcStairFlight.TreadLength",
    "dsmvifc:programe.CP.IfcStairFlight.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcWindow":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcWindow.ObjectType",
    "dsmvifc:programe.CP.IfcWindow.Tag",
    "dsmvifc:programe.CP.IfcWindow.OverallHeight",
    "dsmvifc:programe.CP.IfcWindow.OverallWidth",
    "dsmvifc:programe.CP.IfcWindow.PredefinedType",
    "dsmvifc:programe.CP.IfcWindow.PartitioningType"
  ],
  "dsmvifc:IfcMask.IfcWindowStandardCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcWindowStandardCase.ObjectType",
    "dsmvifc:programe.CP.IfcWindowStandardCase.Tag",
    "dsmvifc:programe.CP.IfcWindowStandardCase.OverallHeight",
    "dsmvifc:programe.CP.IfcWindowStandardCase.OverallWidth",
    "dsmvifc:programe.CP.IfcWindowStandardCase.PredefinedType",
    "dsmvifc:programe.CP.IfcWindowStandardCase.PartitioningType"
  ],
  "dsmvifc:IfcMask.IfcPset_ChimneyCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ChimneyCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ChimneyCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ChimneyCommon.NumberOfDrafts",
    "dsmvifc:programe.CP.IfcPset_ChimneyCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_ChimneyCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_ChimneyCommon.LoadBearing",
    "dsmvifc:programe.CP.IfcPset_ChimneyCommon.FireRating"
  ],
  "dsmvifc:IfcMask.IfcPset_CoveringCeiling":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CoveringCeiling.Permeability",
    "dsmvifc:programe.CP.IfcPset_CoveringCeiling.TileLength",
    "dsmvifc:programe.CP.IfcPset_CoveringCeiling.TileWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_CoveringCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.Status",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.AcousticRating",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.FlammabilityRating",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.FragilityRating",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.SurfaceSpreadOfFlame",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.Combustible",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_CoveringCommon.Finish"
  ],
  "dsmvifc:IfcMask.IfcPset_CoveringFlooring":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CoveringFlooring.HasNonSkidSurface",
    "dsmvifc:programe.CP.IfcPset_CoveringFlooring.HasAntiStaticSurface"
  ],
  "dsmvifc:IfcMask.IfcPset_CurtainWallCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CurtainWallCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CurtainWallCommon.Status",
    "dsmvifc:programe.CP.IfcPset_CurtainWallCommon.AcousticRating",
    "dsmvifc:programe.CP.IfcPset_CurtainWallCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_CurtainWallCommon.Combustible",
    "dsmvifc:programe.CP.IfcPset_CurtainWallCommon.SurfaceSpreadOfFlame",
    "dsmvifc:programe.CP.IfcPset_CurtainWallCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_CurtainWallCommon.IsExternal"
  ],
  "dsmvifc:IfcMask.IfcPset_DoorCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DoorCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.Status",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.AcousticRating",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.SecurityRating",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.DurabilityRating",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.HygrothermalRating",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.WaterTightnessRating",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.MechanicalLoadRating",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.WindLoadRating",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.Infiltration",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.GlazingAreaFraction",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.HandicapAccessible",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.FireExit",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.HasDrive",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.SelfClosing",
    "dsmvifc:programe.CP.IfcPset_DoorCommon.SmokeStop"
  ],
  "dsmvifc:IfcMask.IfcPset_DoorTypeTurnstile":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DoorTypeTurnstile.SensorMode"
  ],
  "dsmvifc:IfcMask.IfcPset_DoorWindowGlazingType":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.GlassLayers",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.GlassThickness1",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.GlassThickness2",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.GlassThickness3",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.FillGas",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.GlassColor",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.IsTempered",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.IsLaminated",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.IsCoated",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.IsWired",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.VisibleLightReflectance",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.VisibleLightTransmittance",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.SolarAbsorption",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.SolarReflectance",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.SolarTransmittance",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.SolarHeatGainTransmittance",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.ShadingCoefficient",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.ThermalTransmittanceSummer",
    "dsmvifc:programe.CP.IfcPset_DoorWindowGlazingType.ThermalTransmittanceWinter"
  ],
  "dsmvifc:IfcMask.IfcPset_DoorWindowShadingType":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DoorWindowShadingType.ShadingCoefficient",
    "dsmvifc:programe.CP.IfcPset_DoorWindowShadingType.ExternalShadingCoefficient",
    "dsmvifc:programe.CP.IfcPset_DoorWindowShadingType.InternalShadingCoefficient",
    "dsmvifc:programe.CP.IfcPset_DoorWindowShadingType.InsetShadingCoefficient"
  ],
  "dsmvifc:IfcMask.IfcPset_RailingCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_RailingCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_RailingCommon.Status",
    "dsmvifc:programe.CP.IfcPset_RailingCommon.Height",
    "dsmvifc:programe.CP.IfcPset_RailingCommon.Diameter",
    "dsmvifc:programe.CP.IfcPset_RailingCommon.IsExternal"
  ],
  "dsmvifc:IfcMask.IfcPset_RampCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_RampCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_RampCommon.Status",
    "dsmvifc:programe.CP.IfcPset_RampCommon.RequiredHeadroom",
    "dsmvifc:programe.CP.IfcPset_RampCommon.RequiredSlope",
    "dsmvifc:programe.CP.IfcPset_RampCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_RampCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_RampCommon.FireExit",
    "dsmvifc:programe.CP.IfcPset_RampCommon.HandicapAccessible",
    "dsmvifc:programe.CP.IfcPset_RampCommon.HasNonSkidSurface",
    "dsmvifc:programe.CP.IfcPset_RampCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_RampCommon.LoadBearing"
  ],
  "dsmvifc:IfcMask.IfcPset_RampFlightCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_RampFlightCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_RampFlightCommon.Status",
    "dsmvifc:programe.CP.IfcPset_RampFlightCommon.Headroom",
    "dsmvifc:programe.CP.IfcPset_RampFlightCommon.ClearWidth",
    "dsmvifc:programe.CP.IfcPset_RampFlightCommon.Slope",
    "dsmvifc:programe.CP.IfcPset_RampFlightCommon.CounterSlope"
  ],
  "dsmvifc:IfcMask.IfcPset_RoofCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_RoofCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_RoofCommon.Status",
    "dsmvifc:programe.CP.IfcPset_RoofCommon.AcousticRating",
    "dsmvifc:programe.CP.IfcPset_RoofCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_RoofCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_RoofCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_RoofCommon.LoadBearing"
  ],
  "dsmvifc:IfcMask.IfcPset_ShadingDeviceCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.ShadingDeviceType",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.MechanicalOperated",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.SolarTransmittance",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.VisibleLightTransmittance",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.SolarReflectance",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.VisibleLightReflectance",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.Roughness",
    "dsmvifc:programe.CP.IfcPset_ShadingDeviceCommon.SurfaceColor"
  ],
  "dsmvifc:IfcMask.IfcPset_ShadingDevicePHistory":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ShadingDevicePHistory.TiltAngle",
    "dsmvifc:programe.CP.IfcPset_ShadingDevicePHistory.Azimuth"
  ],
  "dsmvifc:IfcMask.IfcPset_StairCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_StairCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_StairCommon.Status",
    "dsmvifc:programe.CP.IfcPset_StairCommon.NumberOfRiser",
    "dsmvifc:programe.CP.IfcPset_StairCommon.NumberOfTreads",
    "dsmvifc:programe.CP.IfcPset_StairCommon.RiserHeight",
    "dsmvifc:programe.CP.IfcPset_StairCommon.TreadLength",
    "dsmvifc:programe.CP.IfcPset_StairCommon.NosingLength",
    "dsmvifc:programe.CP.IfcPset_StairCommon.WalkingLineOffset",
    "dsmvifc:programe.CP.IfcPset_StairCommon.TreadLengthAtOffset",
    "dsmvifc:programe.CP.IfcPset_StairCommon.TreadLengthAtInnerSide",
    "dsmvifc:programe.CP.IfcPset_StairCommon.WaistThickness",
    "dsmvifc:programe.CP.IfcPset_StairCommon.RequiredHeadroom",
    "dsmvifc:programe.CP.IfcPset_StairCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_StairCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_StairCommon.FireExit",
    "dsmvifc:programe.CP.IfcPset_StairCommon.HandicapAccessible",
    "dsmvifc:programe.CP.IfcPset_StairCommon.HasNonSkidSurface",
    "dsmvifc:programe.CP.IfcPset_StairCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_StairCommon.LoadBearing"
  ],
  "dsmvifc:IfcMask.IfcPset_StairFlightCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.Status",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.NumberOfRiser",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.NumberOfTreads",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.RiserHeight",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.TreadLength",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.NosingLength",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.WalkingLineOffset",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.TreadLengthAtOffset",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.TreadLengthAtInnerSide",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.Headroom",
    "dsmvifc:programe.CP.IfcPset_StairFlightCommon.WaistThickness"
  ],
  "dsmvifc:IfcMask.IfcPset_WindowCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WindowCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.Status",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.AcousticRating",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.SecurityRating",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.Infiltration",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.GlazingAreaFraction",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.HasSillExternal",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.HasSillInternal",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.HasDrive",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.SmokeStop",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.FireExit",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.WaterTightnessRating",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.MechanicalLoadRating",
    "dsmvifc:programe.CP.IfcPset_WindowCommon.WindLoadRating"
  ],
  "dsmvifc:IfcMask.IfcQto_ChimneyBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ChimneyBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ChimneyBaseQuantities.Length"
  ],
  "dsmvifc:IfcMask.IfcQto_CoveringBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CoveringBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CoveringBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_CoveringBaseQuantities.GrossArea",
    "dsmvifc:programe.CP.IfcQto_CoveringBaseQuantities.NetArea"
  ],
  "dsmvifc:IfcMask.IfcQto_CurtainWallQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CurtainWallQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CurtainWallQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_CurtainWallQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_CurtainWallQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_CurtainWallQuantities.GrossSideArea",
    "dsmvifc:programe.CP.IfcQto_CurtainWallQuantities.NetSideArea"
  ],
  "dsmvifc:IfcMask.IfcQto_DoorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DoorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DoorBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DoorBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DoorBaseQuantities.Perimeter",
    "dsmvifc:programe.CP.IfcQto_DoorBaseQuantities.Area"
  ],
  "dsmvifc:IfcMask.IfcQto_RailingBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_RailingBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_RailingBaseQuantities.Length"
  ],
  "dsmvifc:IfcMask.IfcQto_RampFlightBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_RampFlightBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_RampFlightBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_RampFlightBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_RampFlightBaseQuantities.GrossArea",
    "dsmvifc:programe.CP.IfcQto_RampFlightBaseQuantities.NetArea",
    "dsmvifc:programe.CP.IfcQto_RampFlightBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_RampFlightBaseQuantities.NetVolume"
  ],
  "dsmvifc:IfcMask.IfcQto_RoofBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_RoofBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_RoofBaseQuantities.GrossArea",
    "dsmvifc:programe.CP.IfcQto_RoofBaseQuantities.NetArea",
    "dsmvifc:programe.CP.IfcQto_RoofBaseQuantities.ProjectedArea"
  ],
  "dsmvifc:IfcMask.IfcQto_StairFlightBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_StairFlightBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_StairFlightBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_StairFlightBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_StairFlightBaseQuantities.NetVolume"
  ],
  "dsmvifc:IfcMask.IfcQto_WindowBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_WindowBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_WindowBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_WindowBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_WindowBaseQuantities.Perimeter",
    "dsmvifc:programe.CP.IfcQto_WindowBaseQuantities.Area"
  ],
  "dsmvifc:IfcMask.IfcFacility":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFacility.ObjectType",
    "dsmvifc:programe.CP.IfcFacility.LongName",
    "dsmvifc:programe.CP.IfcFacility.CompositionType"
  ],
  "dsmvifc:IfcMask.IfcFacilityPart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFacilityPart.ObjectType",
    "dsmvifc:programe.CP.IfcFacilityPart.LongName",
    "dsmvifc:programe.CP.IfcFacilityPart.CompositionType",
    "dsmvifc:programe.CP.IfcFacilityPart.PredefinedType",
    "dsmvifc:programe.CP.IfcFacilityPart.UsageType"
  ],
  "dsmvifc:IfcMask.IfcFacilityPartCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFacilityPartCommon.ObjectType",
    "dsmvifc:programe.CP.IfcFacilityPartCommon.LongName",
    "dsmvifc:programe.CP.IfcFacilityPartCommon.CompositionType",
    "dsmvifc:programe.CP.IfcFacilityPartCommon.UsageType",
    "dsmvifc:programe.CP.IfcFacilityPartCommon.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcGeographicElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcGeographicElement.ObjectType",
    "dsmvifc:programe.CP.IfcGeographicElement.Tag",
    "dsmvifc:programe.CP.IfcGeographicElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPlant":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPlant.ObjectType",
    "dsmvifc:programe.CP.IfcPlant.Tag",
    "dsmvifc:programe.CP.IfcPlant.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSite":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSite.ObjectType",
    "dsmvifc:programe.CP.IfcSite.LongName",
    "dsmvifc:programe.CP.IfcSite.CompositionType",
    "dsmvifc:programe.CP.IfcSite.LandTitleNumber",
    "dsmvifc:programe.CP.IfcSite.InternalLocation",
    "dsmvifc:programe.CP.IfcSite.AddressLines",
    "dsmvifc:programe.CP.IfcSite.PostalBox",
    "dsmvifc:programe.CP.IfcSite.Town",
    "dsmvifc:programe.CP.IfcSite.Region",
    "dsmvifc:programe.CP.IfcSite.PostalCode",
    "dsmvifc:programe.CP.IfcSite.Country"
  ],
  "dsmvifc:IfcMask.IfcSpatialStructureElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSpatialStructureElement.ObjectType",
    "dsmvifc:programe.CP.IfcSpatialStructureElement.LongName",
    "dsmvifc:programe.CP.IfcSpatialStructureElement.CompositionType"
  ],
  "dsmvifc:IfcMask.IfcPset_AirSideSystemInformation":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.Name",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.Description",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.AirSideSystemType",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.AirSideSystemDistributionType",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.TotalAirflow",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.EnergyGainTotal",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.AirflowSensible",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.EnergyGainSensible",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.EnergyLoss",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.LightingDiversity",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.InfiltrationDiversitySummer",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.InfiltrationDiversityWinter",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.ApplianceDiversity",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.LoadSafetyFactor",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.HeatingTemperatureDelta",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.CoolingTemperatureDelta",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.Ventilation",
    "dsmvifc:programe.CP.IfcPset_AirSideSystemInformation.FanPower"
  ],
  "dsmvifc:IfcMask.IfcPset_ConcreteElementGeneral":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.ConstructionMethod",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.StructuralClass",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.StrengthClass",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.ExposureClass",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.ReinforcementVolumeRatio",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.ReinforcementAreaRatio",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.DimensionalAccuracyClass",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.ConstructionToleranceClass",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.ConcreteCover",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.ConcreteCoverAtMainBars",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.ConcreteCoverAtLinks",
    "dsmvifc:programe.CP.IfcPset_ConcreteElementGeneral.ReinforcementStrengthClass"
  ],
  "dsmvifc:IfcMask.IfcPset_Condition":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Condition.AssessmentDate",
    "dsmvifc:programe.CP.IfcPset_Condition.AssessmentCondition",
    "dsmvifc:programe.CP.IfcPset_Condition.AssessmentDescription"
  ],
  "dsmvifc:IfcMask.IfcPset_EnvironmentalImpactIndicators":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.Reference",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.FunctionalUnitReference",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.Unit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.LifeCyclePhase",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.ExpectedServiceLife",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.TotalPrimaryEnergyConsumptionPerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.WaterConsumptionPerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.HazardousWastePerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.NonHazardousWastePerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.ClimateChangePerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.AtmosphericAcidificationPerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.RenewableEnergyConsumptionPerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.NonRenewableEnergyConsumptionPerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.ResourceDepletionPerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.InertWastePerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.RadioactiveWastePerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.StratosphericOzoneLayerDestructionPerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.PhotochemicalOzoneFormationPerUnit",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactIndicators.EutrophicationPerUnit"
  ],
  "dsmvifc:IfcMask.IfcPset_EnvironmentalImpactValues":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.TotalPrimaryEnergyConsumption",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.WaterConsumption",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.HazardousWaste",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.NonHazardousWaste",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.ClimateChange",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.AtmosphericAcidification",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.RenewableEnergyConsumption",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.NonRenewableEnergyConsumption",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.ResourceDepletion",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.InertWaste",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.RadioactiveWaste",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.StratosphericOzoneLayerDestruction",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.PhotochemicalOzoneFormation",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.Eutrophication",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.LeadInTime",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.Duration",
    "dsmvifc:programe.CP.IfcPset_EnvironmentalImpactValues.LeadOutTime"
  ],
  "dsmvifc:IfcMask.IfcPset_LandRegistration":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_LandRegistration.LandID",
    "dsmvifc:programe.CP.IfcPset_LandRegistration.IsPermanentID",
    "dsmvifc:programe.CP.IfcPset_LandRegistration.LandTitleID"
  ],
  "dsmvifc:IfcMask.IfcPset_ManufacturerOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ManufacturerOccurrence.AcquisitionDate",
    "dsmvifc:programe.CP.IfcPset_ManufacturerOccurrence.BarCode",
    "dsmvifc:programe.CP.IfcPset_ManufacturerOccurrence.SerialNumber",
    "dsmvifc:programe.CP.IfcPset_ManufacturerOccurrence.BatchReference",
    "dsmvifc:programe.CP.IfcPset_ManufacturerOccurrence.AssemblyPlace"
  ],
  "dsmvifc:IfcMask.IfcPset_ManufacturerTypeInformation":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ManufacturerTypeInformation.GlobalTradeItemNumber",
    "dsmvifc:programe.CP.IfcPset_ManufacturerTypeInformation.ArticleNumber",
    "dsmvifc:programe.CP.IfcPset_ManufacturerTypeInformation.ModelReference",
    "dsmvifc:programe.CP.IfcPset_ManufacturerTypeInformation.ModelLabel",
    "dsmvifc:programe.CP.IfcPset_ManufacturerTypeInformation.Manufacturer",
    "dsmvifc:programe.CP.IfcPset_ManufacturerTypeInformation.ProductionYear",
    "dsmvifc:programe.CP.IfcPset_ManufacturerTypeInformation.AssemblyPlace"
  ],
  "dsmvifc:IfcMask.IfcPset_PackingInstructions":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PackingInstructions.PackingCareType",
    "dsmvifc:programe.CP.IfcPset_PackingInstructions.WrappingMaterial",
    "dsmvifc:programe.CP.IfcPset_PackingInstructions.ContainerMaterial",
    "dsmvifc:programe.CP.IfcPset_PackingInstructions.SpecialInstructions"
  ],
  "dsmvifc:IfcMask.IfcPset_PrecastConcreteElementFabrication":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementFabrication.TypeDesignator",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementFabrication.ProductionLotId",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementFabrication.SerialNumber",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementFabrication.PieceMark",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementFabrication.AsBuiltLocationNumber",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementFabrication.ActualProductionDate",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementFabrication.ActualErectionDate"
  ],
  "dsmvifc:IfcMask.IfcPset_PrecastConcreteElementGeneral":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.TypeDesignator",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.CornerChamfer",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.ManufacturingToleranceClass",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.FormStrippingStrength",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.LiftingStrength",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.ReleaseStrength",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.MinimumAllowableSupportLength",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.InitialTension",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.TendonRelaxation",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.TransportationStrength",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.SupportDuringTransportDescription",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.HollowCorePlugging",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.CamberAtMidspan",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.BatterAtStart",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.BatterAtEnd",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.Twisting",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.Shortening",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.PieceMark",
    "dsmvifc:programe.CP.IfcPset_PrecastConcreteElementGeneral.DesignLocationNumber"
  ],
  "dsmvifc:IfcMask.IfcPset_PropertyAgreement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.AgreementType",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.Identifier",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.Version",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.VersionDate",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.PropertyName",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.CommencementDate",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.TerminationDate",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.Duration",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.Options",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.ConditionCommencement",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.Restrictions",
    "dsmvifc:programe.CP.IfcPset_PropertyAgreement.ConditionTermination"
  ],
  "dsmvifc:IfcMask.IfcPset_ServiceLife":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ServiceLife.ServiceLifeType",
    "dsmvifc:programe.CP.IfcPset_ServiceLife.ServiceLifeDuration",
    "dsmvifc:programe.CP.IfcPset_ServiceLife.QualityOfComponents",
    "dsmvifc:programe.CP.IfcPset_ServiceLife.DesignLevel",
    "dsmvifc:programe.CP.IfcPset_ServiceLife.WorkExecutionLevel",
    "dsmvifc:programe.CP.IfcPset_ServiceLife.IndoorEnvironment",
    "dsmvifc:programe.CP.IfcPset_ServiceLife.OutdoorEnvironment",
    "dsmvifc:programe.CP.IfcPset_ServiceLife.InUseConditions",
    "dsmvifc:programe.CP.IfcPset_ServiceLife.MaintenanceLevel",
    "dsmvifc:programe.CP.IfcPset_ServiceLife.MeanTimeBetweenFailure"
  ],
  "dsmvifc:IfcMask.IfcPset_SiteCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SiteCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_SiteCommon.BuildableArea",
    "dsmvifc:programe.CP.IfcPset_SiteCommon.SiteCoverageRatio",
    "dsmvifc:programe.CP.IfcPset_SiteCommon.FloorAreaRatio",
    "dsmvifc:programe.CP.IfcPset_SiteCommon.BuildingHeightLimit",
    "dsmvifc:programe.CP.IfcPset_SiteCommon.TotalArea"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceFireSafetyRequirements":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceFireSafetyRequirements.FireRiskFactor",
    "dsmvifc:programe.CP.IfcPset_SpaceFireSafetyRequirements.FlammableStorage",
    "dsmvifc:programe.CP.IfcPset_SpaceFireSafetyRequirements.FireExit",
    "dsmvifc:programe.CP.IfcPset_SpaceFireSafetyRequirements.SprinklerProtection",
    "dsmvifc:programe.CP.IfcPset_SpaceFireSafetyRequirements.SprinklerProtectionAutomatic",
    "dsmvifc:programe.CP.IfcPset_SpaceFireSafetyRequirements.AirPressurization"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceLightingRequirements":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceLightingRequirements.ArtificialLighting",
    "dsmvifc:programe.CP.IfcPset_SpaceLightingRequirements.Illuminance"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceOccupancyRequirements":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceOccupancyRequirements.OccupancyType",
    "dsmvifc:programe.CP.IfcPset_SpaceOccupancyRequirements.OccupancyNumber",
    "dsmvifc:programe.CP.IfcPset_SpaceOccupancyRequirements.OccupancyNumberPeak",
    "dsmvifc:programe.CP.IfcPset_SpaceOccupancyRequirements.OccupancyTimePerDay",
    "dsmvifc:programe.CP.IfcPset_SpaceOccupancyRequirements.AreaPerOccupant",
    "dsmvifc:programe.CP.IfcPset_SpaceOccupancyRequirements.MinimumHeadroom",
    "dsmvifc:programe.CP.IfcPset_SpaceOccupancyRequirements.IsOutlookDesirable"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceThermalRequirements":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceTemperature",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceTemperatureMax",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceTemperatureMin",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceTemperatureSummerMax",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceTemperatureSummerMin",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceTemperatureWinterMax",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceTemperatureWinterMin",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceHumidity",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceHumidityMax",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceHumidityMin",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceHumiditySummer",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.SpaceHumidityWinter",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.DiscontinuedHeating",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.NaturalVentilation",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.NaturalVentilationRate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.MechanicalVentilationRate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.AirConditioning",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalRequirements.AirConditioningCentral"
  ],
  "dsmvifc:IfcMask.IfcPset_ThermalLoadAggregate":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ThermalLoadAggregate.TotalCoolingLoad",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadAggregate.TotalHeatingLoad",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadAggregate.LightingDiversity",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadAggregate.InfiltrationDiversitySummer",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadAggregate.InfiltrationDiversityWinter",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadAggregate.ApplianceDiversity",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadAggregate.LoadSafetyFactor"
  ],
  "dsmvifc:IfcMask.IfcPset_ThermalLoadDesignCriteria":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ThermalLoadDesignCriteria.OccupancyDiversity",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadDesignCriteria.OutsideAirPerPerson",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadDesignCriteria.ReceptacleLoadIntensity",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadDesignCriteria.AppliancePercentLoadToRadiant",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadDesignCriteria.LightingLoadIntensity",
    "dsmvifc:programe.CP.IfcPset_ThermalLoadDesignCriteria.LightingPercentLoadToReturnAir"
  ],
  "dsmvifc:IfcMask.IfcPset_Warranty":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Warranty.WarrantyIdentifier",
    "dsmvifc:programe.CP.IfcPset_Warranty.WarrantyStartDate",
    "dsmvifc:programe.CP.IfcPset_Warranty.WarrantyEndDate",
    "dsmvifc:programe.CP.IfcPset_Warranty.IsExtendedWarranty",
    "dsmvifc:programe.CP.IfcPset_Warranty.WarrantyPeriod",
    "dsmvifc:programe.CP.IfcPset_Warranty.PointOfContact",
    "dsmvifc:programe.CP.IfcPset_Warranty.WarrantyContent",
    "dsmvifc:programe.CP.IfcPset_Warranty.Exclusions"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_FoundationBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_FoundationBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_FoundationBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_FoundationBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_FoundationBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_FoundationBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_OtherSpatialStructureElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_OtherSpatialStructureElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_OtherSpatialStructureElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_OtherSpatialStructureElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_OtherSpatialStructureElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_OtherSpatialStructureElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_TerrainBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_TerrainBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_TerrainBaseQuantities.Area"
  ],
  "dsmvifc:IfcMask.IfcQto_FacilityPartBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_FacilityPartBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_FacilityPartBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_FacilityPartBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_FacilityPartBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_FacilityPartBaseQuantities.Area",
    "dsmvifc:programe.CP.IfcQto_FacilityPartBaseQuantities.Volume"
  ],
  "dsmvifc:IfcMask.IfcQto_SiteBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_SiteBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_SiteBaseQuantities.GrossPerimeter",
    "dsmvifc:programe.CP.IfcQto_SiteBaseQuantities.GrossArea"
  ],
  "dsmvifc:IfcMask.IfcBuildingElementPart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBuildingElementPart.ObjectType",
    "dsmvifc:programe.CP.IfcBuildingElementPart.Tag",
    "dsmvifc:programe.CP.IfcBuildingElementPart.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDiscreteAccessory":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDiscreteAccessory.ObjectType",
    "dsmvifc:programe.CP.IfcDiscreteAccessory.Tag",
    "dsmvifc:programe.CP.IfcDiscreteAccessory.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcFastener":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFastener.ObjectType",
    "dsmvifc:programe.CP.IfcFastener.Tag",
    "dsmvifc:programe.CP.IfcFastener.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcImpactProtectionDevice":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcImpactProtectionDevice.ObjectType",
    "dsmvifc:programe.CP.IfcImpactProtectionDevice.Tag",
    "dsmvifc:programe.CP.IfcImpactProtectionDevice.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcMechanicalFastener":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcMechanicalFastener.ObjectType",
    "dsmvifc:programe.CP.IfcMechanicalFastener.Tag",
    "dsmvifc:programe.CP.IfcMechanicalFastener.NominalDiameter",
    "dsmvifc:programe.CP.IfcMechanicalFastener.NominalLength",
    "dsmvifc:programe.CP.IfcMechanicalFastener.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcReinforcingBar":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcReinforcingBar.ObjectType",
    "dsmvifc:programe.CP.IfcReinforcingBar.Tag",
    "dsmvifc:programe.CP.IfcReinforcingBar.SteelGrade",
    "dsmvifc:programe.CP.IfcReinforcingBar.CrossSectionArea",
    "dsmvifc:programe.CP.IfcReinforcingBar.PredefinedType",
    "dsmvifc:programe.CP.IfcReinforcingBar.NominalDiameter",
    "dsmvifc:programe.CP.IfcReinforcingBar.BarLength",
    "dsmvifc:programe.CP.IfcReinforcingBar.BarSurface",
    "dsmvifc:programe.CP.IfcReinforcingBar.BendingShapeCode",
    "dsmvifc:programe.CP.IfcReinforcingBar.BendingParameters"
  ],
  "dsmvifc:IfcMask.IfcReinforcingMesh":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcReinforcingMesh.ObjectType",
    "dsmvifc:programe.CP.IfcReinforcingMesh.Tag",
    "dsmvifc:programe.CP.IfcReinforcingMesh.SteelGrade",
    "dsmvifc:programe.CP.IfcReinforcingMesh.PredefinedType",
    "dsmvifc:programe.CP.IfcReinforcingMesh.MeshLength",
    "dsmvifc:programe.CP.IfcReinforcingMesh.MeshWidth",
    "dsmvifc:programe.CP.IfcReinforcingMesh.LongitudinalBarNominalDiameter",
    "dsmvifc:programe.CP.IfcReinforcingMesh.TransverseBarNominalDiameter",
    "dsmvifc:programe.CP.IfcReinforcingMesh.LongitudinalBarCrossSectionArea",
    "dsmvifc:programe.CP.IfcReinforcingMesh.TransverseBarCrossSectionArea",
    "dsmvifc:programe.CP.IfcReinforcingMesh.LongitudinalBarSpacing",
    "dsmvifc:programe.CP.IfcReinforcingMesh.TransverseBarSpacing"
  ],
  "dsmvifc:IfcMask.IfcSign":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSign.ObjectType",
    "dsmvifc:programe.CP.IfcSign.Tag",
    "dsmvifc:programe.CP.IfcSign.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcTendon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTendon.ObjectType",
    "dsmvifc:programe.CP.IfcTendon.Tag",
    "dsmvifc:programe.CP.IfcTendon.SteelGrade",
    "dsmvifc:programe.CP.IfcTendon.PredefinedType",
    "dsmvifc:programe.CP.IfcTendon.TensionForce",
    "dsmvifc:programe.CP.IfcTendon.PreStress",
    "dsmvifc:programe.CP.IfcTendon.FrictionCoefficient",
    "dsmvifc:programe.CP.IfcTendon.AnchorageSlip",
    "dsmvifc:programe.CP.IfcTendon.MinCurvatureRadius",
    "dsmvifc:programe.CP.IfcTendon.NominalDiameter",
    "dsmvifc:programe.CP.IfcTendon.CrossSectionArea"
  ],
  "dsmvifc:IfcMask.IfcTendonAnchor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTendonAnchor.ObjectType",
    "dsmvifc:programe.CP.IfcTendonAnchor.Tag",
    "dsmvifc:programe.CP.IfcTendonAnchor.SteelGrade",
    "dsmvifc:programe.CP.IfcTendonAnchor.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcTendonConduit":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTendonConduit.ObjectType",
    "dsmvifc:programe.CP.IfcTendonConduit.Tag",
    "dsmvifc:programe.CP.IfcTendonConduit.SteelGrade",
    "dsmvifc:programe.CP.IfcTendonConduit.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcVibrationDamper":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcVibrationDamper.ObjectType",
    "dsmvifc:programe.CP.IfcVibrationDamper.Tag",
    "dsmvifc:programe.CP.IfcVibrationDamper.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_DiscreteAccessoryColumnShoe":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryColumnShoe.ColumnShoeBasePlateThickness",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryColumnShoe.ColumnShoeBasePlateWidth",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryColumnShoe.ColumnShoeBasePlateDepth",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryColumnShoe.ColumnShoeCasingHeight",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryColumnShoe.ColumnShoeCasingWidth",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryColumnShoe.ColumnShoeCasingDepth"
  ],
  "dsmvifc:IfcMask.IfcPset_DiscreteAccessoryCornerFixingPlate":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryCornerFixingPlate.CornerFixingPlateLength",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryCornerFixingPlate.CornerFixingPlateThickness",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryCornerFixingPlate.CornerFixingPlateFlangeWidthInPlaneZ",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryCornerFixingPlate.CornerFixingPlateFlangeWidthInPlaneX"
  ],
  "dsmvifc:IfcMask.IfcPset_DiscreteAccessoryDiagonalTrussConnector":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryDiagonalTrussConnector.DiagonalTrussHeight",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryDiagonalTrussConnector.DiagonalTrussLength",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryDiagonalTrussConnector.DiagonalTrussCrossBarSpacing",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryDiagonalTrussConnector.DiagonalTrussBaseBarDiameter",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryDiagonalTrussConnector.DiagonalTrussSecondaryBarDiameter",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryDiagonalTrussConnector.DiagonalTrussCrossBarDiameter"
  ],
  "dsmvifc:IfcMask.IfcPset_DiscreteAccessoryEdgeFixingPlate":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryEdgeFixingPlate.EdgeFixingPlateLength",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryEdgeFixingPlate.EdgeFixingPlateThickness",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryEdgeFixingPlate.EdgeFixingPlateFlangeWidthInPlaneZ",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryEdgeFixingPlate.EdgeFixingPlateFlangeWidthInPlaneX"
  ],
  "dsmvifc:IfcMask.IfcPset_DiscreteAccessoryFixingSocket":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryFixingSocket.FixingSocketTypeReference",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryFixingSocket.FixingSocketHeight",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryFixingSocket.FixingSocketThreadDiameter",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryFixingSocket.FixingSocketThreadLength"
  ],
  "dsmvifc:IfcMask.IfcPset_DiscreteAccessoryLadderTrussConnector":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryLadderTrussConnector.LadderTrussHeight",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryLadderTrussConnector.LadderTrussLength",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryLadderTrussConnector.LadderTrussCrossBarSpacing",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryLadderTrussConnector.LadderTrussBaseBarDiameter",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryLadderTrussConnector.LadderTrussSecondaryBarDiameter",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryLadderTrussConnector.LadderTrussCrossBarDiameter"
  ],
  "dsmvifc:IfcMask.IfcPset_DiscreteAccessoryStandardFixingPlate":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryStandardFixingPlate.StandardFixingPlateWidth",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryStandardFixingPlate.StandardFixingPlateDepth",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryStandardFixingPlate.StandardFixingPlateThickness"
  ],
  "dsmvifc:IfcMask.IfcPset_DiscreteAccessoryWireLoop":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryWireLoop.WireLoopBasePlateThickness",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryWireLoop.WireLoopBasePlateWidth",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryWireLoop.WireLoopBasePlateLength",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryWireLoop.WireDiameter",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryWireLoop.WireEmbeddingLength",
    "dsmvifc:programe.CP.IfcPset_DiscreteAccessoryWireLoop.WireLoopLength"
  ],
  "dsmvifc:IfcMask.IfcPset_DS_MechanicalFastenerAnchorCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerAnchorCommon.InternalDiameter",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerAnchorCommon.InternalSmallDiameter",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerAnchorCommon.InternalLength",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerAnchorCommon.InternalDistance",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerAnchorCommon.BaseDiameter",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerAnchorCommon.HeadLength",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerAnchorCommon.SteelGrade"
  ],
  "dsmvifc:IfcMask.IfcPset_DS_MechanicalFastenerCouplerCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.Threaded",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.ThreadedShape",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.InternalDiameter",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.InternalSecondDiameter",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.InternalSmallDiameter",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.InternalSecondSmallDiameter",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.InternalLength",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.InternalSecondLength",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.InternalDistance",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.NumberOfBolts",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.BoltsDiameter",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.BoltsSpacing",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.BoltsHeadHeight",
    "dsmvifc:programe.CP.IfcPset_DS_MechanicalFastenerCouplerCommon.SteelGrade"
  ],
  "dsmvifc:IfcMask.IfcPset_FastenerWeld":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.Type1",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.Type2",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.Surface1",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.Surface2",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.Process",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.ProcessName",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.a",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.c",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.d",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.e",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.l",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.n",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.s",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.z",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.Intermittent",
    "dsmvifc:programe.CP.IfcPset_FastenerWeld.Staggered"
  ],
  "dsmvifc:IfcMask.IfcPset_MechanicalFastener":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MechanicalFastener.IsInsulated"
  ],
  "dsmvifc:IfcMask.IfcPset_MechanicalFastenerAnchorBolt":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerAnchorBolt.AnchorBoltLength",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerAnchorBolt.AnchorBoltDiameter",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerAnchorBolt.AnchorBoltThreadLength",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerAnchorBolt.AnchorBoltProtrusionLength"
  ],
  "dsmvifc:IfcMask.IfcPset_MechanicalFastenerBolt":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerBolt.ThreadDiameter",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerBolt.ThreadLength",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerBolt.NutsCount",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerBolt.WashersCount",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerBolt.HeadShape",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerBolt.KeyShape",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerBolt.NutShape",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerBolt.WasherShape"
  ],
  "dsmvifc:IfcMask.IfcPset_MechanicalFastenerCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerCommon.NominalDiameter",
    "dsmvifc:programe.CP.IfcPset_MechanicalFastenerCommon.NominalLength"
  ],
  "dsmvifc:IfcMask.IfcPset_ReinforcingBarCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.NominalDiameter",
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.BarLength",
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.BarSpacing",
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.BarSurface",
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.BendingShapeCode",
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.BendingParameters",
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.SpacingType",
    "dsmvifc:programe.CP.IfcPset_ReinforcingBarCommon.AverageBarSpacing"
  ],
  "dsmvifc:IfcMask.IfcPset_ReinforcingMeshCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.MeshLength",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.MeshWidth",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.LongitudinalBarNominalDiameter",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.LongitudinalBarSpacing",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.LongitudinalBarSurface",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.TransverseBarNominalDiameter",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.TransverseBarSpacing",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.TransverseBarSurface",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.TransverseBarBendingShapeCode",
    "dsmvifc:programe.CP.IfcPset_ReinforcingMeshCommon.TransverseBarBendingParameters"
  ],
  "dsmvifc:IfcMask.IfcPset_TendonAnchorCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TendonAnchorCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_TendonAnchorCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_TendonCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TendonCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_TendonCommon.Status",
    "dsmvifc:programe.CP.IfcPset_TendonCommon.NominalDiameter",
    "dsmvifc:programe.CP.IfcPset_TendonCommon.SheathDiameter"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_MechanicalFastenerAnchorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_MechanicalFastenerAnchorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_MechanicalFastenerAnchorBaseQuantities.Count",
    "dsmvifc:programe.CP.IfcQto_DS_MechanicalFastenerAnchorBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_MechanicalFastenerCouplerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_MechanicalFastenerCouplerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_MechanicalFastenerCouplerBaseQuantities.Count",
    "dsmvifc:programe.CP.IfcQto_DS_MechanicalFastenerCouplerBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_ImpactProtectionDeviceBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ImpactProtectionDeviceBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ImpactProtectionDeviceBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_PictorialSignQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_PictorialSignQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_PictorialSignQuantities.Area",
    "dsmvifc:programe.CP.IfcQto_PictorialSignQuantities.SignArea"
  ],
  "dsmvifc:IfcMask.IfcQto_ReinforcingElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ReinforcingElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ReinforcingElementBaseQuantities.Count",
    "dsmvifc:programe.CP.IfcQto_ReinforcingElementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_ReinforcingElementBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_SignBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_SignBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_SignBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_SignBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_SignBaseQuantities.Thickness",
    "dsmvifc:programe.CP.IfcQto_SignBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcFurnishingElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFurnishingElement.ObjectType",
    "dsmvifc:programe.CP.IfcFurnishingElement.Tag"
  ],
  "dsmvifc:IfcMask.IfcFurniture":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFurniture.ObjectType",
    "dsmvifc:programe.CP.IfcFurniture.Tag",
    "dsmvifc:programe.CP.IfcFurniture.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSystemFurnitureElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSystemFurnitureElement.ObjectType",
    "dsmvifc:programe.CP.IfcSystemFurnitureElement.Tag",
    "dsmvifc:programe.CP.IfcSystemFurnitureElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_FurnitureTypeChair":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeChair.SeatingHeight",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeChair.HighestSeatingHeight",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeChair.LowestSeatingHeight"
  ],
  "dsmvifc:IfcMask.IfcPset_FurnitureTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeCommon.Description",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeCommon.Style",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeCommon.NominalHeight",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeCommon.NominalLength",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeCommon.NominalDepth",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeCommon.MainColor",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeCommon.IsBuiltIn"
  ],
  "dsmvifc:IfcMask.IfcPset_FurnitureTypeDesk":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeDesk.WorksurfaceArea"
  ],
  "dsmvifc:IfcMask.IfcPset_FurnitureTypeFileCabinet":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeFileCabinet.WithLock"
  ],
  "dsmvifc:IfcMask.IfcPset_FurnitureTypeTable":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeTable.WorksurfaceArea",
    "dsmvifc:programe.CP.IfcPset_FurnitureTypeTable.NumberOfChairs"
  ],
  "dsmvifc:IfcMask.IfcPset_SystemFurnitureElementTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeCommon.IsUsed",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeCommon.GroupCode",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeCommon.NominalWidth",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeCommon.NominalHeight",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeCommon.Finishing"
  ],
  "dsmvifc:IfcMask.IfcPset_SystemFurnitureElementTypePanel":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypePanel.HasOpening",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypePanel.FurniturePanelType",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypePanel.NominalThickness"
  ],
  "dsmvifc:IfcMask.IfcPset_SystemFurnitureElementTypeWorkSurface":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeWorkSurface.UsePurpose",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeWorkSurface.SupportType",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeWorkSurface.HangingHeight",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeWorkSurface.NominalThickness",
    "dsmvifc:programe.CP.IfcPset_SystemFurnitureElementTypeWorkSurface.ShapeDescription"
  ],
  "dsmvifc:IfcMask.IfcAlignment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcAlignment.ObjectType",
    "dsmvifc:programe.CP.IfcAlignment.PredefinedType",
    "dsmvifc:programe.CP.IfcAlignment.LinearRefMethod"
  ],
  "dsmvifc:IfcMask.IfcElementAssembly":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcElementAssembly.ObjectType",
    "dsmvifc:programe.CP.IfcElementAssembly.Tag",
    "dsmvifc:programe.CP.IfcElementAssembly.AssemblyPlace",
    "dsmvifc:programe.CP.IfcElementAssembly.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSpatialZone":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSpatialZone.ObjectType",
    "dsmvifc:programe.CP.IfcSpatialZone.LongName",
    "dsmvifc:programe.CP.IfcSpatialZone.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_ElementAssemblyCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElementAssemblyCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ElementAssemblyCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_Quantity":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_Quantity.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_Quantity.Quantity"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_SpatialZoneBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_SpatialZoneBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_SpatialZoneBaseQuantities.FootPrintArea"
  ],
  "dsmvifc:IfcMask.IfcBeam":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBeam.ObjectType",
    "dsmvifc:programe.CP.IfcBeam.Tag",
    "dsmvifc:programe.CP.IfcBeam.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcBeamStandardCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBeamStandardCase.ObjectType",
    "dsmvifc:programe.CP.IfcBeamStandardCase.Tag",
    "dsmvifc:programe.CP.IfcBeamStandardCase.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcBearing":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBearing.ObjectType",
    "dsmvifc:programe.CP.IfcBearing.Tag",
    "dsmvifc:programe.CP.IfcBearing.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcBuildingElementProxy":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBuildingElementProxy.ObjectType",
    "dsmvifc:programe.CP.IfcBuildingElementProxy.Tag",
    "dsmvifc:programe.CP.IfcBuildingElementProxy.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCaissonFoundation":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCaissonFoundation.ObjectType",
    "dsmvifc:programe.CP.IfcCaissonFoundation.Tag",
    "dsmvifc:programe.CP.IfcCaissonFoundation.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcColumn":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcColumn.ObjectType",
    "dsmvifc:programe.CP.IfcColumn.Tag",
    "dsmvifc:programe.CP.IfcColumn.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcColumnStandardCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcColumnStandardCase.ObjectType",
    "dsmvifc:programe.CP.IfcColumnStandardCase.Tag",
    "dsmvifc:programe.CP.IfcColumnStandardCase.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcFillElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFillElement.ObjectType",
    "dsmvifc:programe.CP.IfcFillElement.Tag",
    "dsmvifc:programe.CP.IfcFillElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcFooting":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFooting.ObjectType",
    "dsmvifc:programe.CP.IfcFooting.Tag",
    "dsmvifc:programe.CP.IfcFooting.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcGroundReinforcementElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcGroundReinforcementElement.ObjectType",
    "dsmvifc:programe.CP.IfcGroundReinforcementElement.Tag",
    "dsmvifc:programe.CP.IfcGroundReinforcementElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcMember":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcMember.ObjectType",
    "dsmvifc:programe.CP.IfcMember.Tag",
    "dsmvifc:programe.CP.IfcMember.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcMemberStandardCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcMemberStandardCase.ObjectType",
    "dsmvifc:programe.CP.IfcMemberStandardCase.Tag",
    "dsmvifc:programe.CP.IfcMemberStandardCase.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcOpeningElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcOpeningElement.ObjectType",
    "dsmvifc:programe.CP.IfcOpeningElement.Tag",
    "dsmvifc:programe.CP.IfcOpeningElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcOpeningStandardCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcOpeningStandardCase.ObjectType",
    "dsmvifc:programe.CP.IfcOpeningStandardCase.Tag",
    "dsmvifc:programe.CP.IfcOpeningStandardCase.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPile":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPile.ObjectType",
    "dsmvifc:programe.CP.IfcPile.Tag",
    "dsmvifc:programe.CP.IfcPile.PredefinedType",
    "dsmvifc:programe.CP.IfcPile.ConstructionType"
  ],
  "dsmvifc:IfcMask.IfcPlate":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPlate.ObjectType",
    "dsmvifc:programe.CP.IfcPlate.Tag",
    "dsmvifc:programe.CP.IfcPlate.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPlateStandardCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPlateStandardCase.ObjectType",
    "dsmvifc:programe.CP.IfcPlateStandardCase.Tag",
    "dsmvifc:programe.CP.IfcPlateStandardCase.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSlab":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSlab.ObjectType",
    "dsmvifc:programe.CP.IfcSlab.Tag",
    "dsmvifc:programe.CP.IfcSlab.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSlabElementedCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSlabElementedCase.ObjectType",
    "dsmvifc:programe.CP.IfcSlabElementedCase.Tag",
    "dsmvifc:programe.CP.IfcSlabElementedCase.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSlabStandardCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSlabStandardCase.ObjectType",
    "dsmvifc:programe.CP.IfcSlabStandardCase.Tag",
    "dsmvifc:programe.CP.IfcSlabStandardCase.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcWall":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcWall.ObjectType",
    "dsmvifc:programe.CP.IfcWall.Tag",
    "dsmvifc:programe.CP.IfcWall.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcWallElementedCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcWallElementedCase.ObjectType",
    "dsmvifc:programe.CP.IfcWallElementedCase.Tag",
    "dsmvifc:programe.CP.IfcWallElementedCase.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcWallStandardCase":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcWallStandardCase.ObjectType",
    "dsmvifc:programe.CP.IfcWallStandardCase.Tag",
    "dsmvifc:programe.CP.IfcWallStandardCase.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_BeamCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BeamCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_BeamCommon.Status",
    "dsmvifc:programe.CP.IfcPset_BeamCommon.Span",
    "dsmvifc:programe.CP.IfcPset_BeamCommon.Slope",
    "dsmvifc:programe.CP.IfcPset_BeamCommon.Roll",
    "dsmvifc:programe.CP.IfcPset_BeamCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_BeamCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_BeamCommon.LoadBearing",
    "dsmvifc:programe.CP.IfcPset_BeamCommon.FireRating"
  ],
  "dsmvifc:IfcMask.IfcPset_BearingCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BearingCommon.DisplacementAccomodated",
    "dsmvifc:programe.CP.IfcPset_BearingCommon.RotationAccomodated"
  ],
  "dsmvifc:IfcMask.IfcPset_BuildingElementProxyCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyCommon.Status",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyCommon.LoadBearing",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyCommon.FireRating"
  ],
  "dsmvifc:IfcMask.IfcPset_BuildingElementProxyProvisionForVoid":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyProvisionForVoid.Shape",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyProvisionForVoid.Width",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyProvisionForVoid.Height",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyProvisionForVoid.Diameter",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyProvisionForVoid.Depth",
    "dsmvifc:programe.CP.IfcPset_BuildingElementProxyProvisionForVoid.System"
  ],
  "dsmvifc:IfcMask.IfcPset_ColumnCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ColumnCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ColumnCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ColumnCommon.Slope",
    "dsmvifc:programe.CP.IfcPset_ColumnCommon.Roll",
    "dsmvifc:programe.CP.IfcPset_ColumnCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_ColumnCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_ColumnCommon.LoadBearing",
    "dsmvifc:programe.CP.IfcPset_ColumnCommon.FireRating"
  ],
  "dsmvifc:IfcMask.IfcPset_FootingCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FootingCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_FootingCommon.Status",
    "dsmvifc:programe.CP.IfcPset_FootingCommon.LoadBearing"
  ],
  "dsmvifc:IfcMask.IfcPset_MemberCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MemberCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_MemberCommon.Status",
    "dsmvifc:programe.CP.IfcPset_MemberCommon.Span",
    "dsmvifc:programe.CP.IfcPset_MemberCommon.Slope",
    "dsmvifc:programe.CP.IfcPset_MemberCommon.Roll",
    "dsmvifc:programe.CP.IfcPset_MemberCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_MemberCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_MemberCommon.LoadBearing",
    "dsmvifc:programe.CP.IfcPset_MemberCommon.FireRating"
  ],
  "dsmvifc:IfcMask.IfcPset_OpeningElementCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_OpeningElementCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_OpeningElementCommon.Status",
    "dsmvifc:programe.CP.IfcPset_OpeningElementCommon.Purpose",
    "dsmvifc:programe.CP.IfcPset_OpeningElementCommon.FireExit",
    "dsmvifc:programe.CP.IfcPset_OpeningElementCommon.ProtectedOpening"
  ],
  "dsmvifc:IfcMask.IfcPset_PileCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PileCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_PileCommon.Status",
    "dsmvifc:programe.CP.IfcPset_PileCommon.LoadBearing"
  ],
  "dsmvifc:IfcMask.IfcPset_PlateCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PlateCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_PlateCommon.Status",
    "dsmvifc:programe.CP.IfcPset_PlateCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_PlateCommon.LoadBearing",
    "dsmvifc:programe.CP.IfcPset_PlateCommon.AcousticRating",
    "dsmvifc:programe.CP.IfcPset_PlateCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_PlateCommon.ThermalTransmittance"
  ],
  "dsmvifc:IfcMask.IfcPset_PrecastSlab":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PrecastSlab.TypeDesignator",
    "dsmvifc:programe.CP.IfcPset_PrecastSlab.ToppingType",
    "dsmvifc:programe.CP.IfcPset_PrecastSlab.EdgeDistanceToFirstAxis",
    "dsmvifc:programe.CP.IfcPset_PrecastSlab.DistanceBetweenComponentAxes",
    "dsmvifc:programe.CP.IfcPset_PrecastSlab.AngleToFirstAxis",
    "dsmvifc:programe.CP.IfcPset_PrecastSlab.AngleBetweenComponentAxes",
    "dsmvifc:programe.CP.IfcPset_PrecastSlab.NominalThickness",
    "dsmvifc:programe.CP.IfcPset_PrecastSlab.NominalToppingThickness"
  ],
  "dsmvifc:IfcMask.IfcPset_ReinforcementBarCountOfIndependentFooting":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarCountOfIndependentFooting.Description",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarCountOfIndependentFooting.Reference",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarCountOfIndependentFooting.XDirectionLowerBarCount",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarCountOfIndependentFooting.YDirectionLowerBarCount",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarCountOfIndependentFooting.XDirectionUpperBarCount",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarCountOfIndependentFooting.YDirectionUpperBarCount"
  ],
  "dsmvifc:IfcMask.IfcPset_ReinforcementBarPitchOfBeam":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfBeam.Description",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfBeam.Reference",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfBeam.StirrupBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfBeam.SpacingBarPitch"
  ],
  "dsmvifc:IfcMask.IfcPset_ReinforcementBarPitchOfColumn":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfColumn.Description",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfColumn.Reference",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfColumn.ReinforcementBarType",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfColumn.HoopBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfColumn.XDirectionTieHoopBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfColumn.XDirectionTieHoopCount",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfColumn.YDirectionTieHoopBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfColumn.YDirectionTieHoopCount"
  ],
  "dsmvifc:IfcMask.IfcPset_ReinforcementBarPitchOfContinuousFooting":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfContinuousFooting.Description",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfContinuousFooting.Reference",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfContinuousFooting.CrossingUpperBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfContinuousFooting.CrossingLowerBarPitch"
  ],
  "dsmvifc:IfcMask.IfcPset_ReinforcementBarPitchOfSlab":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.Description",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.Reference",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.LongOutsideTopBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.LongInsideCenterTopBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.LongInsideEndTopBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.ShortOutsideTopBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.ShortInsideCenterTopBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.ShortInsideEndTopBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.LongOutsideLowerBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.LongInsideCenterLowerBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.LongInsideEndLowerBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.ShortOutsideLowerBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.ShortInsideCenterLowerBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfSlab.ShortInsideEndLowerBarPitch"
  ],
  "dsmvifc:IfcMask.IfcPset_ReinforcementBarPitchOfWall":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfWall.Description",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfWall.Reference",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfWall.BarAllocationType",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfWall.VerticalBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfWall.HorizontalBarPitch",
    "dsmvifc:programe.CP.IfcPset_ReinforcementBarPitchOfWall.SpacingBarPitch"
  ],
  "dsmvifc:IfcMask.IfcPset_SlabCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SlabCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.Status",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.AcousticRating",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.Combustible",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.SurfaceSpreadOfFlame",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.LoadBearing",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.Compartmentation",
    "dsmvifc:programe.CP.IfcPset_SlabCommon.PitchAngle"
  ],
  "dsmvifc:IfcMask.IfcPset_WallCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WallCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_WallCommon.Status",
    "dsmvifc:programe.CP.IfcPset_WallCommon.AcousticRating",
    "dsmvifc:programe.CP.IfcPset_WallCommon.FireRating",
    "dsmvifc:programe.CP.IfcPset_WallCommon.Combustible",
    "dsmvifc:programe.CP.IfcPset_WallCommon.SurfaceSpreadOfFlame",
    "dsmvifc:programe.CP.IfcPset_WallCommon.ThermalTransmittance",
    "dsmvifc:programe.CP.IfcPset_WallCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_WallCommon.ExtendToStructure",
    "dsmvifc:programe.CP.IfcPset_WallCommon.LoadBearing",
    "dsmvifc:programe.CP.IfcPset_WallCommon.Compartmentation"
  ],
  "dsmvifc:IfcMask.IfcQto_BeamBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_BeamBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_BuildingElementProxyQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_BuildingElementProxyQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_BuildingElementProxyQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_BuildingElementProxyQuantities.NetVolume"
  ],
  "dsmvifc:IfcMask.IfcQto_ColumnBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_ColumnBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_FootingBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_FootingBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_MemberBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_MemberBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_OpeningElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_OpeningElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_OpeningElementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_OpeningElementBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_OpeningElementBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_OpeningElementBaseQuantities.Area",
    "dsmvifc:programe.CP.IfcQto_OpeningElementBaseQuantities.Volume"
  ],
  "dsmvifc:IfcMask.IfcQto_PileBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_PileBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_PileBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_PileBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_PileBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_PileBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_PileBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_PileBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_PileBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_PileBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_PlateBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_PlateBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_PlateBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_PlateBaseQuantities.Perimeter",
    "dsmvifc:programe.CP.IfcQto_PlateBaseQuantities.GrossArea",
    "dsmvifc:programe.CP.IfcQto_PlateBaseQuantities.NetArea",
    "dsmvifc:programe.CP.IfcQto_PlateBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_PlateBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_PlateBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_PlateBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_SlabBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.Perimeter",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.GrossArea",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.NetArea",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_SlabBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_WallBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.GrossFootprintArea",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.NetFootprintArea",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.GrossSideArea",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.NetSideArea",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_WallBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcTransportElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTransportElement.ObjectType",
    "dsmvifc:programe.CP.IfcTransportElement.Tag",
    "dsmvifc:programe.CP.IfcTransportElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_ElementKinematics":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElementKinematics.CyclicRange",
    "dsmvifc:programe.CP.IfcPset_ElementKinematics.LinearRange",
    "dsmvifc:programe.CP.IfcPset_ElementKinematics.MaximumAngularVelocity",
    "dsmvifc:programe.CP.IfcPset_ElementKinematics.MaximumConstantSpeed",
    "dsmvifc:programe.CP.IfcPset_ElementKinematics.MinimumTime"
  ],
  "dsmvifc:IfcMask.IfcPset_TransportElementCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TransportElementCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_TransportElementCommon.Status",
    "dsmvifc:programe.CP.IfcPset_TransportElementCommon.CapacityPeople",
    "dsmvifc:programe.CP.IfcPset_TransportElementCommon.CapacityWeight",
    "dsmvifc:programe.CP.IfcPset_TransportElementCommon.FireExit"
  ],
  "dsmvifc:IfcMask.IfcPset_TransportElementElevator":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TransportElementElevator.FireFightingLift",
    "dsmvifc:programe.CP.IfcPset_TransportElementElevator.ClearWidth",
    "dsmvifc:programe.CP.IfcPset_TransportElementElevator.ClearDepth",
    "dsmvifc:programe.CP.IfcPset_TransportElementElevator.ClearHeight"
  ],
  "dsmvifc:IfcMask.IfcBridge":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBridge.ObjectType",
    "dsmvifc:programe.CP.IfcBridge.LongName",
    "dsmvifc:programe.CP.IfcBridge.CompositionType",
    "dsmvifc:programe.CP.IfcBridge.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcBridgePart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBridgePart.ObjectType",
    "dsmvifc:programe.CP.IfcBridgePart.LongName",
    "dsmvifc:programe.CP.IfcBridgePart.CompositionType",
    "dsmvifc:programe.CP.IfcBridgePart.PredefinedType",
    "dsmvifc:programe.CP.IfcBridgePart.UsageType"
  ],
  "dsmvifc:IfcMask.IfcPset_BridgeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BridgeCommon.StructureIndicator"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeAbutmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAbutmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAbutmentBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAbutmentBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAbutmentBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAbutmentBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeAnchorBlockBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAnchorBlockBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAnchorBlockBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAnchorBlockBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAnchorBlockBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeAnchorBlockBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeArchBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.Span",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.Rise",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeDeckBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeHangerBeltBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeHangerBeltBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeHangerBeltBaseQuantities.TotalLength",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeHangerBeltBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeHangerBeltBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeOtherSpatialStructureElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherSpatialStructureElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherSpatialStructureElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherSpatialStructureElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherSpatialStructureElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherSpatialStructureElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgePierBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.HeightAboveGroundLevel",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeSpanBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSpanBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeStayBeltBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeStayBeltBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeStayBeltBaseQuantities.TotalLength",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeStayBeltBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeStayBeltBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeSuspensionSystemBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSuspensionSystemBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSuspensionSystemBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSuspensionSystemBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeTowerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.HeightAboveGroundLevel",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.HeightAboveDeck",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcBridgeElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBridgeElement.ObjectType",
    "dsmvifc:programe.CP.IfcBridgeElement.Tag",
    "dsmvifc:programe.CP.IfcBridgeElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeArchSegmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeArchSegmentBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeCrossheadBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeCrossheadBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeDeckSegmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeDeckSegmentBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeHangerCableBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeHangerCableBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeHangerCableBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeHangerCableBaseQuantities.Diameter",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeHangerCableBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeHangerCableBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeOtherElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeOtherElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgePierSegmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgePierSegmentBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeStayCableBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeStayCableBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeStayCableBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeStayCableBaseQuantities.Diameter",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeStayCableBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeStayCableBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeSuspensionCableBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSuspensionCableBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSuspensionCableBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSuspensionCableBaseQuantities.Diameter",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSuspensionCableBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeSuspensionCableBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeTowerSegmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeTowerSegmentBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_BridgeWayBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_BridgeWayBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcBuilding":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBuilding.ObjectType",
    "dsmvifc:programe.CP.IfcBuilding.LongName",
    "dsmvifc:programe.CP.IfcBuilding.CompositionType",
    "dsmvifc:programe.CP.IfcBuilding.ElevationOfRefHeight",
    "dsmvifc:programe.CP.IfcBuilding.ElevationOfTerrain",
    "dsmvifc:programe.CP.IfcBuilding.BuildingAddress_InternalLocation",
    "dsmvifc:programe.CP.IfcBuilding.BuildingAddress_AddressLines",
    "dsmvifc:programe.CP.IfcBuilding.BuildingAddress_PostalBox",
    "dsmvifc:programe.CP.IfcBuilding.BuildingAddress_Town",
    "dsmvifc:programe.CP.IfcBuilding.BuildingAddress_Region",
    "dsmvifc:programe.CP.IfcBuilding.BuildingAddress_PostalCode",
    "dsmvifc:programe.CP.IfcBuilding.BuildingAddress_Country"
  ],
  "dsmvifc:IfcMask.IfcBuildingStorey":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBuildingStorey.ObjectType",
    "dsmvifc:programe.CP.IfcBuildingStorey.LongName",
    "dsmvifc:programe.CP.IfcBuildingStorey.CompositionType",
    "dsmvifc:programe.CP.IfcBuildingStorey.Elevation"
  ],
  "dsmvifc:IfcMask.IfcSpace":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSpace.ObjectType",
    "dsmvifc:programe.CP.IfcSpace.LongName",
    "dsmvifc:programe.CP.IfcSpace.CompositionType",
    "dsmvifc:programe.CP.IfcSpace.PredefinedType",
    "dsmvifc:programe.CP.IfcSpace.ElevationWithFlooring"
  ],
  "dsmvifc:IfcMask.IfcPset_BuildingCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.BuildingID",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.IsPermanentID",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.ConstructionMethod",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.FireProtectionClass",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.SprinklerProtection",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.SprinklerProtectionAutomatic",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.OccupancyType",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.GrossPlannedArea",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.NetPlannedArea",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.NumberOfStoreys",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.YearOfConstruction",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.YearOfLastRefurbishment",
    "dsmvifc:programe.CP.IfcPset_BuildingCommon.IsLandmarked"
  ],
  "dsmvifc:IfcMask.IfcPset_BuildingStoreyCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BuildingStoreyCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_BuildingStoreyCommon.EntranceLevel",
    "dsmvifc:programe.CP.IfcPset_BuildingStoreyCommon.AboveGround",
    "dsmvifc:programe.CP.IfcPset_BuildingStoreyCommon.SprinklerProtection",
    "dsmvifc:programe.CP.IfcPset_BuildingStoreyCommon.SprinklerProtectionAutomatic",
    "dsmvifc:programe.CP.IfcPset_BuildingStoreyCommon.LoadBearingCapacity",
    "dsmvifc:programe.CP.IfcPset_BuildingStoreyCommon.GrossPlannedArea",
    "dsmvifc:programe.CP.IfcPset_BuildingStoreyCommon.NetPlannedArea"
  ],
  "dsmvifc:IfcMask.IfcPset_BuildingUse":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BuildingUse.MarketCategory",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.MarketSubCategory",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.PlanningControlStatus",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.NarrativeText",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.VacancyRateInCategoryNow",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.TenureModesAvailableNow",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.MarketSubCategoriesAvailableNow",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.RentalRatesInCategoryNow",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.VacancyRateInCategoryFuture",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.TenureModesAvailableFuture",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.MarketSubCategoriesAvailableFuture",
    "dsmvifc:programe.CP.IfcPset_BuildingUse.RentalRatesInCategoryFuture"
  ],
  "dsmvifc:IfcMask.IfcPset_BuildingUseAdjacent":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BuildingUseAdjacent.MarketCategory",
    "dsmvifc:programe.CP.IfcPset_BuildingUseAdjacent.MarketSubCategory",
    "dsmvifc:programe.CP.IfcPset_BuildingUseAdjacent.PlanningControlStatus",
    "dsmvifc:programe.CP.IfcPset_BuildingUseAdjacent.NarrativeText"
  ],
  "dsmvifc:IfcMask.IfcPset_OutsideDesignCriteria":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.HeatingDryBulb",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.HeatingWetBulb",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.HeatingDesignDay",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.CoolingDryBulb",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.CoolingWetBulb",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.CoolingDesignDay",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.WeatherDataStation",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.WeatherDataDate",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.BuildingThermalExposure",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.PrevailingWindDirection",
    "dsmvifc:programe.CP.IfcPset_OutsideDesignCriteria.PrevailingWindVelocity"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_SpaceCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_SpaceCommon.GrossPlannedArea",
    "dsmvifc:programe.CP.IfcPset_SpaceCommon.NetPlannedArea",
    "dsmvifc:programe.CP.IfcPset_SpaceCommon.PubliclyAccessible",
    "dsmvifc:programe.CP.IfcPset_SpaceCommon.HandicapAccessible"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceCoveringRequirements":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.FloorCovering",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.FloorCoveringThickness",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.WallCovering",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.WallCoveringThickness",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.CeilingCovering",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.CeilingCoveringThickness",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.SkirtingBoard",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.SkirtingBoardHeight",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.Molding",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.MoldingHeight",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.ConcealedFlooring",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.ConcealedFlooringOffset",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.ConcealedCeiling",
    "dsmvifc:programe.CP.IfcPset_SpaceCoveringRequirements.ConcealedCeilingOffset"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceParking":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceParking.ParkingUse",
    "dsmvifc:programe.CP.IfcPset_SpaceParking.ParkingUnits",
    "dsmvifc:programe.CP.IfcPset_SpaceParking.IsAisle",
    "dsmvifc:programe.CP.IfcPset_SpaceParking.IsOneWay"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceThermalDesign":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.CoolingDesignAirflow",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.HeatingDesignAirflow",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.TotalSensibleHeatGain",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.TotalHeatGain",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.TotalHeatLoss",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.CoolingDryBulb",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.CoolingRelativeHumidity",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.HeatingDryBulb",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.HeatingRelativeHumidity",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.VentilationAirFlowrate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.ExhaustAirFlowrate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.CeilingRAPlenum",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalDesign.BoundaryAreaHeatLoss"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceThermalLoad":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.People",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.Lighting",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.EquipmentSensible",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.VentilationIndoorAir",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.VentilationOutdoorAir",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.RecirculatedAir",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.ExhaustAir",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.AirExchangeRate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.DryBulbTemperature",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.RelativeHumidity",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.InfiltrationSensible",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.TotalSensibleLoad",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.TotalLatentLoad",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoad.TotalRadiantLoad"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceThermalLoadPHistory":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.People",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.Lighting",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.EquipmentSensible",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.VentilationIndoorAir",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.VentilationOutdoorAir",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.RecirculatedAir",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.ExhaustAir",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.AirExchangeRate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.DryBulbTemperature",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.RelativeHumidity",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.InfiltrationSensible",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.TotalSensibleLoad",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.TotalLatentLoad",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalLoadPHistory.TotalRadiantLoad"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceThermalPHistory":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceThermalPHistory.CoolingAirFlowRate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalPHistory.HeatingAirFlowRate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalPHistory.VentilationAirFlowRate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalPHistory.ExhaustAirFlowRate",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalPHistory.SpaceTemperature",
    "dsmvifc:programe.CP.IfcPset_SpaceThermalPHistory.SpaceRelativeHumidity"
  ],
  "dsmvifc:IfcMask.IfcQto_BuildingBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_BuildingBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_BuildingBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_BuildingBaseQuantities.EavesHeigth",
    "dsmvifc:programe.CP.IfcQto_BuildingBaseQuantities.FootprintArea",
    "dsmvifc:programe.CP.IfcQto_BuildingBaseQuantities.GrossFloorArea",
    "dsmvifc:programe.CP.IfcQto_BuildingBaseQuantities.NetFloorArea",
    "dsmvifc:programe.CP.IfcQto_BuildingBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_BuildingBaseQuantities.NetVolume"
  ],
  "dsmvifc:IfcMask.IfcQto_BuildingStoreyBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_BuildingStoreyBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_BuildingStoreyBaseQuantities.GrossHeight",
    "dsmvifc:programe.CP.IfcQto_BuildingStoreyBaseQuantities.NetHeigtht",
    "dsmvifc:programe.CP.IfcQto_BuildingStoreyBaseQuantities.GrossPerimeter",
    "dsmvifc:programe.CP.IfcQto_BuildingStoreyBaseQuantities.GrossFloorArea",
    "dsmvifc:programe.CP.IfcQto_BuildingStoreyBaseQuantities.NetFloorArea",
    "dsmvifc:programe.CP.IfcQto_BuildingStoreyBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_BuildingStoreyBaseQuantities.NetVolume"
  ],
  "dsmvifc:IfcMask.IfcQto_SpaceBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.FinishCeilingHeight",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.FinishFloorHeight",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.GrossPerimeter",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.NetPerimeter",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.GrossFloorArea",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.NetFloorArea",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.GrossWallArea",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.NetWallArea",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.GrossCeilingArea",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.NetCeilingArea",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_SpaceBaseQuantities.NetVolume"
  ],
  "dsmvifc:IfcMask.IfcPset_CivilElementCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CivilElementCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CivilElementCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcDamElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDamElement.ObjectType",
    "dsmvifc:programe.CP.IfcDamElement.Tag",
    "dsmvifc:programe.CP.IfcDamElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_DamOtherElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcDam":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDam.ObjectType",
    "dsmvifc:programe.CP.IfcDam.LongName",
    "dsmvifc:programe.CP.IfcDam.CompositionType"
  ],
  "dsmvifc:IfcMask.IfcDamPart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDamPart.ObjectType",
    "dsmvifc:programe.CP.IfcDamPart.LongName",
    "dsmvifc:programe.CP.IfcDamPart.CompositionType",
    "dsmvifc:programe.CP.IfcDamPart.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_DamBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_DamBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_DamOtherSpatialStructureElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcMarineFacility":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcMarineFacility.ObjectType",
    "dsmvifc:programe.CP.IfcMarineFacility.LongName",
    "dsmvifc:programe.CP.IfcMarineFacility.CompositionType",
    "dsmvifc:programe.CP.IfcMarineFacility.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcMarinePart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcMarinePart.ObjectType",
    "dsmvifc:programe.CP.IfcMarinePart.LongName",
    "dsmvifc:programe.CP.IfcMarinePart.CompositionType",
    "dsmvifc:programe.CP.IfcMarinePart.UsageType",
    "dsmvifc:programe.CP.IfcMarinePart.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_BreakwaterCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BreakwaterCommon.StructuralStyle",
    "dsmvifc:programe.CP.IfcPset_BreakwaterCommon.Elevation"
  ],
  "dsmvifc:IfcMask.IfcPset_GateHeadCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_GateHeadCommon.StructuralType"
  ],
  "dsmvifc:IfcMask.IfcPset_JettyCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_JettyCommon.StructuralType",
    "dsmvifc:programe.CP.IfcPset_JettyCommon.BentSpacing",
    "dsmvifc:programe.CP.IfcPset_JettyCommon.PierSectionType",
    "dsmvifc:programe.CP.IfcPset_JettyCommon.Elevation"
  ],
  "dsmvifc:IfcMask.IfcPset_JettyDesignCriteria":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_JettyDesignCriteria.HighWaterLevel",
    "dsmvifc:programe.CP.IfcPset_JettyDesignCriteria.LowWaterLevel",
    "dsmvifc:programe.CP.IfcPset_JettyDesignCriteria.ExtremeHighWaterLevel",
    "dsmvifc:programe.CP.IfcPset_JettyDesignCriteria.ExtremeLowWaterLevel",
    "dsmvifc:programe.CP.IfcPset_JettyDesignCriteria.ShipLoading",
    "dsmvifc:programe.CP.IfcPset_JettyDesignCriteria.WaveLoading",
    "dsmvifc:programe.CP.IfcPset_JettyDesignCriteria.FlowLoading",
    "dsmvifc:programe.CP.IfcPset_JettyDesignCriteria.UniformlyDistributedLoad",
    "dsmvifc:programe.CP.IfcPset_JettyDesignCriteria.EquipmentLoading"
  ],
  "dsmvifc:IfcMask.IfcPset_MarineFacilityTransportation":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MarineFacilityTransportation.Berths",
    "dsmvifc:programe.CP.IfcPset_MarineFacilityTransportation.BerthGrade",
    "dsmvifc:programe.CP.IfcPset_MarineFacilityTransportation.BerthCargoWeight"
  ],
  "dsmvifc:IfcMask.IfcPset_MarinePartChamberCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MarinePartChamberCommon.EffectiveChamberSize",
    "dsmvifc:programe.CP.IfcPset_MarinePartChamberCommon.StructuralType"
  ],
  "dsmvifc:IfcMask.IfcPset_QuayCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_QuayCommon.StructuralType",
    "dsmvifc:programe.CP.IfcPset_QuayCommon.BentSpacing",
    "dsmvifc:programe.CP.IfcPset_QuayCommon.QuaySectionType",
    "dsmvifc:programe.CP.IfcPset_QuayCommon.Elevation"
  ],
  "dsmvifc:IfcMask.IfcPset_QuayDesignCriteria":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_QuayDesignCriteria.HighWaterLevel",
    "dsmvifc:programe.CP.IfcPset_QuayDesignCriteria.LowWaterLevel",
    "dsmvifc:programe.CP.IfcPset_QuayDesignCriteria.ExtremeHighWaterLevel",
    "dsmvifc:programe.CP.IfcPset_QuayDesignCriteria.ExtremeLowWaterLevel",
    "dsmvifc:programe.CP.IfcPset_QuayDesignCriteria.ShipLoading",
    "dsmvifc:programe.CP.IfcPset_QuayDesignCriteria.WaveLoading",
    "dsmvifc:programe.CP.IfcPset_QuayDesignCriteria.FlowLoading",
    "dsmvifc:programe.CP.IfcPset_QuayDesignCriteria.UniformlyDistributedLoad",
    "dsmvifc:programe.CP.IfcPset_QuayDesignCriteria.EquipmentLoading"
  ],
  "dsmvifc:IfcMask.IfcPset_RevetmentCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_RevetmentCommon.StructuralType",
    "dsmvifc:programe.CP.IfcPset_RevetmentCommon.Elevation"
  ],
  "dsmvifc:IfcMask.IfcPset_ShipLockCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ShipLockCommon.CillLevelUpperHead",
    "dsmvifc:programe.CP.IfcPset_ShipLockCommon.CillLevelLowerHead",
    "dsmvifc:programe.CP.IfcPset_ShipLockCommon.WaterDeliveryValveType",
    "dsmvifc:programe.CP.IfcPset_ShipLockCommon.WaterDeliverySystemType"
  ],
  "dsmvifc:IfcMask.IfcPset_ShiplockComplex":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ShiplockComplex.LockGrade",
    "dsmvifc:programe.CP.IfcPset_ShiplockComplex.LockLines",
    "dsmvifc:programe.CP.IfcPset_ShiplockComplex.LockChamberLevels",
    "dsmvifc:programe.CP.IfcPset_ShiplockComplex.LockMode"
  ],
  "dsmvifc:IfcMask.IfcPset_ShiplockDesignCriteria":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ShiplockDesignCriteria.MaximumUpstreamNavigableWaterLevel",
    "dsmvifc:programe.CP.IfcPset_ShiplockDesignCriteria.MinimumUpstreamNavigableWaterLevel",
    "dsmvifc:programe.CP.IfcPset_ShiplockDesignCriteria.MaximumDownstreamNavigableWaterLevel",
    "dsmvifc:programe.CP.IfcPset_ShiplockDesignCriteria.MinimumDownstreamNavigableWaterLevel",
    "dsmvifc:programe.CP.IfcPset_ShiplockDesignCriteria.UpstreamMaintenanceWaterLevel",
    "dsmvifc:programe.CP.IfcPset_ShiplockDesignCriteria.DownstreamMaintenanceWaterLevel",
    "dsmvifc:programe.CP.IfcPset_ShiplockDesignCriteria.UpstreamFloodWaterLevel",
    "dsmvifc:programe.CP.IfcPset_ShiplockDesignCriteria.DownstreamFloodWaterLevel"
  ],
  "dsmvifc:IfcMask.IfcPset_ShipyardCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ShipyardCommon.PrimaryProductionType"
  ],
  "dsmvifc:IfcMask.IfcRail":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRail.ObjectType",
    "dsmvifc:programe.CP.IfcRail.Tag",
    "dsmvifc:programe.CP.IfcRail.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcRailwayElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRailwayElement.ObjectType",
    "dsmvifc:programe.CP.IfcRailwayElement.Tag",
    "dsmvifc:programe.CP.IfcRailwayElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcTrackElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTrackElement.ObjectType",
    "dsmvifc:programe.CP.IfcTrackElement.Tag",
    "dsmvifc:programe.CP.IfcTrackElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_DS_LateralTurnoutCurvedSwitch":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.LengthOfPoint",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.SwitchRadius",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.SwitchAngle",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.ActualLead",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.StraightClosureDistance",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.CurvedClosureDistance",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.LeadCurveRadius",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.FrogAngle",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.ToeLength",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.HeelLength",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.LastLongTieDistance",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.StraightTrackSpeed",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.DeviatedTrackSpeed",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutCurvedSwitch.DeviatedTrackMinRadius"
  ],
  "dsmvifc:IfcMask.IfcPset_DS_LateralTurnoutStraightSwitch":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.LengthOfPoint",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.SwitchAngle",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.ActualLead",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.StraightClosureDistance",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.CurvedClosureDistance",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.LeadCurveRadius",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.FrogAngle",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.ToeLength",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.HeelLength",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.LastLongTieDistance",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.StraightTrackSpeed",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.DeviatedTrackSpeed",
    "dsmvifc:programe.CP.IfcPset_DS_LateralTurnoutStraightSwitch.DeviatedTrackMinRadius"
  ],
  "dsmvifc:IfcMask.IfcPset_MarkerGeneral":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MarkerGeneral.ApproachSpeed",
    "dsmvifc:programe.CP.IfcPset_MarkerGeneral.MarkerType",
    "dsmvifc:programe.CP.IfcPset_MarkerGeneral.NominalHeight",
    "dsmvifc:programe.CP.IfcPset_MarkerGeneral.Symbol",
    "dsmvifc:programe.CP.IfcPset_MarkerGeneral.NominalWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_Sleeper":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Sleeper.IsHollow"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_RailwayOtherElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayOtherElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_RailwayTrackPanelBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackPanelBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackPanelBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackPanelBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackPanelBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackPanelBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackPanelBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackPanelBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackPanelBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackPanelBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_RailwayTrackRailBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackRailBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_RailwayTrackSleeperBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.Count",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackSleeperBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_RailwayTrackTurnoutBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_RailwayTrackTurnoutBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcRailway":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRailway.ObjectType",
    "dsmvifc:programe.CP.IfcRailway.LongName",
    "dsmvifc:programe.CP.IfcRailway.CompositionType"
  ],
  "dsmvifc:IfcMask.IfcRailwayPart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRailwayPart.ObjectType",
    "dsmvifc:programe.CP.IfcRailwayPart.LongName",
    "dsmvifc:programe.CP.IfcRailwayPart.CompositionType",
    "dsmvifc:programe.CP.IfcRailwayPart.PredefinedType",
    "dsmvifc:programe.CP.IfcRailwayPart.UsageType"
  ],
  "dsmvifc:IfcMask.IfcPset_DS_RailwayCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.TrackRailHeadWidth",
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.TrackSleeperLength",
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.TrackGauge",
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.TrackWidth",
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.DesignSpeed",
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.MaximumSpeed",
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.MinimumSpeed",
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.MaximumCantValueOnTangent",
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.MaximumAllowableCantDeficiency",
    "dsmvifc:programe.CP.IfcPset_DS_RailwayCommon.MaximumAllowableCantExcess"
  ],
  "dsmvifc:IfcMask.IfcPset_RailwayLevelCrossing":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_RailwayLevelCrossing.IsAccessibleByVehicle",
    "dsmvifc:programe.CP.IfcPset_RailwayLevelCrossing.HasRailDrainage",
    "dsmvifc:programe.CP.IfcPset_RailwayLevelCrossing.IsPrivateOwner",
    "dsmvifc:programe.CP.IfcPset_RailwayLevelCrossing.PermissiblePavementLoad",
    "dsmvifc:programe.CP.IfcPset_RailwayLevelCrossing.IsSecuredBySignalingSystem",
    "dsmvifc:programe.CP.IfcPset_RailwayLevelCrossing.IsExceptionalTransportRoute"
  ],
  "dsmvifc:IfcMask.IfcPset_RailwayTrackStructurePart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_RailwayTrackStructurePart.HasBallastTrack",
    "dsmvifc:programe.CP.IfcPset_RailwayTrackStructurePart.HasCWR",
    "dsmvifc:programe.CP.IfcPset_RailwayTrackStructurePart.IsSunExposed",
    "dsmvifc:programe.CP.IfcPset_RailwayTrackStructurePart.TrackSupportingStructure"
  ],
  "dsmvifc:IfcMask.IfcKerb":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcKerb.ObjectType",
    "dsmvifc:programe.CP.IfcKerb.Tag",
    "dsmvifc:programe.CP.IfcKerb.Mountable"
  ],
  "dsmvifc:IfcMask.IfcRoadElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRoadElement.ObjectType",
    "dsmvifc:programe.CP.IfcRoadElement.Tag",
    "dsmvifc:programe.CP.IfcRoadElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_KerbCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_KerbCommon.CombinedKerbGutter",
    "dsmvifc:programe.CP.IfcPset_KerbCommon.Upstand"
  ],
  "dsmvifc:IfcMask.IfcPset_KerbStone":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_KerbStone.Height",
    "dsmvifc:programe.CP.IfcPset_KerbStone.Length",
    "dsmvifc:programe.CP.IfcPset_KerbStone.StoneFinishes",
    "dsmvifc:programe.CP.IfcPset_KerbStone.TypeDesignation",
    "dsmvifc:programe.CP.IfcPset_KerbStone.Width"
  ],
  "dsmvifc:IfcMask.IfcPset_OnSiteCastKerb":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_OnSiteCastKerb.Height",
    "dsmvifc:programe.CP.IfcPset_OnSiteCastKerb.Width"
  ],
  "dsmvifc:IfcMask.IfcPset_PavementCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PavementCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_PavementCommon.Status",
    "dsmvifc:programe.CP.IfcPset_PavementCommon.NominalThickness",
    "dsmvifc:programe.CP.IfcPset_PavementCommon.NominalThicknessEnd",
    "dsmvifc:programe.CP.IfcPset_PavementCommon.StructuralSlope",
    "dsmvifc:programe.CP.IfcPset_PavementCommon.StructuralSlopeType",
    "dsmvifc:programe.CP.IfcPset_PavementCommon.NominalLength",
    "dsmvifc:programe.CP.IfcPset_PavementCommon.NominalWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_PavementMillingCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PavementMillingCommon.Depth",
    "dsmvifc:programe.CP.IfcPset_PavementMillingCommon.Width"
  ],
  "dsmvifc:IfcMask.IfcPset_PavementSurfaceCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PavementSurfaceCommon.PavementRoughness",
    "dsmvifc:programe.CP.IfcPset_PavementSurfaceCommon.PavementTexture"
  ],
  "dsmvifc:IfcMask.IfcPset_PrecastKerbStone":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PrecastKerbStone.Height",
    "dsmvifc:programe.CP.IfcPset_PrecastKerbStone.Length",
    "dsmvifc:programe.CP.IfcPset_PrecastKerbStone.TypeDesignation",
    "dsmvifc:programe.CP.IfcPset_PrecastKerbStone.Width"
  ],
  "dsmvifc:IfcMask.IfcPset_RoadGuardElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_RoadGuardElement.IsMoveable",
    "dsmvifc:programe.CP.IfcPset_RoadGuardElement.IsTerminal",
    "dsmvifc:programe.CP.IfcPset_RoadGuardElement.IsTransition",
    "dsmvifc:programe.CP.IfcPset_RoadGuardElement.TerminalType"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_RoadOtherElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_RoadOtherElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_KerbBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_KerbBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_KerbBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_KerbBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_KerbBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_KerbBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_KerbBaseQuantities.Volume",
    "dsmvifc:programe.CP.IfcQto_KerbBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_PavementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_PavementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_PavementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_PavementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_PavementBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_PavementBaseQuantities.GrossArea",
    "dsmvifc:programe.CP.IfcQto_PavementBaseQuantities.NetArea",
    "dsmvifc:programe.CP.IfcQto_PavementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_PavementBaseQuantities.NetVolume"
  ],
  "dsmvifc:IfcMask.IfcRoad":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRoad.ObjectType",
    "dsmvifc:programe.CP.IfcRoad.LongName",
    "dsmvifc:programe.CP.IfcRoad.CompositionType"
  ],
  "dsmvifc:IfcMask.IfcRoadPart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRoadPart.ObjectType",
    "dsmvifc:programe.CP.IfcRoadPart.LongName",
    "dsmvifc:programe.CP.IfcRoadPart.CompositionType",
    "dsmvifc:programe.CP.IfcRoadPart.PredefinedType",
    "dsmvifc:programe.CP.IfcRoadPart.UsageType"
  ],
  "dsmvifc:IfcMask.IfcPset_RoadDesignCriteriaCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_RoadDesignCriteriaCommon.Crossfall",
    "dsmvifc:programe.CP.IfcPset_RoadDesignCriteriaCommon.DesignSpeed",
    "dsmvifc:programe.CP.IfcPset_RoadDesignCriteriaCommon.DesignTrafficVolume",
    "dsmvifc:programe.CP.IfcPset_RoadDesignCriteriaCommon.DesignVehicleClass",
    "dsmvifc:programe.CP.IfcPset_RoadDesignCriteriaCommon.LaneWidth",
    "dsmvifc:programe.CP.IfcPset_RoadDesignCriteriaCommon.NumberOfThroughLanes",
    "dsmvifc:programe.CP.IfcPset_RoadDesignCriteriaCommon.RoadDesignClass"
  ],
  "dsmvifc:IfcMask.IfcCourse":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCourse.ObjectType",
    "dsmvifc:programe.CP.IfcCourse.Tag",
    "dsmvifc:programe.CP.IfcCourse.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcEarthworksCut":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcEarthworksCut.ObjectType",
    "dsmvifc:programe.CP.IfcEarthworksCut.Tag",
    "dsmvifc:programe.CP.IfcEarthworksCut.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcEarthworksFill":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcEarthworksFill.ObjectType",
    "dsmvifc:programe.CP.IfcEarthworksFill.Tag",
    "dsmvifc:programe.CP.IfcEarthworksFill.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcImprovedGround":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcImprovedGround.ObjectType",
    "dsmvifc:programe.CP.IfcImprovedGround.Tag",
    "dsmvifc:programe.CP.IfcImprovedGround.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPavement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPavement.ObjectType",
    "dsmvifc:programe.CP.IfcPavement.Tag",
    "dsmvifc:programe.CP.IfcPavement.Flexible"
  ],
  "dsmvifc:IfcMask.IfcRailwaySubgradeLayer":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRailwaySubgradeLayer.ObjectType",
    "dsmvifc:programe.CP.IfcRailwaySubgradeLayer.Tag",
    "dsmvifc:programe.CP.IfcRailwaySubgradeLayer.TopWidth",
    "dsmvifc:programe.CP.IfcRailwaySubgradeLayer.BottomWidth",
    "dsmvifc:programe.CP.IfcRailwaySubgradeLayer.Thickness",
    "dsmvifc:programe.CP.IfcRailwaySubgradeLayer.Length",
    "dsmvifc:programe.CP.IfcRailwaySubgradeLayer.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcReinforcedSoil":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcReinforcedSoil.ObjectType",
    "dsmvifc:programe.CP.IfcReinforcedSoil.Tag",
    "dsmvifc:programe.CP.IfcReinforcedSoil.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcRoadSubgradeLayer":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcRoadSubgradeLayer.ObjectType",
    "dsmvifc:programe.CP.IfcRoadSubgradeLayer.Tag",
    "dsmvifc:programe.CP.IfcRoadSubgradeLayer.TopWidth",
    "dsmvifc:programe.CP.IfcRoadSubgradeLayer.BottomWidth",
    "dsmvifc:programe.CP.IfcRoadSubgradeLayer.Thickness",
    "dsmvifc:programe.CP.IfcRoadSubgradeLayer.Length",
    "dsmvifc:programe.CP.IfcRoadSubgradeLayer.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSubgradeElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSubgradeElement.ObjectType",
    "dsmvifc:programe.CP.IfcSubgradeElement.Tag",
    "dsmvifc:programe.CP.IfcSubgradeElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSubgradeRetainingElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSubgradeRetainingElement.ObjectType",
    "dsmvifc:programe.CP.IfcSubgradeRetainingElement.Tag",
    "dsmvifc:programe.CP.IfcSubgradeRetainingElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcUndergroundExcavation":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcUndergroundExcavation.ObjectType",
    "dsmvifc:programe.CP.IfcUndergroundExcavation.Tag",
    "dsmvifc:programe.CP.IfcUndergroundExcavation.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_BoundedCourseCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BoundedCourseCommon.SpreadingRate"
  ],
  "dsmvifc:IfcMask.IfcPset_CourseApplicationConditions":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CourseApplicationConditions.ApplicationTemperature",
    "dsmvifc:programe.CP.IfcPset_CourseApplicationConditions.WeatherConditions"
  ],
  "dsmvifc:IfcMask.IfcPset_CourseCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CourseCommon.Length",
    "dsmvifc:programe.CP.IfcPset_CourseCommon.Thickness",
    "dsmvifc:programe.CP.IfcPset_CourseCommon.Width"
  ],
  "dsmvifc:IfcMask.IfcPset_TrenchExcavationCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TrenchExcavationCommon.NominalDepth",
    "dsmvifc:programe.CP.IfcPset_TrenchExcavationCommon.NominalWidth"
  ],
  "dsmvifc:IfcMask.IfcQto_CourseBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CourseBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CourseBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_CourseBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_CourseBaseQuantities.Thickness",
    "dsmvifc:programe.CP.IfcQto_CourseBaseQuantities.Volume",
    "dsmvifc:programe.CP.IfcQto_CourseBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_CourseBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_SubgradeExcavationWorksBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeExcavationWorksBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeExcavationWorksBaseQuantities.BankVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeExcavationWorksBaseQuantities.LooseVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeExcavationWorksBaseQuantities.CompactedVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeExcavationWorksBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_SubgradeFillingWorksBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeFillingWorksBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeFillingWorksBaseQuantities.BankVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeFillingWorksBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_SubgradeLayerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.Thickness",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.BackboneArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.ConstructionArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.FootprintArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.LooseVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.CompactedVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeLayerBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_SubgradeOtherElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_SubgradeRetainingElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_SubgradeStockpileBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeStockpileBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_EarthworksCutBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_EarthworksCutBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_EarthworksCutBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_EarthworksCutBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_EarthworksCutBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_EarthworksCutBaseQuantities.UndisturbedVolume",
    "dsmvifc:programe.CP.IfcQto_EarthworksCutBaseQuantities.LooseVolume",
    "dsmvifc:programe.CP.IfcQto_EarthworksCutBaseQuantities.Weight"
  ],
  "dsmvifc:IfcMask.IfcQto_EarthworksFillBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_EarthworksFillBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_EarthworksFillBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_EarthworksFillBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_EarthworksFillBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_EarthworksFillBaseQuantities.CompactedVolume",
    "dsmvifc:programe.CP.IfcQto_EarthworksFillBaseQuantities.LooseVolume"
  ],
  "dsmvifc:IfcMask.IfcQto_ReinforcedSoilBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ReinforcedSoilBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ReinforcedSoilBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_ReinforcedSoilBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_ReinforcedSoilBaseQuantities.Depth",
    "dsmvifc:programe.CP.IfcQto_ReinforcedSoilBaseQuantities.Area",
    "dsmvifc:programe.CP.IfcQto_ReinforcedSoilBaseQuantities.Volume"
  ],
  "dsmvifc:IfcMask.IfcSubgrade":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSubgrade.ObjectType",
    "dsmvifc:programe.CP.IfcSubgrade.LongName",
    "dsmvifc:programe.CP.IfcSubgrade.CompositionType"
  ],
  "dsmvifc:IfcMask.IfcSubgradePart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSubgradePart.ObjectType",
    "dsmvifc:programe.CP.IfcSubgradePart.LongName",
    "dsmvifc:programe.CP.IfcSubgradePart.CompositionType",
    "dsmvifc:programe.CP.IfcSubgradePart.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSubgradeRetainingStructure":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSubgradeRetainingStructure.ObjectType",
    "dsmvifc:programe.CP.IfcSubgradeRetainingStructure.LongName",
    "dsmvifc:programe.CP.IfcSubgradeRetainingStructure.CompositionType",
    "dsmvifc:programe.CP.IfcSubgradeRetainingStructure.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_SubgradeOtherSpatialStructureElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherSpatialStructureElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherSpatialStructureElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherSpatialStructureElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherSpatialStructureElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeOtherSpatialStructureElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_SubgradeRetainingStructureBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingStructureBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingStructureBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingStructureBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingStructureBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_SubgradeRetainingStructureBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcPset_Tekla_Assemblies":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Tekla_Assemblies.ASSEMBLY_POS",
    "dsmvifc:programe.CP.IfcPset_Tekla_Assemblies.ASSEMBLY_POSITION_CODE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Assemblies.ASSEMBLY_TOP_LEVEL",
    "dsmvifc:programe.CP.IfcPset_Tekla_Assemblies.ASSEMBLY_BOTTOM_LEVEL",
    "dsmvifc:programe.CP.IfcPset_Tekla_Assemblies.WEIGHT",
    "dsmvifc:programe.CP.IfcPset_Tekla_Assemblies.CAST_UNIT_REBAR_WEIGHT",
    "dsmvifc:programe.CP.IfcPset_Tekla_Assemblies.ACN",
    "dsmvifc:programe.CP.IfcPset_Tekla_Assemblies.CAST_UNIT_TYPE"
  ],
  "dsmvifc:IfcMask.IfcPset_Tekla_Bolt":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Location",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Bolt_hole_diameter",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Slotted_hole_x",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Slotted_hole_y",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Bolt_standard",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Bolt_Name",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Bolt_count",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Bolt_size",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Bolt_length",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Washer_type",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Washer_name",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Washer_count",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Washer_diameter",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Nut_type",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Nut_name",
    "dsmvifc:programe.CP.IfcPset_Tekla_Bolt.Nut_count"
  ],
  "dsmvifc:IfcMask.IfcPset_Tekla_Common":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.CLASS_ATTR",
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.PHASE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.PRELIM_MARK",
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.initial_GUID",
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.TOP_LEVEL",
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.BOTTOM_LEVEL",
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.PART_MARK",
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.ASSEMBLY_MARK",
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.FINISH",
    "dsmvifc:programe.CP.IfcPset_Tekla_Common.GRADE"
  ],
  "dsmvifc:IfcMask.IfcPset_Tekla_Coupler":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Tekla_Coupler.AnchorCouplerStart",
    "dsmvifc:programe.CP.IfcPset_Tekla_Coupler.AnchorCouplerEnd",
    "dsmvifc:programe.CP.IfcPset_Tekla_Coupler.ThreadTypeStart",
    "dsmvifc:programe.CP.IfcPset_Tekla_Coupler.ThreadTypeEnd",
    "dsmvifc:programe.CP.IfcPset_Tekla_Coupler.ThreadLengthStart",
    "dsmvifc:programe.CP.IfcPset_Tekla_Coupler.ThreadLengthEnd",
    "dsmvifc:programe.CP.IfcPset_Tekla_Coupler.LapLengthStart",
    "dsmvifc:programe.CP.IfcPset_Tekla_Coupler.LapLengthEnd"
  ],
  "dsmvifc:IfcMask.IfcPset_Tekla_Pours":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.CONCRETE_MIXTURE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.COMMENT",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.POUR_NUMBER",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.POUR_TYPE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.USER_FIELD_1",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.USER_FIELD_2",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.USER_FIELD_3",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.USER_FIELD_4",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.FORMWORK_CHECKED_BY",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.FORMWORK_COMMENT",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.FORMWORK_STATUS",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.FORMWORK_CHECK_DATE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.PLANNED_START_FORM",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.PLANNED_END_FORM",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.ACTUAL_START_FORM",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.ACTUAL_END_FORM",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.REBAR_CHECKED_BY",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.REBAR_COMMENT",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.REBAR_RELEASE_NO",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.REBAR_SHIPMENT_NO",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.REBAR_STATUS",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.REBAR_CHECK_DATE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.PLANNED_START_REBAR",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.PLANNED_END_REBAR",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.ACTUAL_START_REBAR",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.ACTUAL_END_REBAR",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.POUR_CHECKED_BY",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.POUR_COMMENT",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.POUR_STATUS",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.POUR_CHECK_DATE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.PLANNED_START_POUR",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.PLANNED_END_POUR",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.ACTUAL_START_POUR",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.ACTUAL_END_POUR",
    "dsmvifc:programe.CP.IfcPset_Tekla_Pours.AREA"
  ],
  "dsmvifc:IfcMask.IfcPset_Tekla_Rebar":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.SHAPE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.REBAR_POS",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.SIZE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.NAME",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.MATERIAL",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.NUMBER",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.PHASE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.CAST_UNIT_POS",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.WEIGHT",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.WEIGHT_TOTAL",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.LENGTH",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.CC_EXACT",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_A",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_B",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_C",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_D",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_E",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_F",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_G",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_H1",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_H2",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_I",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_J",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_K1",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_K2",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_O",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_R",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_X",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_Y",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.ANG_S",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.ANG_T",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.ANG_U",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.ANG_V",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.DIM_TD",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.LAYER",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.GROUP_TYPE",
    "dsmvifc:programe.CP.IfcPset_Tekla_Rebar.REBAR_TYPE"
  ],
  "dsmvifc:IfcMask.IfcPset_Tekla_SurfaceTreatment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Tekla_SurfaceTreatment.TYPE",
    "dsmvifc:programe.CP.IfcPset_Tekla_SurfaceTreatment.NAME",
    "dsmvifc:programe.CP.IfcPset_Tekla_SurfaceTreatment.CONTENTTYPE",
    "dsmvifc:programe.CP.IfcPset_Tekla_SurfaceTreatment.AREA",
    "dsmvifc:programe.CP.IfcPset_Tekla_SurfaceTreatment.WEIGHT"
  ],
  "dsmvifc:IfcMask.IfcQto_Tekla_Quantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.LENGTH",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.WIDTH",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.HEIGHT",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.AREA_NET",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.AREA_PER_TONS",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.AREA_PLAN",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.VOLUME",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.WEIGHT",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.GROSS_WEIGHT",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.GROSS_VOLUME",
    "dsmvifc:programe.CP.IfcQto_Tekla_Quantities.GROSS_AREA"
  ],
  "dsmvifc:IfcMask.IfcTunnelElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTunnelElement.ObjectType",
    "dsmvifc:programe.CP.IfcTunnelElement.Tag",
    "dsmvifc:programe.CP.IfcTunnelElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_TunnelOtherElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelOtherElementBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DS_TunnelRingSegmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.Height",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.Width",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.OuterSectionArea",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.NetVolume",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DS_TunnelRingSegmentBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcTunnel":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTunnel.ObjectType",
    "dsmvifc:programe.CP.IfcTunnel.LongName",
    "dsmvifc:programe.CP.IfcTunnel.CompositionType",
    "dsmvifc:programe.CP.IfcTunnel.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcTunnelPart":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTunnelPart.ObjectType",
    "dsmvifc:programe.CP.IfcTunnelPart.LongName",
    "dsmvifc:programe.CP.IfcTunnelPart.CompositionType",
    "dsmvifc:programe.CP.IfcTunnelPart.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcTunnelSpace":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTunnelSpace.ObjectType",
    "dsmvifc:programe.CP.IfcTunnelSpace.LongName",
    "dsmvifc:programe.CP.IfcTunnelSpace.CompositionType",
    "dsmvifc:programe.CP.IfcTunnelSpace.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcQto_Pipeline_Bend_DS":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_Pipeline_Bend_DS.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Bend_DS.Count",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Bend_DS.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_Pipeline_Connector_DS":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_Pipeline_Connector_DS.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Connector_DS.Count",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Connector_DS.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_Pipeline_DS":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_Pipeline_DS.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_Pipeline_DS.GrossLength",
    "dsmvifc:programe.CP.IfcQto_Pipeline_DS.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_Pipeline_DS.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_Pipeline_DS.CountPipePerSize"
  ],
  "dsmvifc:IfcMask.IfcQto_Pipeline_Support_DS":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_Pipeline_Support_DS.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Support_DS.Count",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Support_DS.NetVolume",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Support_DS.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Support_DS.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_Pipeline_Thrustblock_DS":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_Pipeline_Thrustblock_DS.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Thrustblock_DS.Count",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Thrustblock_DS.NetVolume",
    "dsmvifc:programe.CP.IfcQto_Pipeline_Thrustblock_DS.GrossVolume"
  ],
  "dsmvifc:IfcMask.IfcActuator":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcActuator.ObjectType",
    "dsmvifc:programe.CP.IfcActuator.Tag",
    "dsmvifc:programe.CP.IfcActuator.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcAirTerminal":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcAirTerminal.ObjectType",
    "dsmvifc:programe.CP.IfcAirTerminal.Tag",
    "dsmvifc:programe.CP.IfcAirTerminal.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcAirTerminalBox":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcAirTerminalBox.ObjectType",
    "dsmvifc:programe.CP.IfcAirTerminalBox.Tag",
    "dsmvifc:programe.CP.IfcAirTerminalBox.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcAirToAirHeatRecovery":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcAirToAirHeatRecovery.ObjectType",
    "dsmvifc:programe.CP.IfcAirToAirHeatRecovery.Tag",
    "dsmvifc:programe.CP.IfcAirToAirHeatRecovery.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcAlarm":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcAlarm.ObjectType",
    "dsmvifc:programe.CP.IfcAlarm.Tag",
    "dsmvifc:programe.CP.IfcAlarm.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcAudioVisualAppliance":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcAudioVisualAppliance.ObjectType",
    "dsmvifc:programe.CP.IfcAudioVisualAppliance.Tag",
    "dsmvifc:programe.CP.IfcAudioVisualAppliance.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcBoiler":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBoiler.ObjectType",
    "dsmvifc:programe.CP.IfcBoiler.Tag",
    "dsmvifc:programe.CP.IfcBoiler.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcBurner":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBurner.ObjectType",
    "dsmvifc:programe.CP.IfcBurner.Tag",
    "dsmvifc:programe.CP.IfcBurner.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCableCarrierFitting":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCableCarrierFitting.ObjectType",
    "dsmvifc:programe.CP.IfcCableCarrierFitting.Tag",
    "dsmvifc:programe.CP.IfcCableCarrierFitting.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCableCarrierSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCableCarrierSegment.ObjectType",
    "dsmvifc:programe.CP.IfcCableCarrierSegment.Tag",
    "dsmvifc:programe.CP.IfcCableCarrierSegment.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCableFitting":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCableFitting.ObjectType",
    "dsmvifc:programe.CP.IfcCableFitting.Tag",
    "dsmvifc:programe.CP.IfcCableFitting.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCableSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCableSegment.ObjectType",
    "dsmvifc:programe.CP.IfcCableSegment.Tag",
    "dsmvifc:programe.CP.IfcCableSegment.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcChiller":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcChiller.ObjectType",
    "dsmvifc:programe.CP.IfcChiller.Tag",
    "dsmvifc:programe.CP.IfcChiller.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCoil":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCoil.ObjectType",
    "dsmvifc:programe.CP.IfcCoil.Tag",
    "dsmvifc:programe.CP.IfcCoil.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCommunicationsAppliance":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCommunicationsAppliance.ObjectType",
    "dsmvifc:programe.CP.IfcCommunicationsAppliance.Tag",
    "dsmvifc:programe.CP.IfcCommunicationsAppliance.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCompressor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCompressor.ObjectType",
    "dsmvifc:programe.CP.IfcCompressor.Tag",
    "dsmvifc:programe.CP.IfcCompressor.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCondenser":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCondenser.ObjectType",
    "dsmvifc:programe.CP.IfcCondenser.Tag",
    "dsmvifc:programe.CP.IfcCondenser.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcController":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcController.ObjectType",
    "dsmvifc:programe.CP.IfcController.Tag",
    "dsmvifc:programe.CP.IfcController.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCooledBeam":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCooledBeam.ObjectType",
    "dsmvifc:programe.CP.IfcCooledBeam.Tag",
    "dsmvifc:programe.CP.IfcCooledBeam.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcCoolingTower":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcCoolingTower.ObjectType",
    "dsmvifc:programe.CP.IfcCoolingTower.Tag",
    "dsmvifc:programe.CP.IfcCoolingTower.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDamper":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDamper.ObjectType",
    "dsmvifc:programe.CP.IfcDamper.Tag",
    "dsmvifc:programe.CP.IfcDamper.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDistributionBoard":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDistributionBoard.ObjectType",
    "dsmvifc:programe.CP.IfcDistributionBoard.Tag",
    "dsmvifc:programe.CP.IfcDistributionBoard.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDistributionChamberElement":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDistributionChamberElement.ObjectType",
    "dsmvifc:programe.CP.IfcDistributionChamberElement.Tag",
    "dsmvifc:programe.CP.IfcDistributionChamberElement.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDistributionCircuit":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDistributionCircuit.ObjectType",
    "dsmvifc:programe.CP.IfcDistributionCircuit.LongName",
    "dsmvifc:programe.CP.IfcDistributionCircuit.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDistributionSystem":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDistributionSystem.ObjectType",
    "dsmvifc:programe.CP.IfcDistributionSystem.LongName",
    "dsmvifc:programe.CP.IfcDistributionSystem.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDuctFitting":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDuctFitting.ObjectType",
    "dsmvifc:programe.CP.IfcDuctFitting.Tag",
    "dsmvifc:programe.CP.IfcDuctFitting.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDuctSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDuctSegment.ObjectType",
    "dsmvifc:programe.CP.IfcDuctSegment.Tag",
    "dsmvifc:programe.CP.IfcDuctSegment.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcDuctSilencer":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcDuctSilencer.ObjectType",
    "dsmvifc:programe.CP.IfcDuctSilencer.Tag",
    "dsmvifc:programe.CP.IfcDuctSilencer.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcElectricAppliance":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcElectricAppliance.ObjectType",
    "dsmvifc:programe.CP.IfcElectricAppliance.Tag",
    "dsmvifc:programe.CP.IfcElectricAppliance.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcElectricDistributionBoard":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcElectricDistributionBoard.ObjectType",
    "dsmvifc:programe.CP.IfcElectricDistributionBoard.Tag",
    "dsmvifc:programe.CP.IfcElectricDistributionBoard.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcElectricFlowStorageDevice":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcElectricFlowStorageDevice.ObjectType",
    "dsmvifc:programe.CP.IfcElectricFlowStorageDevice.Tag",
    "dsmvifc:programe.CP.IfcElectricFlowStorageDevice.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcElectricFlowTreatmentDevice":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcElectricFlowTreatmentDevice.ObjectType",
    "dsmvifc:programe.CP.IfcElectricFlowTreatmentDevice.Tag",
    "dsmvifc:programe.CP.IfcElectricFlowTreatmentDevice.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcElectricGenerator":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcElectricGenerator.ObjectType",
    "dsmvifc:programe.CP.IfcElectricGenerator.Tag",
    "dsmvifc:programe.CP.IfcElectricGenerator.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcElectricMotor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcElectricMotor.ObjectType",
    "dsmvifc:programe.CP.IfcElectricMotor.Tag",
    "dsmvifc:programe.CP.IfcElectricMotor.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcElectricTimeControl":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcElectricTimeControl.ObjectType",
    "dsmvifc:programe.CP.IfcElectricTimeControl.Tag",
    "dsmvifc:programe.CP.IfcElectricTimeControl.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcEngine":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcEngine.ObjectType",
    "dsmvifc:programe.CP.IfcEngine.Tag",
    "dsmvifc:programe.CP.IfcEngine.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcEvaporativeCooler":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcEvaporativeCooler.ObjectType",
    "dsmvifc:programe.CP.IfcEvaporativeCooler.Tag",
    "dsmvifc:programe.CP.IfcEvaporativeCooler.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcEvaporator":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcEvaporator.ObjectType",
    "dsmvifc:programe.CP.IfcEvaporator.Tag",
    "dsmvifc:programe.CP.IfcEvaporator.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcFan":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFan.ObjectType",
    "dsmvifc:programe.CP.IfcFan.Tag",
    "dsmvifc:programe.CP.IfcFan.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcFilter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFilter.ObjectType",
    "dsmvifc:programe.CP.IfcFilter.Tag",
    "dsmvifc:programe.CP.IfcFilter.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcFireSuppressionTerminal":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFireSuppressionTerminal.ObjectType",
    "dsmvifc:programe.CP.IfcFireSuppressionTerminal.Tag",
    "dsmvifc:programe.CP.IfcFireSuppressionTerminal.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcFlowFitting":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFlowFitting.ObjectType",
    "dsmvifc:programe.CP.IfcFlowFitting.Tag"
  ],
  "dsmvifc:IfcMask.IfcFlowMeter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFlowMeter.ObjectType",
    "dsmvifc:programe.CP.IfcFlowMeter.Tag",
    "dsmvifc:programe.CP.IfcFlowMeter.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcFlowSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFlowSegment.ObjectType",
    "dsmvifc:programe.CP.IfcFlowSegment.Tag"
  ],
  "dsmvifc:IfcMask.IfcFlowTerminal":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcFlowTerminal.ObjectType",
    "dsmvifc:programe.CP.IfcFlowTerminal.Tag"
  ],
  "dsmvifc:IfcMask.IfcHeatExchanger":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcHeatExchanger.ObjectType",
    "dsmvifc:programe.CP.IfcHeatExchanger.Tag",
    "dsmvifc:programe.CP.IfcHeatExchanger.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcHumidifier":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcHumidifier.ObjectType",
    "dsmvifc:programe.CP.IfcHumidifier.Tag",
    "dsmvifc:programe.CP.IfcHumidifier.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcInterceptor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcInterceptor.ObjectType",
    "dsmvifc:programe.CP.IfcInterceptor.Tag",
    "dsmvifc:programe.CP.IfcInterceptor.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcJunctionBox":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcJunctionBox.ObjectType",
    "dsmvifc:programe.CP.IfcJunctionBox.Tag",
    "dsmvifc:programe.CP.IfcJunctionBox.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcLamp":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcLamp.ObjectType",
    "dsmvifc:programe.CP.IfcLamp.Tag",
    "dsmvifc:programe.CP.IfcLamp.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcLightFixture":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcLightFixture.ObjectType",
    "dsmvifc:programe.CP.IfcLightFixture.Tag",
    "dsmvifc:programe.CP.IfcLightFixture.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcMedicalDevice":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcMedicalDevice.ObjectType",
    "dsmvifc:programe.CP.IfcMedicalDevice.Tag",
    "dsmvifc:programe.CP.IfcMedicalDevice.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcMobileTelecommunicationsAppliance":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcMobileTelecommunicationsAppliance.ObjectType",
    "dsmvifc:programe.CP.IfcMobileTelecommunicationsAppliance.Tag",
    "dsmvifc:programe.CP.IfcMobileTelecommunicationsAppliance.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcMotorConnection":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcMotorConnection.ObjectType",
    "dsmvifc:programe.CP.IfcMotorConnection.Tag",
    "dsmvifc:programe.CP.IfcMotorConnection.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcOutlet":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcOutlet.ObjectType",
    "dsmvifc:programe.CP.IfcOutlet.Tag",
    "dsmvifc:programe.CP.IfcOutlet.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPipeFitting":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPipeFitting.ObjectType",
    "dsmvifc:programe.CP.IfcPipeFitting.Tag",
    "dsmvifc:programe.CP.IfcPipeFitting.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPipeSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPipeSegment.ObjectType",
    "dsmvifc:programe.CP.IfcPipeSegment.Tag",
    "dsmvifc:programe.CP.IfcPipeSegment.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcProtectiveDevice":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcProtectiveDevice.ObjectType",
    "dsmvifc:programe.CP.IfcProtectiveDevice.Tag",
    "dsmvifc:programe.CP.IfcProtectiveDevice.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcProtectiveDeviceTrippingUnit":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcProtectiveDeviceTrippingUnit.ObjectType",
    "dsmvifc:programe.CP.IfcProtectiveDeviceTrippingUnit.Tag",
    "dsmvifc:programe.CP.IfcProtectiveDeviceTrippingUnit.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPump":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPump.ObjectType",
    "dsmvifc:programe.CP.IfcPump.Tag",
    "dsmvifc:programe.CP.IfcPump.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSanitaryTerminal":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSanitaryTerminal.ObjectType",
    "dsmvifc:programe.CP.IfcSanitaryTerminal.Tag",
    "dsmvifc:programe.CP.IfcSanitaryTerminal.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSensor.ObjectType",
    "dsmvifc:programe.CP.IfcSensor.Tag",
    "dsmvifc:programe.CP.IfcSensor.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSolarDevice":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSolarDevice.ObjectType",
    "dsmvifc:programe.CP.IfcSolarDevice.Tag",
    "dsmvifc:programe.CP.IfcSolarDevice.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSpaceHeater":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSpaceHeater.ObjectType",
    "dsmvifc:programe.CP.IfcSpaceHeater.Tag",
    "dsmvifc:programe.CP.IfcSpaceHeater.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcStackTerminal":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcStackTerminal.ObjectType",
    "dsmvifc:programe.CP.IfcStackTerminal.Tag",
    "dsmvifc:programe.CP.IfcStackTerminal.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcSwitchingDevice":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSwitchingDevice.ObjectType",
    "dsmvifc:programe.CP.IfcSwitchingDevice.Tag",
    "dsmvifc:programe.CP.IfcSwitchingDevice.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcTank":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTank.ObjectType",
    "dsmvifc:programe.CP.IfcTank.Tag",
    "dsmvifc:programe.CP.IfcTank.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcTransformer":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTransformer.ObjectType",
    "dsmvifc:programe.CP.IfcTransformer.Tag",
    "dsmvifc:programe.CP.IfcTransformer.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcTubeBundle":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcTubeBundle.ObjectType",
    "dsmvifc:programe.CP.IfcTubeBundle.Tag",
    "dsmvifc:programe.CP.IfcTubeBundle.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcUnitaryEquipment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcUnitaryEquipment.ObjectType",
    "dsmvifc:programe.CP.IfcUnitaryEquipment.Tag",
    "dsmvifc:programe.CP.IfcUnitaryEquipment.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcValve":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcValve.ObjectType",
    "dsmvifc:programe.CP.IfcValve.Tag",
    "dsmvifc:programe.CP.IfcValve.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcVibrationIsolator":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcVibrationIsolator.ObjectType",
    "dsmvifc:programe.CP.IfcVibrationIsolator.Tag",
    "dsmvifc:programe.CP.IfcVibrationIsolator.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcWasteTerminal":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcWasteTerminal.ObjectType",
    "dsmvifc:programe.CP.IfcWasteTerminal.Tag",
    "dsmvifc:programe.CP.IfcWasteTerminal.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcPset_ActuatorTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeCommon.FailPosition",
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeCommon.ManualOverride",
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeCommon.Application"
  ],
  "dsmvifc:IfcMask.IfcPset_ActuatorTypeElectricActuator":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeElectricActuator.ActuatorInputPower",
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeElectricActuator.ElectricActuatorType"
  ],
  "dsmvifc:IfcMask.IfcPset_ActuatorTypeHydraulicActuator":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeHydraulicActuator.InputPressure",
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeHydraulicActuator.InputFlowrate"
  ],
  "dsmvifc:IfcMask.IfcPset_ActuatorTypeLinearActuation":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeLinearActuation.Force",
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeLinearActuation.Stroke"
  ],
  "dsmvifc:IfcMask.IfcPset_ActuatorTypePneumaticActuator":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ActuatorTypePneumaticActuator.InputPressure",
    "dsmvifc:programe.CP.IfcPset_ActuatorTypePneumaticActuator.InputFlowrate"
  ],
  "dsmvifc:IfcMask.IfcPset_ActuatorTypeRotationalActuation":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeRotationalActuation.Torque",
    "dsmvifc:programe.CP.IfcPset_ActuatorTypeRotationalActuation.RangeAngle"
  ],
  "dsmvifc:IfcMask.IfcPset_AirTerminalBoxTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.AirflowRateRange",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.AirPressureRange",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.NominalAirFlowRate",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.ArrangementType",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.ReheatType",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.HasSoundAttenuator",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.HasReturnAir",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.HasFan",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.NominalInletAirPressure",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.NominalDamperDiameter",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.HousingThickness",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.OperationTemperatureRange",
    "dsmvifc:programe.CP.IfcPset_AirTerminalBoxTypeCommon.ReturnAirFractionRange"
  ],
  "dsmvifc:IfcMask.IfcPset_AirTerminalOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AirTerminalOccurrence.AirflowType",
    "dsmvifc:programe.CP.IfcPset_AirTerminalOccurrence.AirFlowRate",
    "dsmvifc:programe.CP.IfcPset_AirTerminalOccurrence.Location"
  ],
  "dsmvifc:IfcMask.IfcPset_AirTerminalTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.Shape",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.FaceType",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.SlotWidth",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.SlotLength",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.NumberOfSlots",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.FlowPattern",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.AirFlowrateRange",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.TemperatureRange",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.DischargeDirection",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.ThrowLength",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.AirDiffusionPerformanceIndex",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.FinishType",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.FinishColor",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.MountingType",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.CoreType",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.CoreSetHorizontal",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.CoreSetVertical",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.HasIntegralControl",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.FlowControlType",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.HasSoundAttenuator",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.HasThermalInsulation",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.NeckArea",
    "dsmvifc:programe.CP.IfcPset_AirTerminalTypeCommon.EffectiveArea"
  ],
  "dsmvifc:IfcMask.IfcPset_AirToAirHeatRecoveryTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AirToAirHeatRecoveryTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_AirToAirHeatRecoveryTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_AirToAirHeatRecoveryTypeCommon.HeatTransferTypeEnum",
    "dsmvifc:programe.CP.IfcPset_AirToAirHeatRecoveryTypeCommon.HasDefrost",
    "dsmvifc:programe.CP.IfcPset_AirToAirHeatRecoveryTypeCommon.OperationalTemperatureRange",
    "dsmvifc:programe.CP.IfcPset_AirToAirHeatRecoveryTypeCommon.PrimaryAirflowRateRange",
    "dsmvifc:programe.CP.IfcPset_AirToAirHeatRecoveryTypeCommon.SecondaryAirflowRateRange"
  ],
  "dsmvifc:IfcMask.IfcPset_AlarmTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AlarmTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_AlarmTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_AlarmTypeCommon.Condition"
  ],
  "dsmvifc:IfcMask.IfcPset_AudioVisualApplianceTypeAmplifier":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeAmplifier.AmplifierType",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeAmplifier.AudioAmplification",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeAmplifier.AudioMode"
  ],
  "dsmvifc:IfcMask.IfcPset_AudioVisualApplianceTypeCamera":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.CameraType",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.IsOutdoors",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.VideoResolutionWidth",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.VideoResolutionHeight",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.VideoResolutionMode",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.VideoCaptureInterval",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.PanTiltZoomPreset",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.PanHorizontal",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.PanVertical",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.TiltHorizontal",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.TiltVertical",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCamera.Zoom"
  ],
  "dsmvifc:IfcMask.IfcPset_AudioVisualApplianceTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCommon.MediaSource",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeCommon.AudioVolume"
  ],
  "dsmvifc:IfcMask.IfcPset_AudioVisualApplianceTypeDisplay":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.DisplayType",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.NominalSize",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.DisplayWidth",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.DisplayHeight",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.Brightness",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.ContrastRatio",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.RefreshRate",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.TouchScreen",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.VideoResolutionWidth",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.VideoResolutionHeight",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.VideoResolutionMode",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.VideoScaleMode",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.VideoCaptionMode",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeDisplay.AudioMode"
  ],
  "dsmvifc:IfcMask.IfcPset_AudioVisualApplianceTypePlayer":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypePlayer.PlayerType",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypePlayer.PlayerMediaEject",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypePlayer.PlayerMediaFormat"
  ],
  "dsmvifc:IfcMask.IfcPset_AudioVisualApplianceTypeProjector":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeProjector.ProjectorType",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeProjector.VideoResolutionWidth",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeProjector.VideoResolutionHeight",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeProjector.VideoResolutionMode",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeProjector.VideoScaleMode",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeProjector.VideoCaptionMode"
  ],
  "dsmvifc:IfcMask.IfcPset_AudioVisualApplianceTypeReceiver":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeReceiver.ReceiverType",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeReceiver.AudioAmplification",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeReceiver.AudioMode"
  ],
  "dsmvifc:IfcMask.IfcPset_AudioVisualApplianceTypeSpeaker":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeSpeaker.SpeakerType",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeSpeaker.SpeakerMounting",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeSpeaker.SpeakerDriverSize",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeSpeaker.FrequencyResponse",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeSpeaker.Impedence"
  ],
  "dsmvifc:IfcMask.IfcPset_AudioVisualApplianceTypeTuner":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeTuner.TunerType",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeTuner.TunerMode",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeTuner.TunerChannel",
    "dsmvifc:programe.CP.IfcPset_AudioVisualApplianceTypeTuner.TunerFrequency"
  ],
  "dsmvifc:IfcMask.IfcPset_BoilerTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.PressureRating",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.OperatingMode",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.HeatTransferSurfaceArea",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.NominalPartLoadRatio",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.WaterInletTemperatureRange",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.WaterStorageCapacity",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.IsWaterStorageHeater",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.PartialLoadEfficiencyCurves",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.OutletTemperatureRange",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.NominalEnergyConsumption",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeCommon.EnergySource"
  ],
  "dsmvifc:IfcMask.IfcPset_BoilerTypeSteam":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BoilerTypeSteam.MaximumOutletPressure",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeSteam.NominalEfficiency",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeSteam.HeatOutput"
  ],
  "dsmvifc:IfcMask.IfcPset_BoilerTypeWater":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BoilerTypeWater.NominalEfficiency",
    "dsmvifc:programe.CP.IfcPset_BoilerTypeWater.HeatOutput"
  ],
  "dsmvifc:IfcMask.IfcPset_BurnerTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BurnerTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_BurnerTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_BurnerTypeCommon.EnergySource"
  ],
  "dsmvifc:IfcMask.IfcPset_CableCarrierFittingTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableCarrierFittingTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CableCarrierFittingTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_CableCarrierSegmentTypeCableLadderSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeCableLadderSegment.NominalWidth",
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeCableLadderSegment.NominalHeight",
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeCableLadderSegment.LadderConfiguration"
  ],
  "dsmvifc:IfcMask.IfcPset_CableCarrierSegmentTypeCableTraySegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeCableTraySegment.HasCover"
  ],
  "dsmvifc:IfcMask.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment.NominalWidth",
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment.NominalHeight",
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment.NumberOfCompartments"
  ],
  "dsmvifc:IfcMask.IfcPset_CableCarrierSegmentTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_CableCarrierSegmentTypeConduitSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeConduitSegment.NominalWidth",
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeConduitSegment.NominalHeight",
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeConduitSegment.ConduitShapeType",
    "dsmvifc:programe.CP.IfcPset_CableCarrierSegmentTypeConduitSegment.IsRigid"
  ],
  "dsmvifc:IfcMask.IfcPset_CableConduitGeneral":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableConduitGeneral.IsUnderground"
  ],
  "dsmvifc:IfcMask.IfcPset_CableFittingTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableFittingTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CableFittingTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_CableSegmentOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.DesignAmbientTemperature",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.UserCorrectionFactor",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.NumberOfParallelCircuits",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.InstallationMethod",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.InstallationMethodFlagEnum",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.DistanceBetweenParallelCircuits",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.SoilConductivity",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.CarrierStackNumber",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.MountingMethod",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.IsHorizontalCable",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.IsMountedFlatCable",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.CurrentCarryingCapasity",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.MaximumCableLength",
    "dsmvifc:programe.CP.IfcPset_CableSegmentOccurrence.PowerLoss"
  ],
  "dsmvifc:IfcMask.IfcPset_CableSegmentTypeBusBarSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeBusBarSegment.IsHorizontalBusbar"
  ],
  "dsmvifc:IfcMask.IfcPset_CableSegmentTypeCableSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.Standard",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.NumberOfCores",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.OverallDiameter",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.RatedVoltage",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.RatedTemperature",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.ScreenDiameter",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.HasProtectiveEarth",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.MaximumOperatingTemperature",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.MaximumShortCircuitTemperature",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.SpecialConstruction",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.Weight",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.SelfExtinguishing60332_1",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.SelfExtinguishing60332_3",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.HalogenProof",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCableSegment.FunctionReliable"
  ],
  "dsmvifc:IfcMask.IfcPset_CableSegmentTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_CableSegmentTypeConductorSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeConductorSegment.CrossSectionalArea",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeConductorSegment.Function",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeConductorSegment.Material",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeConductorSegment.Construction",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeConductorSegment.Shape"
  ],
  "dsmvifc:IfcMask.IfcPset_CableSegmentTypeCoreSegment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.OverallDiameter",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.RatedVoltage",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.RatedTemperature",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.ScreenDiameter",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.CoreIdentifier",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.SheathColors",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.Weight",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.SelfExtinguishing60332_1",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.SelfExtinguishing60332_3",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.HalogenProof",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.FunctionReliable",
    "dsmvifc:programe.CP.IfcPset_CableSegmentTypeCoreSegment.Standard"
  ],
  "dsmvifc:IfcMask.IfcPset_ChillerTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.NominalCapacity",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.NominalEfficiency",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.NominalCondensingTemperature",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.NominalEvaporatingTemperature",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.NominalHeatRejectionRate",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.NominalPowerConsumption",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.CapacityCurve",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.CoefficientOfPerformanceCurve",
    "dsmvifc:programe.CP.IfcPset_ChillerTypeCommon.FullLoadRatioCurve"
  ],
  "dsmvifc:IfcMask.IfcPset_CoilOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CoilOccurrence.HasSoundAttenuation"
  ],
  "dsmvifc:IfcMask.IfcPset_CoilTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CoilTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CoilTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_CoilTypeCommon.OperationalTemperatureRange",
    "dsmvifc:programe.CP.IfcPset_CoilTypeCommon.AirflowRateRange",
    "dsmvifc:programe.CP.IfcPset_CoilTypeCommon.NominalSensibleCapacity",
    "dsmvifc:programe.CP.IfcPset_CoilTypeCommon.NominalLatentCapacity",
    "dsmvifc:programe.CP.IfcPset_CoilTypeCommon.NominalUA",
    "dsmvifc:programe.CP.IfcPset_CoilTypeCommon.PlacementType"
  ],
  "dsmvifc:IfcMask.IfcPset_CoilTypeHydronic":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.FluidPressureRange",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.CoilCoolant",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.CoilConnectionDirection",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.CoilFluidArrangement",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.CoilFaceArea",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.HeatExchangeSurfaceArea",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.PrimarySurfaceArea",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.SecondarySurfaceArea",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.TotalUACurves",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.WaterPressureDropCurve",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.BypassFactor",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.SensibleHeatRatio",
    "dsmvifc:programe.CP.IfcPset_CoilTypeHydronic.WetCoilFraction"
  ],
  "dsmvifc:IfcMask.IfcPset_CommunicationsApplianceTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CommunicationsApplianceTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CommunicationsApplianceTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_CompressorTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.PowerSource",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.RefrigerantClass",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.MinimumPartLoadRatio",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.MaximumPartLoadRatio",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.CompressorSpeed",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.NominalCapacity",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.IdealCapacity",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.IdealShaftPower",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.HasHotGasBypass",
    "dsmvifc:programe.CP.IfcPset_CompressorTypeCommon.ImpellerDiameter"
  ],
  "dsmvifc:IfcMask.IfcPset_CondenserTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CondenserTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CondenserTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_CondenserTypeCommon.RefrigerantClass",
    "dsmvifc:programe.CP.IfcPset_CondenserTypeCommon.ExternalSurfaceArea",
    "dsmvifc:programe.CP.IfcPset_CondenserTypeCommon.InternalSurfaceArea",
    "dsmvifc:programe.CP.IfcPset_CondenserTypeCommon.InternalRefrigerantVolume",
    "dsmvifc:programe.CP.IfcPset_CondenserTypeCommon.InternalWaterVolume",
    "dsmvifc:programe.CP.IfcPset_CondenserTypeCommon.NominalHeatTransferArea",
    "dsmvifc:programe.CP.IfcPset_CondenserTypeCommon.NominalHeatTransferCoefficient"
  ],
  "dsmvifc:IfcMask.IfcPset_ControllerTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ControllerTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_ControllerTypeFloating":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ControllerTypeFloating.ControlType",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeFloating.Labels",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeFloating.Range",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeFloating.Value",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeFloating.SignalOffset",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeFloating.SignalFactor",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeFloating.SignalTime"
  ],
  "dsmvifc:IfcMask.IfcPset_ControllerTypeMultiPosition":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ControllerTypeMultiPosition.ControlType",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeMultiPosition.Labels",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeMultiPosition.Range",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeMultiPosition.Value"
  ],
  "dsmvifc:IfcMask.IfcPset_ControllerTypeProgrammable":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProgrammable.ControlType",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProgrammable.FirmwareVersion",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProgrammable.SoftwareVersion",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProgrammable.Application"
  ],
  "dsmvifc:IfcMask.IfcPset_ControllerTypeProportional":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProportional.ControlType",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProportional.Labels",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProportional.Range",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProportional.Value",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProportional.ProportionalConstant",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProportional.IntegralConstant",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProportional.DerivativeConstant",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProportional.SignalTimeIncrease",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeProportional.SignalTimeDecrease"
  ],
  "dsmvifc:IfcMask.IfcPset_ControllerTypeTwoPosition":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ControllerTypeTwoPosition.ControlType",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeTwoPosition.Labels",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeTwoPosition.Polarity",
    "dsmvifc:programe.CP.IfcPset_ControllerTypeTwoPosition.Value"
  ],
  "dsmvifc:IfcMask.IfcPset_CooledBeamTypeActive":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeActive.AirFlowConfiguration",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeActive.AirflowRateRange",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeActive.SupplyAirConnectionType",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeActive.ConnectionSize"
  ],
  "dsmvifc:IfcMask.IfcPset_CooledBeamTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.IsFreeHanging",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.PipeConnection",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.WaterFlowControlSystemType",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.WaterPressureRange",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalCoolingCapacity",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalSurroundingTemperatureCooling",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalSurroundingHumidityCooling",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalSupplyWaterTemperatureCooling",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalReturnWaterTemperatureCooling",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalWaterFlowCooling",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalHeatingCapacity",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalSurroundingTemperatureHeating",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalSupplyWaterTemperatureHeating",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalReturnWaterTemperatureHeating",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.NominalWaterFlowHeating",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.IntegratedLightingType",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.FinishColor",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.CoilLength",
    "dsmvifc:programe.CP.IfcPset_CooledBeamTypeCommon.CoilWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_CoolingTowerTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.NominalCapacity",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.CircuitType",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.FlowArrangement",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.SprayType",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.CapacityControl",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.ControlStrategy",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.NumberOfCells",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.BasinReserveVolume",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.LiftElevationDifference",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.WaterRequirement",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.OperationTemperatureRange",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.AmbientDesignDryBulbTemperature",
    "dsmvifc:programe.CP.IfcPset_CoolingTowerTypeCommon.AmbientDesignWetBulbTemperature"
  ],
  "dsmvifc:IfcMask.IfcPset_DamperOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DamperOccurrence.SizingMethod"
  ],
  "dsmvifc:IfcMask.IfcPset_DamperTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.Operation",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.Orientation",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.BladeThickness",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.BladeAction",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.BladeShape",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.BladeEdge",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.NumberofBlades",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.FaceArea",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.MaximumAirFlowRate",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.TemperatureRange",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.MaximumWorkingPressure",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.TemperatureRating",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.NominalAirFlowRate",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.OpenPressureDrop",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.LeakageFullyClosed",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.LossCoefficentCurve",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.FrameType",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.FrameDepth",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.FrameThickness",
    "dsmvifc:programe.CP.IfcPset_DamperTypeCommon.CloseOffRating"
  ],
  "dsmvifc:IfcMask.IfcPset_DamperTypeControlDamper":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DamperTypeControlDamper.TorqueRange",
    "dsmvifc:programe.CP.IfcPset_DamperTypeControlDamper.ControlDamperOperation"
  ],
  "dsmvifc:IfcMask.IfcPset_DamperTypeFireDamper":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DamperTypeFireDamper.ActuationType",
    "dsmvifc:programe.CP.IfcPset_DamperTypeFireDamper.ClosureRatingEnum",
    "dsmvifc:programe.CP.IfcPset_DamperTypeFireDamper.FireResistanceRating",
    "dsmvifc:programe.CP.IfcPset_DamperTypeFireDamper.FusibleLinkTemperature"
  ],
  "dsmvifc:IfcMask.IfcPset_DamperTypeFireSmokeDamper":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DamperTypeFireSmokeDamper.ControlType",
    "dsmvifc:programe.CP.IfcPset_DamperTypeFireSmokeDamper.ActuationType",
    "dsmvifc:programe.CP.IfcPset_DamperTypeFireSmokeDamper.ClosureRatingEnum",
    "dsmvifc:programe.CP.IfcPset_DamperTypeFireSmokeDamper.FireResistanceRating",
    "dsmvifc:programe.CP.IfcPset_DamperTypeFireSmokeDamper.FusibleLinkTemperature"
  ],
  "dsmvifc:IfcMask.IfcPset_DamperTypeSmokeDamper":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DamperTypeSmokeDamper.ControlType"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionBoardOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionBoardOccurrence.IsMain",
    "dsmvifc:programe.CP.IfcPset_DistributionBoardOccurrence.IsSkilledOperator"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionBoardTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionBoardTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_DistributionBoardTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionChamberElementCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionChamberElementTypeFormedDuct":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeFormedDuct.ClearWidth",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeFormedDuct.ClearDepth",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeFormedDuct.WallThickness",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeFormedDuct.BaseThickness",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeFormedDuct.AccessCoverLoadRating"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionChamberElementTypeInspectionChamber":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.ChamberLengthOrRadius",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.ChamberWidth",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.InvertLevel",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.SoffitLevel",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.WallThickness",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.BaseThickness",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.WithBackdrop",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.AccessLengthOrRadius",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.AccessWidth",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionChamber.AccessCoverLoadRating"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionChamberElementTypeInspectionPit":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionPit.Length",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionPit.Width",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeInspectionPit.Depth"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionChamberElementTypeManhole":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.InvertLevel",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.SoffitLevel",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.WallThickness",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.BaseThickness",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.IsShallow",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.HasSteps",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.WithBackdrop",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.AccessLengthOrRadius",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.AccessWidth",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeManhole.AccessCoverLoadRating"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionChamberElementTypeMeterChamber":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeMeterChamber.ChamberLengthOrRadius",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeMeterChamber.ChamberWidth",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeMeterChamber.WallThickness",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeMeterChamber.BaseThickness"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionChamberElementTypeSump":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeSump.Length",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeSump.Width",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeSump.InvertLevel"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionChamberElementTypeTrench":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeTrench.Width",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeTrench.Depth",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeTrench.InvertLevel"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionChamberElementTypeValveChamber":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeValveChamber.ChamberLengthOrRadius",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeValveChamber.ChamberWidth",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeValveChamber.WallThickness",
    "dsmvifc:programe.CP.IfcPset_DistributionChamberElementTypeValveChamber.BaseThickness"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionFlowElementCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionFlowElementCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_DistributionFlowElementCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionSystemCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionSystemCommon.Reference"
  ],
  "dsmvifc:IfcMask.IfcPset_DistributionSystemTypeElectrical":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DistributionSystemTypeElectrical.ElectricalSystemType",
    "dsmvifc:programe.CP.IfcPset_DistributionSystemTypeElectrical.ElectricalSystemCategory",
    "dsmvifc:programe.CP.IfcPset_DistributionSystemTypeElectrical.Diversity",
    "dsmvifc:programe.CP.IfcPset_DistributionSystemTypeElectrical.NumberOfLiveConductors",
    "dsmvifc:programe.CP.IfcPset_DistributionSystemTypeElectrical.MaximumAllowedVoltageDrop",
    "dsmvifc:programe.CP.IfcPset_DistributionSystemTypeElectrical.NetImpedance"
  ],
  "dsmvifc:IfcMask.IfcPset_DuctFittingOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DuctFittingOccurrence.InteriorRoughnessCoefficient",
    "dsmvifc:programe.CP.IfcPset_DuctFittingOccurrence.HasLiner",
    "dsmvifc:programe.CP.IfcPset_DuctFittingOccurrence.Color"
  ],
  "dsmvifc:IfcMask.IfcPset_DuctFittingTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DuctFittingTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_DuctFittingTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_DuctFittingTypeCommon.PressureClass",
    "dsmvifc:programe.CP.IfcPset_DuctFittingTypeCommon.PressureRange",
    "dsmvifc:programe.CP.IfcPset_DuctFittingTypeCommon.TemperatureRange"
  ],
  "dsmvifc:IfcMask.IfcPset_DuctSegmentOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DuctSegmentOccurrence.InteriorRoughnessCoefficient",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentOccurrence.HasLiner",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentOccurrence.Color"
  ],
  "dsmvifc:IfcMask.IfcPset_DuctSegmentTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DuctSegmentTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentTypeCommon.Shape",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentTypeCommon.WorkingPressure",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentTypeCommon.PressureRange",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentTypeCommon.TemperatureRange",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentTypeCommon.LongitudinalSeam",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentTypeCommon.Reinforcement",
    "dsmvifc:programe.CP.IfcPset_DuctSegmentTypeCommon.ReinforcementSpacing"
  ],
  "dsmvifc:IfcMask.IfcPset_DuctSilencerTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_DuctSilencerTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_DuctSilencerTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_DuctSilencerTypeCommon.HydraulicDiameter",
    "dsmvifc:programe.CP.IfcPset_DuctSilencerTypeCommon.Length",
    "dsmvifc:programe.CP.IfcPset_DuctSilencerTypeCommon.Weight",
    "dsmvifc:programe.CP.IfcPset_DuctSilencerTypeCommon.AirFlowrateRange",
    "dsmvifc:programe.CP.IfcPset_DuctSilencerTypeCommon.WorkingPressureRange",
    "dsmvifc:programe.CP.IfcPset_DuctSilencerTypeCommon.TemperatureRange",
    "dsmvifc:programe.CP.IfcPset_DuctSilencerTypeCommon.HasExteriorInsulation"
  ],
  "dsmvifc:IfcMask.IfcPset_ElectricalDeviceCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.RatedCurrent",
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.RatedVoltage",
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.NominalFrequencyRange",
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.PowerFactor",
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.ConductorFunction",
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.NumberOfPoles",
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.HasProtectiveEarth",
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.InsulationStandardClass",
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.IP_Code",
    "dsmvifc:programe.CP.IfcPset_ElectricalDeviceCommon.IK_Code"
  ],
  "dsmvifc:IfcMask.IfcPset_ElectricApplianceTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElectricApplianceTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ElectricApplianceTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_ElectricApplianceTypeDishwasher":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElectricApplianceTypeDishwasher.DishwasherType"
  ],
  "dsmvifc:IfcMask.IfcPset_ElectricApplianceTypeElectricCooker":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElectricApplianceTypeElectricCooker.ElectricCookerType"
  ],
  "dsmvifc:IfcMask.IfcPset_ElectricFlowStorageDeviceTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.NominalSupplyVoltage",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.NominalSupplyVoltageOffset",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.NominalFrequency",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.ConnectedConductorFunction",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.ShortCircuit3PoleMaximumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.ShortCircuit3PolePowerFactorMaximumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.ShortCircuit2PoleMinimumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.ShortCircuit2PolePowerFactorMinimumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.ShortCircuit1PoleMaximumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.ShortCircuit1PolePowerFactorMaximumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.ShortCircuit1PoleMinimumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.ShortCircuit1PolePowerFactorMinimumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.EarthFault1PoleMaximumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.EarthFault1PolePowerFactorMaximumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.EarthFault1PoleMinimumState",
    "dsmvifc:programe.CP.IfcPset_ElectricFlowStorageDeviceTypeCommon.EarthFault1PolePowerFactorMinimumState"
  ],
  "dsmvifc:IfcMask.IfcPset_ElectricGeneratorTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElectricGeneratorTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ElectricGeneratorTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ElectricGeneratorTypeCommon.ElectricGeneratorEfficiency",
    "dsmvifc:programe.CP.IfcPset_ElectricGeneratorTypeCommon.StartCurrentFactor",
    "dsmvifc:programe.CP.IfcPset_ElectricGeneratorTypeCommon.MaximumPowerOutput"
  ],
  "dsmvifc:IfcMask.IfcPset_ElectricMotorTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.MaximumPowerOutput",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.ElectricMotorEfficiency",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.StartCurrentFactor",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.StartingTime",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.TeTime",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.LockedRotorCurrent",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.MotorEnclosureType",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.FrameSize",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.IsGuarded",
    "dsmvifc:programe.CP.IfcPset_ElectricMotorTypeCommon.HasPartWinding"
  ],
  "dsmvifc:IfcMask.IfcPset_ElectricTimeControlTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ElectricTimeControlTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ElectricTimeControlTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_EngineTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_EngineTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_EngineTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_EngineTypeCommon.EnergySource"
  ],
  "dsmvifc:IfcMask.IfcPset_EvaporativeCoolerTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_EvaporativeCoolerTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_EvaporativeCoolerTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_EvaporativeCoolerTypeCommon.FlowArrangement",
    "dsmvifc:programe.CP.IfcPset_EvaporativeCoolerTypeCommon.HeatExchangeArea",
    "dsmvifc:programe.CP.IfcPset_EvaporativeCoolerTypeCommon.OperationTemperatureRange",
    "dsmvifc:programe.CP.IfcPset_EvaporativeCoolerTypeCommon.WaterRequirement",
    "dsmvifc:programe.CP.IfcPset_EvaporativeCoolerTypeCommon.EffectivenessTable",
    "dsmvifc:programe.CP.IfcPset_EvaporativeCoolerTypeCommon.AirPressureDropCurve",
    "dsmvifc:programe.CP.IfcPset_EvaporativeCoolerTypeCommon.WaterPressDropCurve"
  ],
  "dsmvifc:IfcMask.IfcPset_EvaporatorTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.EvaporatorMediumType",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.EvaporatorCoolant",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.RefrigerantClass",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.ExternalSurfaceArea",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.InternalSurfaceArea",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.InternalRefrigerantVolume",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.InternalWaterVolume",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.NominalHeatTransferArea",
    "dsmvifc:programe.CP.IfcPset_EvaporatorTypeCommon.NominalHeatTransferCoefficient"
  ],
  "dsmvifc:IfcMask.IfcPset_FanCentrifugal":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FanCentrifugal.DischargePosition",
    "dsmvifc:programe.CP.IfcPset_FanCentrifugal.DirectionOfRotation",
    "dsmvifc:programe.CP.IfcPset_FanCentrifugal.Arrangement"
  ],
  "dsmvifc:IfcMask.IfcPset_FanOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FanOccurrence.DischargeType",
    "dsmvifc:programe.CP.IfcPset_FanOccurrence.ApplicationOfFan",
    "dsmvifc:programe.CP.IfcPset_FanOccurrence.CoilPosition",
    "dsmvifc:programe.CP.IfcPset_FanOccurrence.MotorPosition",
    "dsmvifc:programe.CP.IfcPset_FanOccurrence.FanMountingType",
    "dsmvifc:programe.CP.IfcPset_FanOccurrence.FractionOfMotorHeatToAirStream",
    "dsmvifc:programe.CP.IfcPset_FanOccurrence.ImpellerDiameter"
  ],
  "dsmvifc:IfcMask.IfcPset_FanTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.MotorDriveType",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.CapacityControlType",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.OperationTemperatureRange",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.NominalAirFlowRate",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.NominalTotalPressure",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.NominalStaticPressure",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.NominalRotationSpeed",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.NominalPowerRate",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.OperationalCriteria",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.PressureCurve",
    "dsmvifc:programe.CP.IfcPset_FanTypeCommon.EfficiencyCurve"
  ],
  "dsmvifc:IfcMask.IfcPset_FilterTypeAirParticleFilter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.AirParticleFilterType",
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.SeparationType",
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.DustHoldingCapacity",
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.FaceSurfaceArea",
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.MediaExtendedArea",
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.NominalCountedEfficiency",
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.NominalWeightedEfficiency",
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.PressureDropCurve",
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.CountedEfficiencyCurve",
    "dsmvifc:programe.CP.IfcPset_FilterTypeAirParticleFilter.WeightedEfficiencyCurve"
  ],
  "dsmvifc:IfcMask.IfcPset_FilterTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.Weight",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.InitialResistance",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.FinalResistance",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.OperationTemperatureRange",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.FlowRateRange",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.NominalFilterFaceVelocity",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.NominalMediaSurfaceVelocity",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.NominalPressureDrop",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.NominalFlowrate",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.NominalParticleGeometricMeanDiameter",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCommon.NominalParticleGeometricStandardDeviation"
  ],
  "dsmvifc:IfcMask.IfcPset_FilterTypeCompressedAirFilter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FilterTypeCompressedAirFilter.CompressedAirFilterType",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCompressedAirFilter.OperationPressureMax",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCompressedAirFilter.ParticleAbsorptionCurve",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCompressedAirFilter.AutomaticCondensateDischarge",
    "dsmvifc:programe.CP.IfcPset_FilterTypeCompressedAirFilter.CloggingIndicator"
  ],
  "dsmvifc:IfcMask.IfcPset_FilterTypeWaterFilter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FilterTypeWaterFilter.WaterFilterType"
  ],
  "dsmvifc:IfcMask.IfcPset_FireSuppressionTerminalTypeBreechingInlet":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeBreechingInlet.BreechingInletType",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeBreechingInlet.InletDiameter",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeBreechingInlet.OutletDiameter",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeBreechingInlet.CouplingType",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeBreechingInlet.HasCaps"
  ],
  "dsmvifc:IfcMask.IfcPset_FireSuppressionTerminalTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_FireSuppressionTerminalTypeFireHydrant":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.FireHydrantType",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.PumperConnectionSize",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.NumberOfHoseConnections",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.HoseConnectionSize",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.DischargeFlowRate",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.FlowClass",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.WaterIsPotable",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.PressureRating",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.BodyColor",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeFireHydrant.CapColor"
  ],
  "dsmvifc:IfcMask.IfcPset_FireSuppressionTerminalTypeHoseReel":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeHoseReel.HoseReelType",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeHoseReel.HoseReelMountingType",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeHoseReel.InletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeHoseReel.HoseDiameter",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeHoseReel.HoseLength",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeHoseReel.HoseNozzleType",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeHoseReel.ClassOfService",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeHoseReel.ClassificationAuthority"
  ],
  "dsmvifc:IfcMask.IfcPset_FireSuppressionTerminalTypeSprinkler":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.SprinklerType",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.Activation",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.Response",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.ActivationTemperature",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.CoverageArea",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.HasDeflector",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.BulbLiquidColor",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.DischargeFlowRate",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.ResidualFlowingPressure",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.DischargeCoefficient",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.MaximumWorkingPressure",
    "dsmvifc:programe.CP.IfcPset_FireSuppressionTerminalTypeSprinkler.ConnectionSize"
  ],
  "dsmvifc:IfcMask.IfcPset_FlowMeterOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FlowMeterOccurrence.Purpose"
  ],
  "dsmvifc:IfcMask.IfcPset_FlowMeterTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeCommon.ReadOutType",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeCommon.RemoteReading"
  ],
  "dsmvifc:IfcMask.IfcPset_FlowMeterTypeEnergyMeter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeEnergyMeter.NominalCurrent",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeEnergyMeter.MaximumCurrent",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeEnergyMeter.MultipleTarriff"
  ],
  "dsmvifc:IfcMask.IfcPset_FlowMeterTypeGasMeter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeGasMeter.GasType",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeGasMeter.ConnectionSize",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeGasMeter.MaximumFlowRate",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeGasMeter.MaximumPressureLoss"
  ],
  "dsmvifc:IfcMask.IfcPset_FlowMeterTypeOilMeter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeOilMeter.ConnectionSize",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeOilMeter.MaximumFlowRate"
  ],
  "dsmvifc:IfcMask.IfcPset_FlowMeterTypeWaterMeter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeWaterMeter.Type",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeWaterMeter.ConnectionSize",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeWaterMeter.MaximumFlowRate",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeWaterMeter.MaximumPressureLoss",
    "dsmvifc:programe.CP.IfcPset_FlowMeterTypeWaterMeter.BackflowPreventerType"
  ],
  "dsmvifc:IfcMask.IfcPset_HeatExchangerTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_HeatExchangerTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_HeatExchangerTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_HeatExchangerTypeCommon.Arrangement"
  ],
  "dsmvifc:IfcMask.IfcPset_HeatExchangerTypePlate":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_HeatExchangerTypePlate.NumberOfPlates"
  ],
  "dsmvifc:IfcMask.IfcPset_HumidifierTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.Application",
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.Weight",
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.NominalMoistureGain",
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.NominalAirFlowRate",
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.InternalControl",
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.WaterRequirement",
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.SaturationEfficiencyCurve",
    "dsmvifc:programe.CP.IfcPset_HumidifierTypeCommon.AirPressureDropCurve"
  ],
  "dsmvifc:IfcMask.IfcPset_InterceptorTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.NominalBodyLength",
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.NominalBodyWidth",
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.NominalBodyDepth",
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.InletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.OutletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.CoverLength",
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.CoverWidth",
    "dsmvifc:programe.CP.IfcPset_InterceptorTypeCommon.VentilatingPipeSize"
  ],
  "dsmvifc:IfcMask.IfcPset_JunctionBoxTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_JunctionBoxTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_JunctionBoxTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_JunctionBoxTypeCommon.NumberOfGangs",
    "dsmvifc:programe.CP.IfcPset_JunctionBoxTypeCommon.ClearDepth",
    "dsmvifc:programe.CP.IfcPset_JunctionBoxTypeCommon.ShapeType",
    "dsmvifc:programe.CP.IfcPset_JunctionBoxTypeCommon.PlacingType",
    "dsmvifc:programe.CP.IfcPset_JunctionBoxTypeCommon.MountingType",
    "dsmvifc:programe.CP.IfcPset_JunctionBoxTypeCommon.IsExternal",
    "dsmvifc:programe.CP.IfcPset_JunctionBoxTypeCommon.IP_Code"
  ],
  "dsmvifc:IfcMask.IfcPset_LampTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.ContributedLuminousFlux",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.LightEmitterNominalPower",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.LampMaintenanceFactor",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.LampBallastType",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.LampCompensationType",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.ColorAppearance",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.Spectrum",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.ColorTemperature",
    "dsmvifc:programe.CP.IfcPset_LampTypeCommon.ColorRenderingIndex"
  ],
  "dsmvifc:IfcMask.IfcPset_LightFixtureTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.NumberOfSources",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.TotalWattage",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.LightFixtureMountingType",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.LightFixturePlacingType",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.MaintenanceFactor",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.MaximumPlenumSensibleLoad",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.MaximumSpaceSensibleLoad",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeCommon.SensibleLoadToRadiant"
  ],
  "dsmvifc:IfcMask.IfcPset_LightFixtureTypeSecurityLighting":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeSecurityLighting.SecurityLightingType",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeSecurityLighting.FixtureHeight",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeSecurityLighting.SelfTestFunction",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeSecurityLighting.BackupSupplySystem",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeSecurityLighting.PictogramEscapeDirection",
    "dsmvifc:programe.CP.IfcPset_LightFixtureTypeSecurityLighting.Addressablility"
  ],
  "dsmvifc:IfcMask.IfcPset_MedicalDeviceTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MedicalDeviceTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_MedicalDeviceTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_MotorConnectionTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_MotorConnectionTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_MotorConnectionTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_OutletTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_OutletTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_OutletTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_OutletTypeCommon.IsPluggableOutlet",
    "dsmvifc:programe.CP.IfcPset_OutletTypeCommon.NumberOfSockets"
  ],
  "dsmvifc:IfcMask.IfcPset_OutletTypeCommunication":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_OutletTypeCommunication.IsWireLess"
  ],
  "dsmvifc:IfcMask.IfcPset_PipeConnectionFlanged":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PipeConnectionFlanged.FlangeTable",
    "dsmvifc:programe.CP.IfcPset_PipeConnectionFlanged.FlangeStandard",
    "dsmvifc:programe.CP.IfcPset_PipeConnectionFlanged.BoreSize",
    "dsmvifc:programe.CP.IfcPset_PipeConnectionFlanged.FlangeDiameter",
    "dsmvifc:programe.CP.IfcPset_PipeConnectionFlanged.FlangeThickness",
    "dsmvifc:programe.CP.IfcPset_PipeConnectionFlanged.NumberOfBoltholes",
    "dsmvifc:programe.CP.IfcPset_PipeConnectionFlanged.BoltSize",
    "dsmvifc:programe.CP.IfcPset_PipeConnectionFlanged.BoltholePitch"
  ],
  "dsmvifc:IfcMask.IfcPset_PipeFittingOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PipeFittingOccurrence.InteriorRoughnessCoefficient",
    "dsmvifc:programe.CP.IfcPset_PipeFittingOccurrence.Color"
  ],
  "dsmvifc:IfcMask.IfcPset_PipeFittingTypeBend":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeBend.BendAngle",
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeBend.BendRadius"
  ],
  "dsmvifc:IfcMask.IfcPset_PipeFittingTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeCommon.PressureClass",
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeCommon.PressureRange",
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeCommon.TemperatureRange"
  ],
  "dsmvifc:IfcMask.IfcPset_PipeFittingTypeJunction":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeJunction.JunctionType",
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeJunction.JunctionLeftAngle",
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeJunction.JunctionLeftRadius",
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeJunction.JunctionRightAngle",
    "dsmvifc:programe.CP.IfcPset_PipeFittingTypeJunction.JunctionRightRadius"
  ],
  "dsmvifc:IfcMask.IfcPset_PipeSegmentOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PipeSegmentOccurrence.InteriorRoughnessCoefficient",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentOccurrence.Color",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentOccurrence.Gradient",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentOccurrence.InvertElevation"
  ],
  "dsmvifc:IfcMask.IfcPset_PipeSegmentTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeCommon.WorkingPressure",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeCommon.PressureRange",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeCommon.TemperatureRange",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeCommon.NominalDiameter"
  ],
  "dsmvifc:IfcMask.IfcPset_PipeSegmentTypeCulvert":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeCulvert.InternalWidth",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeCulvert.ClearDepth"
  ],
  "dsmvifc:IfcMask.IfcPset_PipeSegmentTypeGutter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeGutter.Slope",
    "dsmvifc:programe.CP.IfcPset_PipeSegmentTypeGutter.FlowRating"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.VoltageLevel",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.NominalCurrent",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.BreakerUnitCurve"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.VoltageLevel",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.BreakerUnitFuseMeltingCurve",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.BreakerUnitFuseBreakingingCurve"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceBreakerUnitIPICurve":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.VoltageLevel",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.NominalCurrent",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.BreakerUnitIPICurve"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.PowerLoss",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.VoltageLevel",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.NominalCurrents",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.ICU60947",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.ICS60947",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.ICN60898",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.ICS60898"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.PerformanceClasses",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.VoltageLevel",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.ICU60947",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.ICS60947",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.ICW60947",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.ICM60947"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.PoleUsage",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.LongTimeFunction",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.ShortTimeFunction",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.ShortTimei2tFunction",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.GroundFaultFunction",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.GroundFaulti2tFunction",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.LongTimeCurrentSetValue",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.ShortTimeCurrentSetValue",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.InstantaneousCurrentSetValue",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.GroundFaultCurrentSetValue",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.LongTimeDelay",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.ShortTimeTrippingTime",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.InstantaneousTrippingTime",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceOccurrence.GroundFaultTrippingTime"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingCurve":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingCurve.TrippingCurveType",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingCurve.TrippingCurve"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingFunctionGCurve":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IsSelectable",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.NominalCurrentAdjusted",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.ExternalAdjusted",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.ReleaseCurrent",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.ReleaseTime",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.CurrentTolerance1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.CurrentToleranceLimit1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.CurrentTolerance2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IsCurrentTolerancePositiveOnly",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.TimeTolerance1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.TimeToleranceLimit1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.TimeTolerance2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IsTimeTolerancePositiveOnly",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.ReleaseCurrentI2tStart",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.ReleaseTimeI2tStart",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.ReleaseCurrentI2tEnd",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.ReleaseTimeI2tEnd"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingFunctionICurve":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IsSelectable",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.NominalCurrentAdjusted",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.ReleaseCurrent",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.ReleaseTime",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.CurrentTolerance1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.CurrentToleranceLimit1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.CurrentTolerance2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IsCurrentTolerancePositiveOnly",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.TimeTolerance1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.TimeToleranceLimit1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.TimeTolerance2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IsTimeTolerancePositiveOnly",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.MaxAdjustmentX_ICS",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IsOffWhenSFunctionOn"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingFunctionLCurve":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IsSelectable",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.UpperCurrent1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.UpperCurrent2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.UpperTime1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.UpperTime2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.LowerCurrent1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.LowerCurrent2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.LowerTime1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.LowerTime2"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingFunctionSCurve":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IsSelectable",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.NominalCurrentAdjusted",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.ReleaseCurrent",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.ReleaseTime",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.CurrentTolerance1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.CurrentToleranceLimit1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.CurrentTolerance2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IsCurrentTolerancePositiveOnly",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.TimeTolerance1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.TimeToleranceLimit1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.TimeTolerance2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IsTimeTolerancePositiveOnly",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.ReleaseCurrentI2tStart",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.ReleaseTimeI2tStart",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.ReleaseCurrentI2tEnd",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.ReleaseTimeI2tEnd",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IsOffWhenLfunctionOn"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.AdjustmentValueType",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.AdjustmentRange",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.AdjustmentRangeStepValue",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.AdjustmentValues",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.AdjustmentDesignation"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.AdjustmentValueType",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.AdjustmentRange",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.AdjustmentRangeStepValue",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.AdjustmentValues",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.AdjustmentDesignation",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.CurrentForTimeDelay",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.I2TApplicability"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.Standard",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.UseInDiscrimination",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.AtexVerified",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.OldDevice",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.LimitingTerminalSize"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.ElectroMagneticTrippingUnitType",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.I1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.I2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.T2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.DefinedTemperature",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.TemperatureFactor",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.I4",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.I5",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.T5",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.CurveDesignation"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.ElectronicTrippingUnitType",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.NominalCurrents",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.N_Protection",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.N_Protection_50",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.N_Protection_100",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.N_Protection_Select"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.TrippingUnitReleaseCurrent"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.ThermalTrippingUnitType",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.I1",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.I2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.T2",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.DefinedTemperature",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.TemperatureFactor",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.CurveDesignation"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTypeCircuitBreaker":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeCircuitBreaker.PerformanceClasses",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeCircuitBreaker.VoltageLevel",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeCircuitBreaker.ICU60947",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeCircuitBreaker.ICS60947",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeCircuitBreaker.ICW60947",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeCircuitBreaker.ICM60947"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker.EarthFailureDeviceType",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker.Sensitivity"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTypeFuseDisconnector":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeFuseDisconnector.FuseDisconnectorType",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeFuseDisconnector.VoltageLevel",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IC60269",
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeFuseDisconnector.PowerLoss"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTypeResidualCurrentCircuitBreaker":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeResidualCurrentCircuitBreaker.Sensitivity"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTypeResidualCurrentSwitch":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeResidualCurrentSwitch.Sensitivity"
  ],
  "dsmvifc:IfcMask.IfcPset_ProtectiveDeviceTypeVaristor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ProtectiveDeviceTypeVaristor.VaristorType"
  ],
  "dsmvifc:IfcMask.IfcPset_PumpOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PumpOccurrence.ImpellerDiameter",
    "dsmvifc:programe.CP.IfcPset_PumpOccurrence.BaseType",
    "dsmvifc:programe.CP.IfcPset_PumpOccurrence.DriveConnectionType"
  ],
  "dsmvifc:IfcMask.IfcPset_PumpTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_PumpTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_PumpTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_PumpTypeCommon.FlowRateRange",
    "dsmvifc:programe.CP.IfcPset_PumpTypeCommon.FlowResistanceRange",
    "dsmvifc:programe.CP.IfcPset_PumpTypeCommon.ConnectionSize",
    "dsmvifc:programe.CP.IfcPset_PumpTypeCommon.TemperatureRange",
    "dsmvifc:programe.CP.IfcPset_PumpTypeCommon.NetPositiveSuctionHead",
    "dsmvifc:programe.CP.IfcPset_PumpTypeCommon.NominalRotationSpeed"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeBath":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeBath.BathType",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeBath.DrainSize",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeBath.HasGrabHandles"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeBidet":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeBidet.Mounting",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeBidet.SpilloverLevel",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeBidet.DrainSize"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeCistern":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCistern.CisternHeight",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCistern.CisternCapacity",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCistern.IsSingleFlush",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCistern.FlushType",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCistern.FlushRate",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCistern.IsAutomaticFlush"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCommon.NominalLength",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCommon.NominalWidth",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCommon.NominalDepth",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeCommon.Color"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeSanitaryFountain":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeSanitaryFountain.FountainType",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeSanitaryFountain.Mounting",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeSanitaryFountain.DrainSize"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeShower":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeShower.ShowerType",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeShower.HasTray",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeShower.ShowerHeadDescription",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeShower.DrainSize"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeSink":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeSink.SinkType",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeSink.Mounting",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeSink.Color",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeSink.DrainSize",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeSink.MountingOffset"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeToiletPan":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeToiletPan.ToiletType",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeToiletPan.ToiletPanType",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeToiletPan.PanMounting",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeToiletPan.SpilloverLevel"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeUrinal":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeUrinal.UrinalType",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeUrinal.Mounting",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeUrinal.SpilloverLevel"
  ],
  "dsmvifc:IfcMask.IfcPset_SanitaryTerminalTypeWashHandBasin":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeWashHandBasin.WashHandBasinType",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeWashHandBasin.Mounting",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeWashHandBasin.DrainSize",
    "dsmvifc:programe.CP.IfcPset_SanitaryTerminalTypeWashHandBasin.MountingOffset"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeCO2Sensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeCO2Sensor.SetPointConcentration"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_SensorTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeConductanceSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeConductanceSensor.SetPointConductance"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeContactSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeContactSensor.SetPointContact"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeFireSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeFireSensor.FireSensorSetPoint",
    "dsmvifc:programe.CP.IfcPset_SensorTypeFireSensor.AccuracyOfFireSensor",
    "dsmvifc:programe.CP.IfcPset_SensorTypeFireSensor.TimeConstant"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeFlowSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeFlowSensor.SetPointFlow"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeFrostSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeFrostSensor.SetPointFrost"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeGasSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeGasSensor.GasDetected",
    "dsmvifc:programe.CP.IfcPset_SensorTypeGasSensor.SetPointConcentration",
    "dsmvifc:programe.CP.IfcPset_SensorTypeGasSensor.CoverageArea"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeHeatSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeHeatSensor.CoverageArea",
    "dsmvifc:programe.CP.IfcPset_SensorTypeHeatSensor.SetPointTemperature",
    "dsmvifc:programe.CP.IfcPset_SensorTypeHeatSensor.RateOfTemperatureRise"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeHumiditySensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeHumiditySensor.SetPointHumidity"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeIdentifierSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeIdentifierSensor.SetPointIdentifier"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeIonConcentrationSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeIonConcentrationSensor.SubstanceDetected",
    "dsmvifc:programe.CP.IfcPset_SensorTypeIonConcentrationSensor.SetPointConcentration"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeLevelSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeLevelSensor.SetPointLevel"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeLightSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeLightSensor.SetPointIlluminance"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeMoistureSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeMoistureSensor.SetPointMoisture"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeMovementSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeMovementSensor.MovementSensingType",
    "dsmvifc:programe.CP.IfcPset_SensorTypeMovementSensor.SetPointMovement"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypePHSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypePHSensor.SetPointPH"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypePressureSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypePressureSensor.SetPointPressure",
    "dsmvifc:programe.CP.IfcPset_SensorTypePressureSensor.IsSwitch"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeRadiationSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeRadiationSensor.SetPointRadiation"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeRadioactivitySensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeRadioactivitySensor.SetPointRadioactivity"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeSmokeSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeSmokeSensor.CoverageArea",
    "dsmvifc:programe.CP.IfcPset_SensorTypeSmokeSensor.SetPointConcentration",
    "dsmvifc:programe.CP.IfcPset_SensorTypeSmokeSensor.HasBuiltInAlarm"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeSoundSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeSoundSensor.SetPointSound"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeTemperatureSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeTemperatureSensor.TemperatureSensorType",
    "dsmvifc:programe.CP.IfcPset_SensorTypeTemperatureSensor.SetPointTemperature"
  ],
  "dsmvifc:IfcMask.IfcPset_SensorTypeWindSensor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SensorTypeWindSensor.WindSensorType",
    "dsmvifc:programe.CP.IfcPset_SensorTypeWindSensor.SetPointSpeed"
  ],
  "dsmvifc:IfcMask.IfcPset_SolarDeviceTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SolarDeviceTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_SolarDeviceTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceHeaterTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.PlacementType",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.TemperatureClassification",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.HeatTransferDimension",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.HeatTransferMedium",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.EnergySource",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.BodyMass",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.ThermalMassHeatCapacity",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.OutputCapacity",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.ThermalEfficiency",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.NumberOfPanels",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeCommon.NumberOfSections"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceHeaterTypeConvector":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeConvector.ConvectorType"
  ],
  "dsmvifc:IfcMask.IfcPset_SpaceHeaterTypeRadiator":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeRadiator.RadiatorType",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeRadiator.TubingLength",
    "dsmvifc:programe.CP.IfcPset_SpaceHeaterTypeRadiator.WaterContent"
  ],
  "dsmvifc:IfcMask.IfcPset_StackTerminalTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_StackTerminalTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_StackTerminalTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeCommon.NumberOfGangs",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeCommon.SwitchFunction",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeCommon.HasLock",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeCommon.IsIlluminated",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeCommon.Legend",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeCommon.SetPoint"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeContactor":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeContactor.ContactorType"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeDimmerSwitch":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeDimmerSwitch.DimmerType"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeEmergencyStop":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeEmergencyStop.SwitchOperation"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeKeypad":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeKeypad.KeypadType"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeMomentarySwitch":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeMomentarySwitch.MomentaryType"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeSelectorSwitch":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeSelectorSwitch.SelectorType",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeSelectorSwitch.SwitchUsage",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeSelectorSwitch.SwitchActivation"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeStarter":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeStarter.StarterType"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeSwitchDisconnector":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeSwitchDisconnector.SwitchDisconnectorType",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeSwitchDisconnector.LoadDisconnectionType"
  ],
  "dsmvifc:IfcMask.IfcPset_SwitchingDeviceTypeToggleSwitch":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeToggleSwitch.ToggleSwitchType",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeToggleSwitch.SwitchUsage",
    "dsmvifc:programe.CP.IfcPset_SwitchingDeviceTypeToggleSwitch.SwitchActivation"
  ],
  "dsmvifc:IfcMask.IfcPset_TankOccurrence":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TankOccurrence.TankComposition",
    "dsmvifc:programe.CP.IfcPset_TankOccurrence.HasLadder",
    "dsmvifc:programe.CP.IfcPset_TankOccurrence.HasVisualIndicator"
  ],
  "dsmvifc:IfcMask.IfcPset_TankTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.AccessType",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.StorageType",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.NominalLengthOrDiameter",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.NominalWidthOrDiameter",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.NominalDepth",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.NominalCapacity",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.EffectiveCapacity",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.OperatingWeight",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.PatternType",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.EndShapeType",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.FirstCurvatureRadius",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.SecondCurvatureRadius",
    "dsmvifc:programe.CP.IfcPset_TankTypeCommon.NumberOfSections"
  ],
  "dsmvifc:IfcMask.IfcPset_TankTypeExpansion":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TankTypeExpansion.ChargePressure",
    "dsmvifc:programe.CP.IfcPset_TankTypeExpansion.PressureRegulatorSetting",
    "dsmvifc:programe.CP.IfcPset_TankTypeExpansion.ReliefValveSetting"
  ],
  "dsmvifc:IfcMask.IfcPset_TankTypePreformed":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TankTypePreformed.PatternType",
    "dsmvifc:programe.CP.IfcPset_TankTypePreformed.EndShapeType",
    "dsmvifc:programe.CP.IfcPset_TankTypePreformed.FirstCurvatureRadius",
    "dsmvifc:programe.CP.IfcPset_TankTypePreformed.SecondCurvatureRadius"
  ],
  "dsmvifc:IfcMask.IfcPset_TankTypePressureVessel":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TankTypePressureVessel.ChargePressure",
    "dsmvifc:programe.CP.IfcPset_TankTypePressureVessel.PressureRegulatorSetting",
    "dsmvifc:programe.CP.IfcPset_TankTypePressureVessel.ReliefValveSetting"
  ],
  "dsmvifc:IfcMask.IfcPset_TankTypeSectional":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TankTypeSectional.NumberOfSections",
    "dsmvifc:programe.CP.IfcPset_TankTypeSectional.SectionLength",
    "dsmvifc:programe.CP.IfcPset_TankTypeSectional.SectionWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_TransformerTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.PrimaryVoltage",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.SecondaryVoltage",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.PrimaryCurrent",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.SecondaryCurrent",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.PrimaryFrequency",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.SecondaryFrequency",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.PrimaryApparentPower",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.SecondaryApparentPower",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.MaximumApparentPower",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.SecondaryCurrentType",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.ShortCircuitVoltage",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.RealImpedanceRatio",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.ImaginaryImpedanceRatio",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.TransformerVectorGroup",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.IsNeutralPrimaryTerminalAvailable",
    "dsmvifc:programe.CP.IfcPset_TransformerTypeCommon.IsNeutralSecondaryTerminalAvailable"
  ],
  "dsmvifc:IfcMask.IfcPset_TubeBundleTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.NumberOfRows",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.StaggeredRowSpacing",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.InLineRowSpacing",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.NumberOfCircuits",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.FoulingFactor",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.ThermalConductivity",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.Length",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.Volume",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.NominalDiameter",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.OutsideDiameter",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.InsideDiameter",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.HorizontalSpacing",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.VerticalSpacing",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeCommon.HasTurbulator"
  ],
  "dsmvifc:IfcMask.IfcPset_TubeBundleTypeFinned":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeFinned.Spacing",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeFinned.Thickness",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeFinned.ThermalConductivity",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeFinned.Length",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeFinned.Height",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeFinned.Diameter",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeFinned.FinCorrugatedType",
    "dsmvifc:programe.CP.IfcPset_TubeBundleTypeFinned.HasCoating"
  ],
  "dsmvifc:IfcMask.IfcPset_UnitaryEquipmentTypeAirConditioningUnit":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.SensibleCoolingCapacity",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.LatentCoolingCapacity",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.CoolingEfficiency",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.HeatingCapacity",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.HeatingEfficiency",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.CondenserFlowrate",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.CondenserEnteringTemperature",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.CondenserLeavingTemperature",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.OutsideAirFlowrate"
  ],
  "dsmvifc:IfcMask.IfcPset_UnitaryEquipmentTypeAirHandler":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirHandler.AirHandlerConstruction",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirHandler.AirHandlerFanCoilArrangement",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeAirHandler.DualDeck"
  ],
  "dsmvifc:IfcMask.IfcPset_UnitaryEquipmentTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_UnitaryEquipmentTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypeAirRelease":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypeAirRelease.IsAutomatic"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_ValveTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_ValveTypeCommon.ValvePattern",
    "dsmvifc:programe.CP.IfcPset_ValveTypeCommon.ValveOperation",
    "dsmvifc:programe.CP.IfcPset_ValveTypeCommon.ValveMechanism",
    "dsmvifc:programe.CP.IfcPset_ValveTypeCommon.Size",
    "dsmvifc:programe.CP.IfcPset_ValveTypeCommon.TestPressure",
    "dsmvifc:programe.CP.IfcPset_ValveTypeCommon.WorkingPressure",
    "dsmvifc:programe.CP.IfcPset_ValveTypeCommon.CloseOffRating"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypeDrawOffCock":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypeDrawOffCock.HasHoseUnion"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypeFaucet":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypeFaucet.FaucetType",
    "dsmvifc:programe.CP.IfcPset_ValveTypeFaucet.FaucetOperation",
    "dsmvifc:programe.CP.IfcPset_ValveTypeFaucet.FaucetFunction",
    "dsmvifc:programe.CP.IfcPset_ValveTypeFaucet.Finish",
    "dsmvifc:programe.CP.IfcPset_ValveTypeFaucet.FaucetTopDescription"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypeFlushing":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypeFlushing.FlushingRate",
    "dsmvifc:programe.CP.IfcPset_ValveTypeFlushing.HasIntegralShutOffDevice",
    "dsmvifc:programe.CP.IfcPset_ValveTypeFlushing.IsHighPressure"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypeGasTap":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypeGasTap.HasHoseUnion"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypeIsolating":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypeIsolating.IsNormallyOpen",
    "dsmvifc:programe.CP.IfcPset_ValveTypeIsolating.IsolatingPurpose"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypeMixing":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypeMixing.MixerControl",
    "dsmvifc:programe.CP.IfcPset_ValveTypeMixing.OutletConnectionSize"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypePressureReducing":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypePressureReducing.UpstreamPressure",
    "dsmvifc:programe.CP.IfcPset_ValveTypePressureReducing.DownstreamPressure"
  ],
  "dsmvifc:IfcMask.IfcPset_ValveTypePressureRelief":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_ValveTypePressureRelief.ReliefPressure"
  ],
  "dsmvifc:IfcMask.IfcPset_VibrationIsolatorTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_VibrationIsolatorTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_VibrationIsolatorTypeCommon.Status",
    "dsmvifc:programe.CP.IfcPset_VibrationIsolatorTypeCommon.VibrationTransmissibility",
    "dsmvifc:programe.CP.IfcPset_VibrationIsolatorTypeCommon.IsolatorStaticDeflection",
    "dsmvifc:programe.CP.IfcPset_VibrationIsolatorTypeCommon.IsolatorCompressibility",
    "dsmvifc:programe.CP.IfcPset_VibrationIsolatorTypeCommon.MaximumSupportedWeight",
    "dsmvifc:programe.CP.IfcPset_VibrationIsolatorTypeCommon.NominalHeight"
  ],
  "dsmvifc:IfcMask.IfcPset_WasteTerminalTypeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeCommon.Reference",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_WasteTerminalTypeFloorTrap":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.NominalBodyLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.NominalBodyWidth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.NominalBodyDepth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.IsForSullageWater",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.SpilloverLevel",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.TrapType",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.HasStrainer",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.OutletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.InletPatternType",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.InletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.CoverLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorTrap.CoverWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_WasteTerminalTypeFloorWaste":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorWaste.NominalBodyLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorWaste.NominalBodyWidth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorWaste.NominalBodyDepth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorWaste.OutletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorWaste.CoverLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeFloorWaste.CoverWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_WasteTerminalTypeGullySump":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.NominalSumpLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.NominalSumpWidth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.NominalSumpDepth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.GullyType",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.TrapType",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.OutletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.BackInletPatternType",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.InletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.CoverLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullySump.CoverWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_WasteTerminalTypeGullyTrap":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.NominalBodyLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.NominalBodyWidth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.NominalBodyDepth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.GullyType",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.HasStrainer",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.TrapType",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.OutletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.BackInletPatternType",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.InletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.CoverLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeGullyTrap.CoverWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_WasteTerminalTypeRoofDrain":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeRoofDrain.NominalBodyLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeRoofDrain.NominalBodyWidth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeRoofDrain.NominalBodyDepth",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeRoofDrain.OutletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeRoofDrain.CoverLength",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeRoofDrain.CoverWidth"
  ],
  "dsmvifc:IfcMask.IfcPset_WasteTerminalTypeWasteDisposalUnit":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeWasteDisposalUnit.DrainConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeWasteDisposalUnit.OutletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeWasteDisposalUnit.NominalDepth"
  ],
  "dsmvifc:IfcMask.IfcPset_WasteTerminalTypeWasteTrap":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeWasteTrap.WasteTrapType",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeWasteTrap.OutletConnectionSize",
    "dsmvifc:programe.CP.IfcPset_WasteTerminalTypeWasteTrap.InletConnectionSize"
  ],
  "dsmvifc:IfcMask.IfcQto_ActuatorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ActuatorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ActuatorBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_AirTerminalBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_AirTerminalBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_AirTerminalBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_AirTerminalBaseQuantities.Perimeter",
    "dsmvifc:programe.CP.IfcQto_AirTerminalBaseQuantities.TotalSurfaceArea"
  ],
  "dsmvifc:IfcMask.IfcQto_AirTerminalBoxTypeBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_AirTerminalBoxTypeBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_AirTerminalBoxTypeBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_AirToAirHeatRecoveryBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_AirToAirHeatRecoveryBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_AirToAirHeatRecoveryBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_AlarmBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_AlarmBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_AlarmBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_AudioVisualApplianceBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_AudioVisualApplianceBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_AudioVisualApplianceBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_BoilerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_BoilerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_BoilerBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_BoilerBaseQuantities.NetWeight",
    "dsmvifc:programe.CP.IfcQto_BoilerBaseQuantities.TotalSurfaceArea"
  ],
  "dsmvifc:IfcMask.IfcQto_BurnerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_BurnerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_BurnerBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_CableCarrierFittingBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CableCarrierFittingBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CableCarrierFittingBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_CableCarrierSegmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CableCarrierSegmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CableCarrierSegmentBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_CableCarrierSegmentBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_CableCarrierSegmentBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_CableCarrierSegmentBaseQuantities.OuterSurfaceArea"
  ],
  "dsmvifc:IfcMask.IfcQto_CableFittingBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CableFittingBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CableFittingBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_CableSegmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CableSegmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CableSegmentBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_CableSegmentBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_CableSegmentBaseQuantities.CrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_CableSegmentBaseQuantities.OuterSurfaceArea"
  ],
  "dsmvifc:IfcMask.IfcQto_ChillerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ChillerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ChillerBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_CoilBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CoilBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CoilBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_CommunicationsApplianceBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CommunicationsApplianceBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CommunicationsApplianceBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_CompressorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CompressorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CompressorBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_CondenserBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CondenserBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CondenserBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_ControllerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ControllerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ControllerBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_CooledBeamBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CooledBeamBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CooledBeamBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_CoolingTowerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_CoolingTowerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_CoolingTowerBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DamperBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DamperBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DamperBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DistributionBoardBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DistributionBoardBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DistributionBoardBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_DistributionBoardBaseQuantities.NumberOfCircuits"
  ],
  "dsmvifc:IfcMask.IfcQto_DistributionChamberElementBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DistributionChamberElementBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DistributionChamberElementBaseQuantities.GrossSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DistributionChamberElementBaseQuantities.NetSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DistributionChamberElementBaseQuantities.GrossVolume",
    "dsmvifc:programe.CP.IfcQto_DistributionChamberElementBaseQuantities.NetVolume"
  ],
  "dsmvifc:IfcMask.IfcQto_DuctFittingBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DuctFittingBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DuctFittingBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DuctFittingBaseQuantities.GrossCrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DuctFittingBaseQuantities.NetCrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DuctFittingBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DuctFittingBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DuctSegmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DuctSegmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DuctSegmentBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_DuctSegmentBaseQuantities.GrossCrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DuctSegmentBaseQuantities.NetCrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_DuctSegmentBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_DuctSegmentBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_DuctSilencerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_DuctSilencerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_DuctSilencerBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_ElectricApplianceBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ElectricApplianceBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ElectricApplianceBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_ElectricFlowStorageDeviceBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ElectricFlowStorageDeviceBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ElectricFlowStorageDeviceBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_ElectricGeneratorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ElectricGeneratorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ElectricGeneratorBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_ElectricMotorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ElectricMotorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ElectricMotorBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_ElectricTimeControlBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ElectricTimeControlBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ElectricTimeControlBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_EvaporativeCoolerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_EvaporativeCoolerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_EvaporativeCoolerBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_EvaporatorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_EvaporatorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_EvaporatorBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_FanBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_FanBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_FanBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_FilterBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_FilterBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_FilterBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_FireSuppressionTerminalBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_FireSuppressionTerminalBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_FireSuppressionTerminalBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_FlowMeterBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_FlowMeterBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_FlowMeterBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_HeatExchangerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_HeatExchangerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_HeatExchangerBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_HumidifierBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_HumidifierBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_HumidifierBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_InterceptorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_InterceptorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_InterceptorBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_JunctionBoxBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_JunctionBoxBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_JunctionBoxBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_JunctionBoxBaseQuantities.NumberOfGangs"
  ],
  "dsmvifc:IfcMask.IfcQto_LampBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_LampBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_LampBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_LightFixtureBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_LightFixtureBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_LightFixtureBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_MotorConnectionBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_MotorConnectionBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_MotorConnectionBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_OutletBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_OutletBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_OutletBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_PipeFittingBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_PipeFittingBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_PipeFittingBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_PipeFittingBaseQuantities.GrossCrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_PipeFittingBaseQuantities.NetCrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_PipeFittingBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_PipeFittingBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_PipeFittingBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_PipeSegmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_PipeSegmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_PipeSegmentBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_PipeSegmentBaseQuantities.GrossCrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_PipeSegmentBaseQuantities.NetCrossSectionArea",
    "dsmvifc:programe.CP.IfcQto_PipeSegmentBaseQuantities.OuterSurfaceArea",
    "dsmvifc:programe.CP.IfcQto_PipeSegmentBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_PipeSegmentBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_ProtectiveDeviceBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ProtectiveDeviceBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ProtectiveDeviceBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_ProtectiveDeviceTrippingUnitBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ProtectiveDeviceTrippingUnitBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ProtectiveDeviceTrippingUnitBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_PumpBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_PumpBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_PumpBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_SanitaryTerminalBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_SanitaryTerminalBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_SanitaryTerminalBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_SensorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_SensorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_SensorBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_SolarDeviceBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_SolarDeviceBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_SolarDeviceBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_SolarDeviceBaseQuantities.GrossArea"
  ],
  "dsmvifc:IfcMask.IfcQto_SpaceHeaterBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_SpaceHeaterBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_SpaceHeaterBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_SpaceHeaterBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_SpaceHeaterBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_StackTerminalBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_StackTerminalBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_StackTerminalBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_SwitchingDeviceBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_SwitchingDeviceBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_SwitchingDeviceBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_TankBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_TankBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_TankBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_TankBaseQuantities.NetWeight",
    "dsmvifc:programe.CP.IfcQto_TankBaseQuantities.TotalSurfaceArea"
  ],
  "dsmvifc:IfcMask.IfcQto_TransformerBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_TransformerBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_TransformerBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_TubeBundleBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_TubeBundleBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_TubeBundleBaseQuantities.GrossWeight",
    "dsmvifc:programe.CP.IfcQto_TubeBundleBaseQuantities.NetWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_UnitaryEquipmentBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_UnitaryEquipmentBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_UnitaryEquipmentBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_ValveBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ValveBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ValveBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_VibrationIsolatorBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_VibrationIsolatorBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_VibrationIsolatorBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcQto_WasteTerminalBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_WasteTerminalBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_WasteTerminalBaseQuantities.GrossWeight"
  ],
  "dsmvifc:IfcMask.IfcBorehole":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcBorehole.ObjectType",
    "dsmvifc:programe.CP.IfcBorehole.Tag",
    "dsmvifc:programe.CP.IfcBorehole.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcGeomodel":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcGeomodel.ObjectType",
    "dsmvifc:programe.CP.IfcGeomodel.Tag"
  ],
  "dsmvifc:IfcMask.IfcGeoScienceFeature":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcGeoScienceFeature.ObjectType",
    "dsmvifc:programe.CP.IfcGeoScienceFeature.Tag",
    "dsmvifc:programe.CP.IfcGeoScienceFeature.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcGeoScienceModel":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcGeoScienceModel.ObjectType",
    "dsmvifc:programe.CP.IfcGeoScienceModel.Tag",
    "dsmvifc:programe.CP.IfcGeoScienceModel.PredefinedType"
  ],
  "dsmvifc:IfcMask.IfcGeoslice":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcGeoslice.ObjectType",
    "dsmvifc:programe.CP.IfcGeoslice.Tag"
  ],
  "dsmvifc:IfcMask.IfcSolidStratum":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcSolidStratum.ObjectType",
    "dsmvifc:programe.CP.IfcSolidStratum.Tag"
  ],
  "dsmvifc:IfcMask.IfcVoidStratum":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcVoidStratum.ObjectType",
    "dsmvifc:programe.CP.IfcVoidStratum.Tag"
  ],
  "dsmvifc:IfcMask.IfcWaterStratum":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcWaterStratum.ObjectType",
    "dsmvifc:programe.CP.IfcWaterStratum.Tag"
  ],
  "dsmvifc:IfcMask.IfcPset_BoreholeCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_BoreholeCommon.BoreholeState",
    "dsmvifc:programe.CP.IfcPset_BoreholeCommon.CapDepth",
    "dsmvifc:programe.CP.IfcPset_BoreholeCommon.CapMaterial",
    "dsmvifc:programe.CP.IfcPset_BoreholeCommon.FillingDepth",
    "dsmvifc:programe.CP.IfcPset_BoreholeCommon.FillingMaterial",
    "dsmvifc:programe.CP.IfcPset_BoreholeCommon.GroundwaterDepth",
    "dsmvifc:programe.CP.IfcPset_BoreholeCommon.LiningMaterial",
    "dsmvifc:programe.CP.IfcPset_BoreholeCommon.LiningThickness"
  ],
  "dsmvifc:IfcMask.IfcPset_GeotechnicalAssemblyCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_GeotechnicalAssemblyCommon.Limitations",
    "dsmvifc:programe.CP.IfcPset_GeotechnicalAssemblyCommon.Methodology",
    "dsmvifc:programe.CP.IfcPset_GeotechnicalAssemblyCommon.Purpose",
    "dsmvifc:programe.CP.IfcPset_GeotechnicalAssemblyCommon.Status"
  ],
  "dsmvifc:IfcMask.IfcPset_GeotechnicalStratumCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_GeotechnicalStratumCommon.Colour",
    "dsmvifc:programe.CP.IfcPset_GeotechnicalStratumCommon.IsTopographic",
    "dsmvifc:programe.CP.IfcPset_GeotechnicalStratumCommon.PiezometricHead",
    "dsmvifc:programe.CP.IfcPset_GeotechnicalStratumCommon.PiezometricPressure",
    "dsmvifc:programe.CP.IfcPset_GeotechnicalStratumCommon.Status",
    "dsmvifc:programe.CP.IfcPset_GeotechnicalStratumCommon.Texture"
  ],
  "dsmvifc:IfcMask.IfcPset_SolidStratumCapacity":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.CohesionBehaviour",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.FrictionAngle",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.FrictionBehaviour",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.GrainSize",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.HydraulicConductivity",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.LoadbearingCapacity",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.NValue",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.PermeabilityBehaviour",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.PoisonsRatio",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.PwaveVelocity",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.Resistivity",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.SettlementBehaviour",
    "dsmvifc:programe.CP.IfcPset_SolidStratumCapacity.SwaveVelocity"
  ],
  "dsmvifc:IfcMask.IfcPset_SolidStratumComposition":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.AirVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.BouldersVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.ClayVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.CobblesVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.ContaminantVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.FillVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.GravelVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.OrganicVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.RockVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.SandVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.SiltVolume",
    "dsmvifc:programe.CP.IfcPset_SolidStratumComposition.WaterVolume"
  ],
  "dsmvifc:IfcMask.IfcPset_Uncertainty":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_Uncertainty.Description",
    "dsmvifc:programe.CP.IfcPset_Uncertainty.HorizontalUncertainty",
    "dsmvifc:programe.CP.IfcPset_Uncertainty.LinearUncertainty",
    "dsmvifc:programe.CP.IfcPset_Uncertainty.OrthogonalUncertainty",
    "dsmvifc:programe.CP.IfcPset_Uncertainty.VerticalUncertainty",
    "dsmvifc:programe.CP.IfcPset_Uncertainty.Basis"
  ],
  "dsmvifc:IfcMask.IfcPset_WaterStratumCommon":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcPset_WaterStratumCommon.AnnualRange",
    "dsmvifc:programe.CP.IfcPset_WaterStratumCommon.AnnualTrend",
    "dsmvifc:programe.CP.IfcPset_WaterStratumCommon.IsFreshwater",
    "dsmvifc:programe.CP.IfcPset_WaterStratumCommon.SeicheRange",
    "dsmvifc:programe.CP.IfcPset_WaterStratumCommon.TidalRange",
    "dsmvifc:programe.CP.IfcPset_WaterStratumCommon.WaveRange"
  ],
  "dsmvifc:IfcMask.IfcQto_ArealStratumBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_ArealStratumBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_ArealStratumBaseQuantities.Area",
    "dsmvifc:programe.CP.IfcQto_ArealStratumBaseQuantities.Length",
    "dsmvifc:programe.CP.IfcQto_ArealStratumBaseQuantities.PlanLength"
  ],
  "dsmvifc:IfcMask.IfcQto_LinearStratumBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_LinearStratumBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_LinearStratumBaseQuantities.Diameter",
    "dsmvifc:programe.CP.IfcQto_LinearStratumBaseQuantities.Length"
  ],
  "dsmvifc:IfcMask.IfcQto_VolumetricStratumBaseQuantities":[
    {
      "property": "reuseMask",
      "mask": "dsmveno:BaseMask.public"
    },
    "dsmvifc:programe.CP.IfcQto_VolumetricStratumBaseQuantities.MethodOfMeasurement",
    "dsmvifc:programe.CP.IfcQto_VolumetricStratumBaseQuantities.Area",
    "dsmvifc:programe.CP.IfcQto_VolumetricStratumBaseQuantities.Mass",
    "dsmvifc:programe.CP.IfcQto_VolumetricStratumBaseQuantities.PlanArea",
    "dsmvifc:programe.CP.IfcQto_VolumetricStratumBaseQuantities.Volume"
  ],
  "dsmvifc:IfcMask.AllAttributes":[
    {
        "property": "reuseMask",
        "mask": "dsmveno:DefaultBusMask.public"
    },
    "dsmvifc:Ifc.AllAttributes"
  ]
}
